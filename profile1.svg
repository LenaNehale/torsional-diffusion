<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1130" onload="init(evt)" viewBox="0 0 1200 1130" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1130" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile1.svg -- python train.py --train_mode on_policy --smi CC(=O)Nc1ccc2c(c1)CCCC2=O --energy_fn mmff --seed 1 --num_points 30</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1119.00"> </text><svg id="frames" x="10" width="1180" total_samples="32193"><g><title>&lt;module&gt; (torch/__init__.py:237) (97 samples, 0.30%)</title><rect x="0.3013%" y="164" width="0.3013%" height="15" fill="rgb(227,0,7)" fg:x="97" fg:w="97"/><text x="0.5513%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (97 samples, 0.30%)</title><rect x="0.3013%" y="180" width="0.3013%" height="15" fill="rgb(217,0,24)" fg:x="97" fg:w="97"/><text x="0.5513%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (97 samples, 0.30%)</title><rect x="0.3013%" y="196" width="0.3013%" height="15" fill="rgb(221,193,54)" fg:x="97" fg:w="97"/><text x="0.5513%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (97 samples, 0.30%)</title><rect x="0.3013%" y="212" width="0.3013%" height="15" fill="rgb(248,212,6)" fg:x="97" fg:w="97"/><text x="0.5513%" y="222.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (97 samples, 0.30%)</title><rect x="0.3013%" y="228" width="0.3013%" height="15" fill="rgb(208,68,35)" fg:x="97" fg:w="97"/><text x="0.5513%" y="238.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (97 samples, 0.30%)</title><rect x="0.3013%" y="244" width="0.3013%" height="15" fill="rgb(232,128,0)" fg:x="97" fg:w="97"/><text x="0.5513%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (97 samples, 0.30%)</title><rect x="0.3013%" y="260" width="0.3013%" height="15" fill="rgb(207,160,47)" fg:x="97" fg:w="97"/><text x="0.5513%" y="270.50"></text></g><g><title>&lt;module&gt; (train.py:1) (204 samples, 0.63%)</title><rect x="0.0000%" y="68" width="0.6337%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="204"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (204 samples, 0.63%)</title><rect x="0.0000%" y="84" width="0.6337%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="204"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (204 samples, 0.63%)</title><rect x="0.0000%" y="100" width="0.6337%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="204"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (204 samples, 0.63%)</title><rect x="0.0000%" y="116" width="0.6337%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="204"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (204 samples, 0.63%)</title><rect x="0.0000%" y="132" width="0.6337%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="204"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (204 samples, 0.63%)</title><rect x="0.0000%" y="148" width="0.6337%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="204"/><text x="0.2500%" y="158.50"></text></g><g><title>get_model (utils.py:10) (92 samples, 0.29%)</title><rect x="0.6337%" y="84" width="0.2858%" height="15" fill="rgb(206,188,39)" fg:x="204" fg:w="92"/><text x="0.8837%" y="94.50"></text></g><g><title>__init__ (score_model.py:97) (67 samples, 0.21%)</title><rect x="0.7113%" y="100" width="0.2081%" height="15" fill="rgb(217,207,13)" fg:x="229" fg:w="67"/><text x="0.9613%" y="110.50"></text></g><g><title>__init__ (score_model.py:22) (67 samples, 0.21%)</title><rect x="0.7113%" y="116" width="0.2081%" height="15" fill="rgb(231,73,38)" fg:x="229" fg:w="67"/><text x="0.9613%" y="126.50"></text></g><g><title>__init__ (e3nn/o3/_tensor_product/_sub.py:60) (67 samples, 0.21%)</title><rect x="0.7113%" y="132" width="0.2081%" height="15" fill="rgb(225,20,46)" fg:x="229" fg:w="67"/><text x="0.9613%" y="142.50"></text></g><g><title>__init__ (e3nn/o3/_tensor_product/_tensor_product.py:398) (49 samples, 0.15%)</title><rect x="0.7672%" y="148" width="0.1522%" height="15" fill="rgb(210,31,41)" fg:x="247" fg:w="49"/><text x="1.0172%" y="158.50"></text></g><g><title>_codegen_register (e3nn/util/codegen/_mixin.py:43) (49 samples, 0.15%)</title><rect x="0.7672%" y="164" width="0.1522%" height="15" fill="rgb(221,200,47)" fg:x="247" fg:w="49"/><text x="1.0172%" y="174.50"></text></g><g><title>script (torch/jit/_script.py:1338) (46 samples, 0.14%)</title><rect x="0.7766%" y="180" width="0.1429%" height="15" fill="rgb(226,26,5)" fg:x="250" fg:w="46"/><text x="1.0266%" y="190.50"></text></g><g><title>&lt;module&gt; (train.py:114) (106 samples, 0.33%)</title><rect x="0.6337%" y="68" width="0.3293%" height="15" fill="rgb(249,33,26)" fg:x="204" fg:w="106"/><text x="0.8837%" y="78.50"></text></g><g><title>_legacy_load (torch/serialization.py:1065) (196 samples, 0.61%)</title><rect x="1.7488%" y="148" width="0.6088%" height="15" fill="rgb(235,183,28)" fg:x="563" fg:w="196"/><text x="1.9988%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1241) (43 samples, 0.13%)</title><rect x="2.4229%" y="148" width="0.1336%" height="15" fill="rgb(221,5,38)" fg:x="780" fg:w="43"/><text x="2.6729%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1262) (53 samples, 0.16%)</title><rect x="2.5751%" y="148" width="0.1646%" height="15" fill="rgb(247,18,42)" fg:x="829" fg:w="53"/><text x="2.8251%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1269) (84 samples, 0.26%)</title><rect x="2.8081%" y="148" width="0.2609%" height="15" fill="rgb(241,131,45)" fg:x="904" fg:w="84"/><text x="3.0581%" y="158.50"></text></g><g><title>persistent_load (torch/serialization.py:1197) (34 samples, 0.11%)</title><rect x="3.5132%" y="164" width="0.1056%" height="15" fill="rgb(249,31,29)" fg:x="1131" fg:w="34"/><text x="3.7632%" y="174.50"></text></g><g><title>persistent_load (torch/serialization.py:1200) (76 samples, 0.24%)</title><rect x="3.6374%" y="164" width="0.2361%" height="15" fill="rgb(225,111,53)" fg:x="1171" fg:w="76"/><text x="3.8874%" y="174.50"></text></g><g><title>active_fake_mode (torch/_guards.py:875) (37 samples, 0.11%)</title><rect x="3.7586%" y="180" width="0.1149%" height="15" fill="rgb(238,160,17)" fg:x="1210" fg:w="37"/><text x="4.0086%" y="190.50"></text></g><g><title>persistent_load (torch/serialization.py:1203) (52 samples, 0.16%)</title><rect x="3.8735%" y="164" width="0.1615%" height="15" fill="rgb(214,148,48)" fg:x="1247" fg:w="52"/><text x="4.1235%" y="174.50"></text></g><g><title>persistent_load (torch/serialization.py:1208) (70 samples, 0.22%)</title><rect x="4.0972%" y="164" width="0.2174%" height="15" fill="rgb(232,36,49)" fg:x="1319" fg:w="70"/><text x="4.3472%" y="174.50"></text></g><g><title>_legacy_load (torch/serialization.py:1272) (384 samples, 1.19%)</title><rect x="3.1435%" y="148" width="1.1928%" height="15" fill="rgb(209,103,24)" fg:x="1012" fg:w="384"/><text x="3.3935%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1274) (177 samples, 0.55%)</title><rect x="4.3363%" y="148" width="0.5498%" height="15" fill="rgb(229,88,8)" fg:x="1396" fg:w="177"/><text x="4.5863%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1276) (59 samples, 0.18%)</title><rect x="4.8862%" y="148" width="0.1833%" height="15" fill="rgb(213,181,19)" fg:x="1573" fg:w="59"/><text x="5.1362%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1281) (56 samples, 0.17%)</title><rect x="5.0974%" y="148" width="0.1740%" height="15" fill="rgb(254,191,54)" fg:x="1641" fg:w="56"/><text x="5.3474%" y="158.50"></text></g><g><title>load (torch/serialization.py:1040) (1,222 samples, 3.80%)</title><rect x="1.5873%" y="132" width="3.7959%" height="15" fill="rgb(241,83,37)" fg:x="511" fg:w="1222"/><text x="1.8373%" y="142.50">load..</text></g><g><title>get (_collections_abc.py:763) (35 samples, 0.11%)</title><rect x="5.5167%" y="164" width="0.1087%" height="15" fill="rgb(233,36,39)" fg:x="1776" fg:w="35"/><text x="5.7667%" y="174.50"></text></g><g><title>load (torch/serialization.py:978) (59 samples, 0.18%)</title><rect x="5.4608%" y="132" width="0.1833%" height="15" fill="rgb(226,3,54)" fg:x="1758" fg:w="59"/><text x="5.7108%" y="142.50"></text></g><g><title>getenv (os.py:775) (42 samples, 0.13%)</title><rect x="5.5136%" y="148" width="0.1305%" height="15" fill="rgb(245,192,40)" fg:x="1775" fg:w="42"/><text x="5.7636%" y="158.50"></text></g><g><title>load (torch/serialization.py:997) (57 samples, 0.18%)</title><rect x="5.6783%" y="132" width="0.1771%" height="15" fill="rgb(238,167,29)" fg:x="1828" fg:w="57"/><text x="5.9283%" y="142.50"></text></g><g><title>_load_from_bytes (torch/storage.py:381) (1,392 samples, 4.32%)</title><rect x="1.5500%" y="116" width="4.3239%" height="15" fill="rgb(232,182,51)" fg:x="499" fg:w="1392"/><text x="1.8000%" y="126.50">_load..</text></g><g><title>_rebuild_tensor (torch/_utils.py:180) (103 samples, 0.32%)</title><rect x="5.8833%" y="132" width="0.3199%" height="15" fill="rgb(231,60,39)" fg:x="1894" fg:w="103"/><text x="6.1333%" y="142.50"></text></g><g><title>_rebuild_tensor_v2 (torch/_utils.py:202) (182 samples, 0.57%)</title><rect x="5.8739%" y="116" width="0.5653%" height="15" fill="rgb(208,69,12)" fg:x="1891" fg:w="182"/><text x="6.1239%" y="126.50"></text></g><g><title>_rebuild_tensor (torch/_utils.py:181) (76 samples, 0.24%)</title><rect x="6.2032%" y="132" width="0.2361%" height="15" fill="rgb(235,93,37)" fg:x="1997" fg:w="76"/><text x="6.4532%" y="142.50"></text></g><g><title>construct_loader (dataset.py:279) (1,776 samples, 5.52%)</title><rect x="0.9940%" y="84" width="5.5167%" height="15" fill="rgb(213,116,39)" fg:x="320" fg:w="1776"/><text x="1.2440%" y="94.50">constru..</text></g><g><title>__init__ (dataset.py:94) (1,776 samples, 5.52%)</title><rect x="0.9940%" y="100" width="5.5167%" height="15" fill="rgb(222,207,29)" fg:x="320" fg:w="1776"/><text x="1.2440%" y="110.50">__init_..</text></g><g><title>&lt;module&gt; (train.py:124) (1,777 samples, 5.52%)</title><rect x="0.9940%" y="68" width="5.5198%" height="15" fill="rgb(206,96,30)" fg:x="320" fg:w="1777"/><text x="1.2440%" y="78.50">&lt;module..</text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (50 samples, 0.16%)</title><rect x="6.6785%" y="116" width="0.1553%" height="15" fill="rgb(218,138,4)" fg:x="2150" fg:w="50"/><text x="6.9285%" y="126.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (50 samples, 0.16%)</title><rect x="6.6785%" y="132" width="0.1553%" height="15" fill="rgb(250,191,14)" fg:x="2150" fg:w="50"/><text x="6.9285%" y="142.50"></text></g><g><title>train (train.py:46) (52 samples, 0.16%)</title><rect x="6.6754%" y="84" width="0.1615%" height="15" fill="rgb(239,60,40)" fg:x="2149" fg:w="52"/><text x="6.9254%" y="94.50"></text></g><g><title>__iter__ (tqdm/std.py:1181) (51 samples, 0.16%)</title><rect x="6.6785%" y="100" width="0.1584%" height="15" fill="rgb(206,27,48)" fg:x="2150" fg:w="51"/><text x="6.9285%" y="110.50"></text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (45 samples, 0.14%)</title><rect x="6.8400%" y="132" width="0.1398%" height="15" fill="rgb(225,35,8)" fg:x="2202" fg:w="45"/><text x="7.0900%" y="142.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (45 samples, 0.14%)</title><rect x="6.8400%" y="148" width="0.1398%" height="15" fill="rgb(250,213,24)" fg:x="2202" fg:w="45"/><text x="7.0900%" y="158.50"></text></g><g><title>log_gfn_metrics (gfn_train.py:716) (47 samples, 0.15%)</title><rect x="6.8369%" y="100" width="0.1460%" height="15" fill="rgb(247,123,22)" fg:x="2201" fg:w="47"/><text x="7.0869%" y="110.50"></text></g><g><title>__iter__ (tqdm/std.py:1181) (47 samples, 0.15%)</title><rect x="6.8369%" y="116" width="0.1460%" height="15" fill="rgb(231,138,38)" fg:x="2201" fg:w="47"/><text x="7.0869%" y="126.50"></text></g><g><title>gfn_sgd (gfn_train.py:594) (46 samples, 0.14%)</title><rect x="6.9829%" y="116" width="0.1429%" height="15" fill="rgb(231,145,46)" fg:x="2248" fg:w="46"/><text x="7.2329%" y="126.50"></text></g><g><title>__iter__ (tqdm/std.py:1181) (45 samples, 0.14%)</title><rect x="6.9860%" y="132" width="0.1398%" height="15" fill="rgb(251,118,11)" fg:x="2249" fg:w="45"/><text x="7.2360%" y="142.50"></text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (45 samples, 0.14%)</title><rect x="6.9860%" y="148" width="0.1398%" height="15" fill="rgb(217,147,25)" fg:x="2249" fg:w="45"/><text x="7.2360%" y="158.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (45 samples, 0.14%)</title><rect x="6.9860%" y="164" width="0.1398%" height="15" fill="rgb(247,81,37)" fg:x="2249" fg:w="45"/><text x="7.2360%" y="174.50"></text></g><g><title>gfn_sgd (gfn_train.py:607) (34 samples, 0.11%)</title><rect x="7.2221%" y="116" width="0.1056%" height="15" fill="rgb(209,12,38)" fg:x="2325" fg:w="34"/><text x="7.4721%" y="126.50"></text></g><g><title>forward (score_model.py:131) (85 samples, 0.26%)</title><rect x="7.5544%" y="180" width="0.2640%" height="15" fill="rgb(227,1,9)" fg:x="2432" fg:w="85"/><text x="7.8044%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:201) (64 samples, 0.20%)</title><rect x="7.6197%" y="196" width="0.1988%" height="15" fill="rgb(248,47,43)" fg:x="2453" fg:w="64"/><text x="7.8697%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (64 samples, 0.20%)</title><rect x="7.6197%" y="212" width="0.1988%" height="15" fill="rgb(221,10,30)" fg:x="2453" fg:w="64"/><text x="7.8697%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (64 samples, 0.20%)</title><rect x="7.6197%" y="228" width="0.1988%" height="15" fill="rgb(210,229,1)" fg:x="2453" fg:w="64"/><text x="7.8697%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (64 samples, 0.20%)</title><rect x="7.6197%" y="244" width="0.1988%" height="15" fill="rgb(222,148,37)" fg:x="2453" fg:w="64"/><text x="7.8697%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (59 samples, 0.18%)</title><rect x="7.6352%" y="260" width="0.1833%" height="15" fill="rgb(234,67,33)" fg:x="2458" fg:w="59"/><text x="7.8852%" y="270.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (182 samples, 0.57%)</title><rect x="7.8589%" y="276" width="0.5653%" height="15" fill="rgb(247,98,35)" fg:x="2530" fg:w="182"/><text x="8.1089%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (182 samples, 0.57%)</title><rect x="7.8589%" y="292" width="0.5653%" height="15" fill="rgb(247,138,52)" fg:x="2530" fg:w="182"/><text x="8.1089%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (182 samples, 0.57%)</title><rect x="7.8589%" y="308" width="0.5653%" height="15" fill="rgb(213,79,30)" fg:x="2530" fg:w="182"/><text x="8.1089%" y="318.50"></text></g><g><title>forward (score_model.py:34) (184 samples, 0.57%)</title><rect x="7.8589%" y="228" width="0.5716%" height="15" fill="rgb(246,177,23)" fg:x="2530" fg:w="184"/><text x="8.1089%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (184 samples, 0.57%)</title><rect x="7.8589%" y="244" width="0.5716%" height="15" fill="rgb(230,62,27)" fg:x="2530" fg:w="184"/><text x="8.1089%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (184 samples, 0.57%)</title><rect x="7.8589%" y="260" width="0.5716%" height="15" fill="rgb(216,154,8)" fg:x="2530" fg:w="184"/><text x="8.1089%" y="270.50"></text></g><g><title>forward (score_model.py:139) (212 samples, 0.66%)</title><rect x="7.8557%" y="180" width="0.6585%" height="15" fill="rgb(244,35,45)" fg:x="2529" fg:w="212"/><text x="8.1057%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (212 samples, 0.66%)</title><rect x="7.8557%" y="196" width="0.6585%" height="15" fill="rgb(251,115,12)" fg:x="2529" fg:w="212"/><text x="8.1057%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (212 samples, 0.66%)</title><rect x="7.8557%" y="212" width="0.6585%" height="15" fill="rgb(240,54,50)" fg:x="2529" fg:w="212"/><text x="8.1057%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (306 samples, 0.95%)</title><rect x="8.5143%" y="196" width="0.9505%" height="15" fill="rgb(233,84,52)" fg:x="2741" fg:w="306"/><text x="8.7643%" y="206.50"></text></g><g><title>forward (score_model.py:141) (347 samples, 1.08%)</title><rect x="8.5143%" y="180" width="1.0779%" height="15" fill="rgb(207,117,47)" fg:x="2741" fg:w="347"/><text x="8.7643%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:175) (40 samples, 0.12%)</title><rect x="9.4679%" y="196" width="0.1243%" height="15" fill="rgb(249,43,39)" fg:x="3048" fg:w="40"/><text x="9.7179%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (40 samples, 0.12%)</title><rect x="9.4679%" y="212" width="0.1243%" height="15" fill="rgb(209,38,44)" fg:x="3048" fg:w="40"/><text x="9.7179%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (40 samples, 0.12%)</title><rect x="9.4679%" y="228" width="0.1243%" height="15" fill="rgb(236,212,23)" fg:x="3048" fg:w="40"/><text x="9.7179%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (40 samples, 0.12%)</title><rect x="9.4679%" y="244" width="0.1243%" height="15" fill="rgb(242,79,21)" fg:x="3048" fg:w="40"/><text x="9.7179%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (40 samples, 0.12%)</title><rect x="9.4679%" y="260" width="0.1243%" height="15" fill="rgb(211,96,35)" fg:x="3048" fg:w="40"/><text x="9.7179%" y="270.50"></text></g><g><title>forward (score_model.py:34) (42 samples, 0.13%)</title><rect x="9.6915%" y="228" width="0.1305%" height="15" fill="rgb(253,215,40)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (42 samples, 0.13%)</title><rect x="9.6915%" y="244" width="0.1305%" height="15" fill="rgb(211,81,21)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (42 samples, 0.13%)</title><rect x="9.6915%" y="260" width="0.1305%" height="15" fill="rgb(208,190,38)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="270.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (42 samples, 0.13%)</title><rect x="9.6915%" y="276" width="0.1305%" height="15" fill="rgb(235,213,38)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (42 samples, 0.13%)</title><rect x="9.6915%" y="292" width="0.1305%" height="15" fill="rgb(237,122,38)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (42 samples, 0.13%)</title><rect x="9.6915%" y="308" width="0.1305%" height="15" fill="rgb(244,218,35)" fg:x="3120" fg:w="42"/><text x="9.9415%" y="318.50"></text></g><g><title>forward (score_model.py:150) (47 samples, 0.15%)</title><rect x="9.6884%" y="180" width="0.1460%" height="15" fill="rgb(240,68,47)" fg:x="3119" fg:w="47"/><text x="9.9384%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (47 samples, 0.15%)</title><rect x="9.6884%" y="196" width="0.1460%" height="15" fill="rgb(210,16,53)" fg:x="3119" fg:w="47"/><text x="9.9384%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (47 samples, 0.15%)</title><rect x="9.6884%" y="212" width="0.1460%" height="15" fill="rgb(235,124,12)" fg:x="3119" fg:w="47"/><text x="9.9384%" y="222.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:167) (736 samples, 2.29%)</title><rect x="7.5544%" y="132" width="2.2862%" height="15" fill="rgb(224,169,11)" fg:x="2432" fg:w="736"/><text x="7.8044%" y="142.50">s..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (736 samples, 2.29%)</title><rect x="7.5544%" y="148" width="2.2862%" height="15" fill="rgb(250,166,2)" fg:x="2432" fg:w="736"/><text x="7.8044%" y="158.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (736 samples, 2.29%)</title><rect x="7.5544%" y="164" width="2.2862%" height="15" fill="rgb(242,216,29)" fg:x="2432" fg:w="736"/><text x="7.8044%" y="174.50">_..</text></g><g><title>_deepcopy (torch/storage.py:853) (427 samples, 1.33%)</title><rect x="10.0488%" y="212" width="1.3264%" height="15" fill="rgb(230,116,27)" fg:x="3235" fg:w="427"/><text x="10.2988%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (425 samples, 1.32%)</title><rect x="10.0550%" y="228" width="1.3202%" height="15" fill="rgb(228,99,48)" fg:x="3237" fg:w="425"/><text x="10.3050%" y="238.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (425 samples, 1.32%)</title><rect x="10.0550%" y="244" width="1.3202%" height="15" fill="rgb(253,11,6)" fg:x="3237" fg:w="425"/><text x="10.3050%" y="254.50"></text></g><g><title>clone (torch/storage.py:128) (425 samples, 1.32%)</title><rect x="10.0550%" y="260" width="1.3202%" height="15" fill="rgb(247,143,39)" fg:x="3237" fg:w="425"/><text x="10.3050%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (432 samples, 1.34%)</title><rect x="10.0457%" y="196" width="1.3419%" height="15" fill="rgb(236,97,10)" fg:x="3234" fg:w="432"/><text x="10.2957%" y="206.50"></text></g><g><title>modify_conformer (torsion.py:69) (456 samples, 1.42%)</title><rect x="10.0053%" y="164" width="1.4165%" height="15" fill="rgb(233,208,19)" fg:x="3221" fg:w="456"/><text x="10.2553%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (450 samples, 1.40%)</title><rect x="10.0239%" y="180" width="1.3978%" height="15" fill="rgb(216,164,2)" fg:x="3227" fg:w="450"/><text x="10.2739%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:86) (35 samples, 0.11%)</title><rect x="11.6143%" y="164" width="0.1087%" height="15" fill="rgb(220,129,5)" fg:x="3739" fg:w="35"/><text x="11.8643%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:88) (45 samples, 0.14%)</title><rect x="11.7230%" y="164" width="0.1398%" height="15" fill="rgb(242,17,10)" fg:x="3774" fg:w="45"/><text x="11.9730%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:109) (614 samples, 1.91%)</title><rect x="9.9991%" y="148" width="1.9072%" height="15" fill="rgb(242,107,0)" fg:x="3219" fg:w="614"/><text x="10.2491%" y="158.50">p..</text></g><g><title>sample_forward_trajs (gfn_train.py:187) (686 samples, 2.13%)</title><rect x="9.8438%" y="132" width="2.1309%" height="15" fill="rgb(251,28,31)" fg:x="3169" fg:w="686"/><text x="10.0938%" y="142.50">s..</text></g><g><title>deepcopy (copy.py:153) (91 samples, 0.28%)</title><rect x="12.0181%" y="276" width="0.2827%" height="15" fill="rgb(233,223,10)" fg:x="3869" fg:w="91"/><text x="12.2681%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (54 samples, 0.17%)</title><rect x="12.1331%" y="292" width="0.1677%" height="15" fill="rgb(215,21,27)" fg:x="3906" fg:w="54"/><text x="12.3831%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (53 samples, 0.16%)</title><rect x="12.1362%" y="308" width="0.1646%" height="15" fill="rgb(232,23,21)" fg:x="3907" fg:w="53"/><text x="12.3862%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (51 samples, 0.16%)</title><rect x="12.1424%" y="324" width="0.1584%" height="15" fill="rgb(244,5,23)" fg:x="3909" fg:w="51"/><text x="12.3924%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (107 samples, 0.33%)</title><rect x="11.9747%" y="244" width="0.3324%" height="15" fill="rgb(226,81,46)" fg:x="3855" fg:w="107"/><text x="12.2247%" y="254.50"></text></g><g><title>_deepcopy_list (copy.py:205) (107 samples, 0.33%)</title><rect x="11.9747%" y="260" width="0.3324%" height="15" fill="rgb(247,70,30)" fg:x="3855" fg:w="107"/><text x="12.2247%" y="270.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:192) (110 samples, 0.34%)</title><rect x="11.9747%" y="132" width="0.3417%" height="15" fill="rgb(212,68,19)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="142.50"></text></g><g><title>deepcopy (copy.py:153) (110 samples, 0.34%)</title><rect x="11.9747%" y="148" width="0.3417%" height="15" fill="rgb(240,187,13)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="158.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (110 samples, 0.34%)</title><rect x="11.9747%" y="164" width="0.3417%" height="15" fill="rgb(223,113,26)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (110 samples, 0.34%)</title><rect x="11.9747%" y="180" width="0.3417%" height="15" fill="rgb(206,192,2)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (110 samples, 0.34%)</title><rect x="11.9747%" y="196" width="0.3417%" height="15" fill="rgb(241,108,4)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (110 samples, 0.34%)</title><rect x="11.9747%" y="212" width="0.3417%" height="15" fill="rgb(247,173,49)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (110 samples, 0.34%)</title><rect x="11.9747%" y="228" width="0.3417%" height="15" fill="rgb(224,114,35)" fg:x="3855" fg:w="110"/><text x="12.2247%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (54 samples, 0.17%)</title><rect x="12.6611%" y="212" width="0.1677%" height="15" fill="rgb(245,159,27)" fg:x="4076" fg:w="54"/><text x="12.9111%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (43 samples, 0.13%)</title><rect x="12.8289%" y="212" width="0.1336%" height="15" fill="rgb(245,172,44)" fg:x="4130" fg:w="43"/><text x="13.0789%" y="222.50"></text></g><g><title>narrow (torch_geometric/utils/_select.py:61) (37 samples, 0.11%)</title><rect x="12.8475%" y="228" width="0.1149%" height="15" fill="rgb(236,23,11)" fg:x="4136" fg:w="37"/><text x="13.0975%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:79) (65 samples, 0.20%)</title><rect x="12.9624%" y="212" width="0.2019%" height="15" fill="rgb(205,117,38)" fg:x="4173" fg:w="65"/><text x="13.2124%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:87) (60 samples, 0.19%)</title><rect x="13.2172%" y="212" width="0.1864%" height="15" fill="rgb(237,72,25)" fg:x="4255" fg:w="60"/><text x="13.4672%" y="222.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (311 samples, 0.97%)</title><rect x="12.4406%" y="196" width="0.9660%" height="15" fill="rgb(244,70,9)" fg:x="4005" fg:w="311"/><text x="12.6906%" y="206.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (344 samples, 1.07%)</title><rect x="12.3412%" y="180" width="1.0686%" height="15" fill="rgb(217,125,39)" fg:x="3973" fg:w="344"/><text x="12.5912%" y="190.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (345 samples, 1.07%)</title><rect x="12.3412%" y="164" width="1.0717%" height="15" fill="rgb(235,36,10)" fg:x="3973" fg:w="345"/><text x="12.5912%" y="174.50"></text></g><g><title>pyg_to_mol (sampling.py:239) (83 samples, 0.26%)</title><rect x="13.4874%" y="164" width="0.2578%" height="15" fill="rgb(251,123,47)" fg:x="4342" fg:w="83"/><text x="13.7374%" y="174.50"></text></g><g><title>pyg_to_mol (sampling.py:254) (38 samples, 0.12%)</title><rect x="13.7576%" y="164" width="0.1180%" height="15" fill="rgb(221,13,13)" fg:x="4429" fg:w="38"/><text x="14.0076%" y="174.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (39 samples, 0.12%)</title><rect x="14.0559%" y="260" width="0.1211%" height="15" fill="rgb(238,131,9)" fg:x="4525" fg:w="39"/><text x="14.3059%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (41 samples, 0.13%)</title><rect x="14.0559%" y="244" width="0.1274%" height="15" fill="rgb(211,50,8)" fg:x="4525" fg:w="41"/><text x="14.3059%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (89 samples, 0.28%)</title><rect x="14.0279%" y="228" width="0.2765%" height="15" fill="rgb(245,182,24)" fg:x="4516" fg:w="89"/><text x="14.2779%" y="238.50"></text></g><g><title>deepcopy (copy.py:153) (134 samples, 0.42%)</title><rect x="13.8912%" y="180" width="0.4162%" height="15" fill="rgb(242,14,37)" fg:x="4472" fg:w="134"/><text x="14.1412%" y="190.50"></text></g><g><title>deepcopy (copy.py:146) (91 samples, 0.28%)</title><rect x="14.0248%" y="196" width="0.2827%" height="15" fill="rgb(246,228,12)" fg:x="4515" fg:w="91"/><text x="14.2748%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (90 samples, 0.28%)</title><rect x="14.0279%" y="212" width="0.2796%" height="15" fill="rgb(213,55,15)" fg:x="4516" fg:w="90"/><text x="14.2779%" y="222.50"></text></g><g><title>gfn_sgd (gfn_train.py:610) (2,248 samples, 6.98%)</title><rect x="7.3277%" y="116" width="6.9829%" height="15" fill="rgb(209,9,3)" fg:x="2359" fg:w="2248"/><text x="7.5777%" y="126.50">gfn_sgd (..</text></g><g><title>sample_forward_trajs (gfn_train.py:193) (642 samples, 1.99%)</title><rect x="12.3163%" y="132" width="1.9942%" height="15" fill="rgb(230,59,30)" fg:x="3965" fg:w="642"/><text x="12.5663%" y="142.50">s..</text></g><g><title>&lt;listcomp&gt; (gfn_train.py:193) (642 samples, 1.99%)</title><rect x="12.3163%" y="148" width="1.9942%" height="15" fill="rgb(209,121,21)" fg:x="3965" fg:w="642"/><text x="12.5663%" y="158.50">&lt;..</text></g><g><title>pyg_to_mol (sampling.py:256) (139 samples, 0.43%)</title><rect x="13.8788%" y="164" width="0.4318%" height="15" fill="rgb(220,109,13)" fg:x="4468" fg:w="139"/><text x="14.1288%" y="174.50"></text></g><g><title>deepcopy (copy.py:146) (54 samples, 0.17%)</title><rect x="14.5094%" y="308" width="0.1677%" height="15" fill="rgb(232,18,1)" fg:x="4671" fg:w="54"/><text x="14.7594%" y="318.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (53 samples, 0.16%)</title><rect x="14.5125%" y="324" width="0.1646%" height="15" fill="rgb(215,41,42)" fg:x="4672" fg:w="53"/><text x="14.7625%" y="334.50"></text></g><g><title>deepcopy (copy.py:153) (52 samples, 0.16%)</title><rect x="14.5156%" y="340" width="0.1615%" height="15" fill="rgb(224,123,36)" fg:x="4673" fg:w="52"/><text x="14.7656%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (90 samples, 0.28%)</title><rect x="14.4006%" y="292" width="0.2796%" height="15" fill="rgb(240,125,3)" fg:x="4636" fg:w="90"/><text x="14.6506%" y="302.50"></text></g><g><title>deepcopy (copy.py:146) (107 samples, 0.33%)</title><rect x="14.3509%" y="260" width="0.3324%" height="15" fill="rgb(205,98,50)" fg:x="4620" fg:w="107"/><text x="14.6009%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (107 samples, 0.33%)</title><rect x="14.3509%" y="276" width="0.3324%" height="15" fill="rgb(205,185,37)" fg:x="4620" fg:w="107"/><text x="14.6009%" y="286.50"></text></g><g><title>deepcopy (copy.py:153) (111 samples, 0.34%)</title><rect x="14.3509%" y="164" width="0.3448%" height="15" fill="rgb(238,207,15)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (111 samples, 0.34%)</title><rect x="14.3509%" y="180" width="0.3448%" height="15" fill="rgb(213,199,42)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (111 samples, 0.34%)</title><rect x="14.3509%" y="196" width="0.3448%" height="15" fill="rgb(235,201,11)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (111 samples, 0.34%)</title><rect x="14.3509%" y="212" width="0.3448%" height="15" fill="rgb(207,46,11)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (111 samples, 0.34%)</title><rect x="14.3509%" y="228" width="0.3448%" height="15" fill="rgb(241,35,35)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (111 samples, 0.34%)</title><rect x="14.3509%" y="244" width="0.3448%" height="15" fill="rgb(243,32,47)" fg:x="4620" fg:w="111"/><text x="14.6009%" y="254.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:260) (137 samples, 0.43%)</title><rect x="14.3137%" y="148" width="0.4256%" height="15" fill="rgb(247,202,23)" fg:x="4608" fg:w="137"/><text x="14.5637%" y="158.50"></text></g><g><title>forward (score_model.py:141) (346 samples, 1.07%)</title><rect x="14.8666%" y="196" width="1.0748%" height="15" fill="rgb(219,102,11)" fg:x="4786" fg:w="346"/><text x="15.1166%" y="206.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (346 samples, 1.07%)</title><rect x="14.8666%" y="212" width="1.0748%" height="15" fill="rgb(243,110,44)" fg:x="4786" fg:w="346"/><text x="15.1166%" y="222.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:263) (395 samples, 1.23%)</title><rect x="14.7392%" y="148" width="1.2270%" height="15" fill="rgb(222,74,54)" fg:x="4745" fg:w="395"/><text x="14.9892%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (395 samples, 1.23%)</title><rect x="14.7392%" y="164" width="1.2270%" height="15" fill="rgb(216,99,12)" fg:x="4745" fg:w="395"/><text x="14.9892%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (395 samples, 1.23%)</title><rect x="14.7392%" y="180" width="1.2270%" height="15" fill="rgb(226,22,26)" fg:x="4745" fg:w="395"/><text x="14.9892%" y="190.50"></text></g><g><title>get_loss (gfn_train.py:325) (546 samples, 1.70%)</title><rect x="14.3106%" y="132" width="1.6960%" height="15" fill="rgb(217,163,10)" fg:x="4607" fg:w="546"/><text x="14.5606%" y="142.50"></text></g><g><title>get_loss (gfn_train.py:336) (66 samples, 0.21%)</title><rect x="16.0811%" y="132" width="0.2050%" height="15" fill="rgb(213,25,53)" fg:x="5177" fg:w="66"/><text x="16.3311%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:336) (66 samples, 0.21%)</title><rect x="16.0811%" y="148" width="0.2050%" height="15" fill="rgb(252,105,26)" fg:x="5177" fg:w="66"/><text x="16.3311%" y="158.50"></text></g><g><title>gfn_sgd (gfn_train.py:621) (641 samples, 1.99%)</title><rect x="14.3106%" y="116" width="1.9911%" height="15" fill="rgb(220,39,43)" fg:x="4607" fg:w="641"/><text x="14.5606%" y="126.50">g..</text></g><g><title>log_gfn_metrics (gfn_train.py:746) (3,007 samples, 9.34%)</title><rect x="6.9829%" y="100" width="9.3405%" height="15" fill="rgb(229,68,48)" fg:x="2248" fg:w="3007"/><text x="7.2329%" y="110.50">log_gfn_metri..</text></g><g><title>log_gfn_metrics (gfn_train.py:761) (40 samples, 0.12%)</title><rect x="16.3918%" y="100" width="0.1243%" height="15" fill="rgb(252,8,32)" fg:x="5277" fg:w="40"/><text x="16.6418%" y="110.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:452) (38 samples, 0.12%)</title><rect x="16.3980%" y="116" width="0.1180%" height="15" fill="rgb(223,20,43)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="126.50"></text></g><g><title>wrapper_fn (wandb/sdk/wandb_run.py:403) (38 samples, 0.12%)</title><rect x="16.3980%" y="132" width="0.1180%" height="15" fill="rgb(229,81,49)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="142.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:393) (38 samples, 0.12%)</title><rect x="16.3980%" y="148" width="0.1180%" height="15" fill="rgb(236,28,36)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="158.50"></text></g><g><title>log (wandb/sdk/wandb_run.py:1934) (38 samples, 0.12%)</title><rect x="16.3980%" y="164" width="0.1180%" height="15" fill="rgb(249,185,26)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="174.50"></text></g><g><title>_log (wandb/sdk/wandb_run.py:1653) (38 samples, 0.12%)</title><rect x="16.3980%" y="180" width="0.1180%" height="15" fill="rgb(249,174,33)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="190.50"></text></g><g><title>_partial_history_callback (wandb/sdk/wandb_run.py:1525) (38 samples, 0.12%)</title><rect x="16.3980%" y="196" width="0.1180%" height="15" fill="rgb(233,201,37)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="206.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:629) (38 samples, 0.12%)</title><rect x="16.3980%" y="212" width="0.1180%" height="15" fill="rgb(221,78,26)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="222.50"></text></g><g><title>history_dict_to_json (wandb/sdk/data_types/utils.py:54) (38 samples, 0.12%)</title><rect x="16.3980%" y="228" width="0.1180%" height="15" fill="rgb(250,127,30)" fg:x="5279" fg:w="38"/><text x="16.6480%" y="238.50"></text></g><g><title>val_to_json (wandb/sdk/data_types/utils.py:84) (36 samples, 0.11%)</title><rect x="16.4042%" y="244" width="0.1118%" height="15" fill="rgb(230,49,44)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="254.50"></text></g><g><title>is_pandas_data_frame (wandb/util.py:459) (36 samples, 0.11%)</title><rect x="16.4042%" y="260" width="0.1118%" height="15" fill="rgb(229,67,23)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (36 samples, 0.11%)</title><rect x="16.4042%" y="276" width="0.1118%" height="15" fill="rgb(249,83,47)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (36 samples, 0.11%)</title><rect x="16.4042%" y="292" width="0.1118%" height="15" fill="rgb(215,43,3)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (36 samples, 0.11%)</title><rect x="16.4042%" y="308" width="0.1118%" height="15" fill="rgb(238,154,13)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (36 samples, 0.11%)</title><rect x="16.4042%" y="324" width="0.1118%" height="15" fill="rgb(219,56,2)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (36 samples, 0.11%)</title><rect x="16.4042%" y="340" width="0.1118%" height="15" fill="rgb(233,0,4)" fg:x="5281" fg:w="36"/><text x="16.6542%" y="350.50"></text></g><g><title>&lt;module&gt; (train.py:137) (3,221 samples, 10.01%)</title><rect x="6.5138%" y="68" width="10.0053%" height="15" fill="rgb(235,30,7)" fg:x="2097" fg:w="3221"/><text x="6.7638%" y="78.50">&lt;module&gt; (trai..</text></g><g><title>train (train.py:53) (3,117 samples, 9.68%)</title><rect x="6.8369%" y="84" width="9.6822%" height="15" fill="rgb(250,79,13)" fg:x="2201" fg:w="3117"/><text x="7.0869%" y="94.50">train (train.p..</text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (53 samples, 0.16%)</title><rect x="16.5844%" y="356" width="0.1646%" height="15" fill="rgb(211,146,34)" fg:x="5339" fg:w="53"/><text x="16.8344%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (53 samples, 0.16%)</title><rect x="16.5844%" y="372" width="0.1646%" height="15" fill="rgb(228,22,38)" fg:x="5339" fg:w="53"/><text x="16.8344%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (53 samples, 0.16%)</title><rect x="16.5844%" y="388" width="0.1646%" height="15" fill="rgb(235,168,5)" fg:x="5339" fg:w="53"/><text x="16.8344%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (53 samples, 0.16%)</title><rect x="16.5844%" y="404" width="0.1646%" height="15" fill="rgb(221,155,16)" fg:x="5339" fg:w="53"/><text x="16.8344%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (52 samples, 0.16%)</title><rect x="16.5875%" y="420" width="0.1615%" height="15" fill="rgb(215,215,53)" fg:x="5340" fg:w="52"/><text x="16.8375%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (52 samples, 0.16%)</title><rect x="16.5875%" y="436" width="0.1615%" height="15" fill="rgb(223,4,10)" fg:x="5340" fg:w="52"/><text x="16.8375%" y="446.50"></text></g><g><title>&lt;module&gt; (likelihood.py:4) (59 samples, 0.18%)</title><rect x="16.5812%" y="260" width="0.1833%" height="15" fill="rgb(234,103,6)" fg:x="5338" fg:w="59"/><text x="16.8312%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (59 samples, 0.18%)</title><rect x="16.5812%" y="276" width="0.1833%" height="15" fill="rgb(227,97,0)" fg:x="5338" fg:w="59"/><text x="16.8312%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (58 samples, 0.18%)</title><rect x="16.5844%" y="292" width="0.1802%" height="15" fill="rgb(234,150,53)" fg:x="5339" fg:w="58"/><text x="16.8344%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (58 samples, 0.18%)</title><rect x="16.5844%" y="308" width="0.1802%" height="15" fill="rgb(228,201,54)" fg:x="5339" fg:w="58"/><text x="16.8344%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (58 samples, 0.18%)</title><rect x="16.5844%" y="324" width="0.1802%" height="15" fill="rgb(222,22,37)" fg:x="5339" fg:w="58"/><text x="16.8344%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (58 samples, 0.18%)</title><rect x="16.5844%" y="340" width="0.1802%" height="15" fill="rgb(237,53,32)" fg:x="5339" fg:w="58"/><text x="16.8344%" y="350.50"></text></g><g><title>&lt;module&gt; (torch_geometric/__init__.py:13) (35 samples, 0.11%)</title><rect x="16.9043%" y="500" width="0.1087%" height="15" fill="rgb(233,25,53)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (35 samples, 0.11%)</title><rect x="16.9043%" y="516" width="0.1087%" height="15" fill="rgb(210,40,34)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (35 samples, 0.11%)</title><rect x="16.9043%" y="532" width="0.1087%" height="15" fill="rgb(241,220,44)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (35 samples, 0.11%)</title><rect x="16.9043%" y="548" width="0.1087%" height="15" fill="rgb(235,28,35)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (35 samples, 0.11%)</title><rect x="16.9043%" y="564" width="0.1087%" height="15" fill="rgb(210,56,17)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (35 samples, 0.11%)</title><rect x="16.9043%" y="580" width="0.1087%" height="15" fill="rgb(224,130,29)" fg:x="5442" fg:w="35"/><text x="17.1543%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:63) (47 samples, 0.15%)</title><rect x="17.0161%" y="916" width="0.1460%" height="15" fill="rgb(235,212,8)" fg:x="5478" fg:w="47"/><text x="17.2661%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (47 samples, 0.15%)</title><rect x="17.0161%" y="932" width="0.1460%" height="15" fill="rgb(223,33,50)" fg:x="5478" fg:w="47"/><text x="17.2661%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (47 samples, 0.15%)</title><rect x="17.0161%" y="948" width="0.1460%" height="15" fill="rgb(219,149,13)" fg:x="5478" fg:w="47"/><text x="17.2661%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (47 samples, 0.15%)</title><rect x="17.0161%" y="964" width="0.1460%" height="15" fill="rgb(250,156,29)" fg:x="5478" fg:w="47"/><text x="17.2661%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (46 samples, 0.14%)</title><rect x="17.0192%" y="980" width="0.1429%" height="15" fill="rgb(216,193,19)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (46 samples, 0.14%)</title><rect x="17.0192%" y="996" width="0.1429%" height="15" fill="rgb(216,135,14)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1006.50"></text></g><g><title>&lt;module&gt; (torch/utils/_sympy/functions.py:1) (46 samples, 0.14%)</title><rect x="17.0192%" y="1012" width="0.1429%" height="15" fill="rgb(241,47,5)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (46 samples, 0.14%)</title><rect x="17.0192%" y="1028" width="0.1429%" height="15" fill="rgb(233,42,35)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (46 samples, 0.14%)</title><rect x="17.0192%" y="1044" width="0.1429%" height="15" fill="rgb(231,13,6)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (46 samples, 0.14%)</title><rect x="17.0192%" y="1060" width="0.1429%" height="15" fill="rgb(207,181,40)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (46 samples, 0.14%)</title><rect x="17.0192%" y="1076" width="0.1429%" height="15" fill="rgb(254,173,49)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (46 samples, 0.14%)</title><rect x="17.0192%" y="1092" width="0.1429%" height="15" fill="rgb(221,1,38)" fg:x="5479" fg:w="46"/><text x="17.2692%" y="1102.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:31) (49 samples, 0.15%)</title><rect x="17.0161%" y="820" width="0.1522%" height="15" fill="rgb(206,124,46)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (49 samples, 0.15%)</title><rect x="17.0161%" y="836" width="0.1522%" height="15" fill="rgb(249,21,11)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (49 samples, 0.15%)</title><rect x="17.0161%" y="852" width="0.1522%" height="15" fill="rgb(222,201,40)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (49 samples, 0.15%)</title><rect x="17.0161%" y="868" width="0.1522%" height="15" fill="rgb(235,61,29)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (49 samples, 0.15%)</title><rect x="17.0161%" y="884" width="0.1522%" height="15" fill="rgb(219,207,3)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (49 samples, 0.15%)</title><rect x="17.0161%" y="900" width="0.1522%" height="15" fill="rgb(222,56,46)" fg:x="5478" fg:w="49"/><text x="17.2661%" y="910.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:2) (71 samples, 0.22%)</title><rect x="17.0130%" y="692" width="0.2205%" height="15" fill="rgb(239,76,54)" fg:x="5477" fg:w="71"/><text x="17.2630%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (71 samples, 0.22%)</title><rect x="17.0130%" y="708" width="0.2205%" height="15" fill="rgb(231,124,27)" fg:x="5477" fg:w="71"/><text x="17.2630%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (71 samples, 0.22%)</title><rect x="17.0130%" y="724" width="0.2205%" height="15" fill="rgb(249,195,6)" fg:x="5477" fg:w="71"/><text x="17.2630%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (71 samples, 0.22%)</title><rect x="17.0130%" y="740" width="0.2205%" height="15" fill="rgb(237,174,47)" fg:x="5477" fg:w="71"/><text x="17.2630%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (70 samples, 0.22%)</title><rect x="17.0161%" y="756" width="0.2174%" height="15" fill="rgb(206,201,31)" fg:x="5478" fg:w="70"/><text x="17.2661%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (70 samples, 0.22%)</title><rect x="17.0161%" y="772" width="0.2174%" height="15" fill="rgb(231,57,52)" fg:x="5478" fg:w="70"/><text x="17.2661%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (70 samples, 0.22%)</title><rect x="17.0161%" y="788" width="0.2174%" height="15" fill="rgb(248,177,22)" fg:x="5478" fg:w="70"/><text x="17.2661%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (70 samples, 0.22%)</title><rect x="17.0161%" y="804" width="0.2174%" height="15" fill="rgb(215,211,37)" fg:x="5478" fg:w="70"/><text x="17.2661%" y="814.50"></text></g><g><title>&lt;module&gt; (torch_geometric/__init__.py:5) (104 samples, 0.32%)</title><rect x="17.0130%" y="500" width="0.3231%" height="15" fill="rgb(241,128,51)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (104 samples, 0.32%)</title><rect x="17.0130%" y="516" width="0.3231%" height="15" fill="rgb(227,165,31)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (104 samples, 0.32%)</title><rect x="17.0130%" y="532" width="0.3231%" height="15" fill="rgb(228,167,24)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (104 samples, 0.32%)</title><rect x="17.0130%" y="548" width="0.3231%" height="15" fill="rgb(228,143,12)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (104 samples, 0.32%)</title><rect x="17.0130%" y="564" width="0.3231%" height="15" fill="rgb(249,149,8)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (104 samples, 0.32%)</title><rect x="17.0130%" y="580" width="0.3231%" height="15" fill="rgb(243,35,44)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="590.50"></text></g><g><title>&lt;module&gt; (torch_geometric/isinstance.py:8) (104 samples, 0.32%)</title><rect x="17.0130%" y="596" width="0.3231%" height="15" fill="rgb(246,89,9)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (104 samples, 0.32%)</title><rect x="17.0130%" y="612" width="0.3231%" height="15" fill="rgb(233,213,13)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (104 samples, 0.32%)</title><rect x="17.0130%" y="628" width="0.3231%" height="15" fill="rgb(233,141,41)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (104 samples, 0.32%)</title><rect x="17.0130%" y="644" width="0.3231%" height="15" fill="rgb(239,167,4)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (104 samples, 0.32%)</title><rect x="17.0130%" y="660" width="0.3231%" height="15" fill="rgb(209,217,16)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (104 samples, 0.32%)</title><rect x="17.0130%" y="676" width="0.3231%" height="15" fill="rgb(219,88,35)" fg:x="5477" fg:w="104"/><text x="17.2630%" y="686.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:64) (33 samples, 0.10%)</title><rect x="17.2336%" y="692" width="0.1025%" height="15" fill="rgb(220,193,23)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="702.50"></text></g><g><title>disable (torch/_dynamo/decorators.py:50) (33 samples, 0.10%)</title><rect x="17.2336%" y="708" width="0.1025%" height="15" fill="rgb(230,90,52)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="718.50"></text></g><g><title>__call__ (torch/_dynamo/eval_frame.py:410) (33 samples, 0.10%)</title><rect x="17.2336%" y="724" width="0.1025%" height="15" fill="rgb(252,106,19)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="734.50"></text></g><g><title>check (torch/_dynamo/trace_rules.py:3378) (33 samples, 0.10%)</title><rect x="17.2336%" y="740" width="0.1025%" height="15" fill="rgb(206,74,20)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="750.50"></text></g><g><title>check_verbose (torch/_dynamo/trace_rules.py:3361) (33 samples, 0.10%)</title><rect x="17.2336%" y="756" width="0.1025%" height="15" fill="rgb(230,138,44)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="766.50"></text></g><g><title>lookup_inner (torch/_dynamo/trace_rules.py:3442) (33 samples, 0.10%)</title><rect x="17.2336%" y="772" width="0.1025%" height="15" fill="rgb(235,182,43)" fg:x="5548" fg:w="33"/><text x="17.4836%" y="782.50"></text></g><g><title>&lt;module&gt; (train.py:5) (280 samples, 0.87%)</title><rect x="16.5191%" y="68" width="0.8698%" height="15" fill="rgb(242,16,51)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (280 samples, 0.87%)</title><rect x="16.5191%" y="84" width="0.8698%" height="15" fill="rgb(248,9,4)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (280 samples, 0.87%)</title><rect x="16.5191%" y="100" width="0.8698%" height="15" fill="rgb(210,31,22)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (280 samples, 0.87%)</title><rect x="16.5191%" y="116" width="0.8698%" height="15" fill="rgb(239,54,39)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (280 samples, 0.87%)</title><rect x="16.5191%" y="132" width="0.8698%" height="15" fill="rgb(230,99,41)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (280 samples, 0.87%)</title><rect x="16.5191%" y="148" width="0.8698%" height="15" fill="rgb(253,106,12)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="158.50"></text></g><g><title>&lt;module&gt; (dataset.py:3) (280 samples, 0.87%)</title><rect x="16.5191%" y="164" width="0.8698%" height="15" fill="rgb(213,46,41)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (280 samples, 0.87%)</title><rect x="16.5191%" y="180" width="0.8698%" height="15" fill="rgb(215,133,35)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (280 samples, 0.87%)</title><rect x="16.5191%" y="196" width="0.8698%" height="15" fill="rgb(213,28,5)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (280 samples, 0.87%)</title><rect x="16.5191%" y="212" width="0.8698%" height="15" fill="rgb(215,77,49)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (280 samples, 0.87%)</title><rect x="16.5191%" y="228" width="0.8698%" height="15" fill="rgb(248,100,22)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (280 samples, 0.87%)</title><rect x="16.5191%" y="244" width="0.8698%" height="15" fill="rgb(208,67,9)" fg:x="5318" fg:w="280"/><text x="16.7691%" y="254.50"></text></g><g><title>&lt;module&gt; (likelihood.py:6) (201 samples, 0.62%)</title><rect x="16.7645%" y="260" width="0.6244%" height="15" fill="rgb(219,133,21)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (201 samples, 0.62%)</title><rect x="16.7645%" y="276" width="0.6244%" height="15" fill="rgb(246,46,29)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (201 samples, 0.62%)</title><rect x="16.7645%" y="292" width="0.6244%" height="15" fill="rgb(246,185,52)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (201 samples, 0.62%)</title><rect x="16.7645%" y="308" width="0.6244%" height="15" fill="rgb(252,136,11)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (201 samples, 0.62%)</title><rect x="16.7645%" y="324" width="0.6244%" height="15" fill="rgb(219,138,53)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (201 samples, 0.62%)</title><rect x="16.7645%" y="340" width="0.6244%" height="15" fill="rgb(211,51,23)" fg:x="5397" fg:w="201"/><text x="17.0145%" y="350.50"></text></g><g><title>&lt;module&gt; (torsion.py:5) (180 samples, 0.56%)</title><rect x="16.8297%" y="356" width="0.5591%" height="15" fill="rgb(247,221,28)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (180 samples, 0.56%)</title><rect x="16.8297%" y="372" width="0.5591%" height="15" fill="rgb(251,222,45)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (180 samples, 0.56%)</title><rect x="16.8297%" y="388" width="0.5591%" height="15" fill="rgb(217,162,53)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (180 samples, 0.56%)</title><rect x="16.8297%" y="404" width="0.5591%" height="15" fill="rgb(229,93,14)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (180 samples, 0.56%)</title><rect x="16.8297%" y="420" width="0.5591%" height="15" fill="rgb(209,67,49)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (180 samples, 0.56%)</title><rect x="16.8297%" y="436" width="0.5591%" height="15" fill="rgb(213,87,29)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (180 samples, 0.56%)</title><rect x="16.8297%" y="452" width="0.5591%" height="15" fill="rgb(205,151,52)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (180 samples, 0.56%)</title><rect x="16.8297%" y="468" width="0.5591%" height="15" fill="rgb(253,215,39)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (180 samples, 0.56%)</title><rect x="16.8297%" y="484" width="0.5591%" height="15" fill="rgb(221,220,41)" fg:x="5418" fg:w="180"/><text x="17.0797%" y="494.50"></text></g><g><title>score (torus.py:44) (1,925 samples, 5.98%)</title><rect x="17.5100%" y="276" width="5.9796%" height="15" fill="rgb(218,133,21)" fg:x="5637" fg:w="1925"/><text x="17.7600%" y="286.50">score (t..</text></g><g><title>score (torus.py:45) (955 samples, 2.97%)</title><rect x="23.4896%" y="276" width="2.9665%" height="15" fill="rgb(221,193,43)" fg:x="7562" fg:w="955"/><text x="23.7396%" y="286.50">sco..</text></g><g><title>score (torus.py:46) (1,806 samples, 5.61%)</title><rect x="26.4561%" y="276" width="5.6099%" height="15" fill="rgb(240,128,52)" fg:x="8517" fg:w="1806"/><text x="26.7061%" y="286.50">score (..</text></g><g><title>score (torus.py:47) (1,170 samples, 3.63%)</title><rect x="32.0660%" y="276" width="3.6343%" height="15" fill="rgb(253,114,12)" fg:x="10323" fg:w="1170"/><text x="32.3160%" y="286.50">scor..</text></g><g><title>clip (numpy/_core/fromnumeric.py:2247) (1,058 samples, 3.29%)</title><rect x="38.8998%" y="292" width="3.2864%" height="15" fill="rgb(215,223,47)" fg:x="12523" fg:w="1058"/><text x="39.1498%" y="302.50">cli..</text></g><g><title>_wrapfunc (numpy/_core/fromnumeric.py:57) (1,058 samples, 3.29%)</title><rect x="38.8998%" y="308" width="3.2864%" height="15" fill="rgb(248,225,23)" fg:x="12523" fg:w="1058"/><text x="39.1498%" y="318.50">_wr..</text></g><g><title>_clip (numpy/_core/_methods.py:108) (1,058 samples, 3.29%)</title><rect x="38.8998%" y="324" width="3.2864%" height="15" fill="rgb(250,108,0)" fg:x="12523" fg:w="1058"/><text x="39.1498%" y="334.50">_cl..</text></g><g><title>score (torus.py:48) (2,940 samples, 9.13%)</title><rect x="35.7003%" y="276" width="9.1324%" height="15" fill="rgb(228,208,7)" fg:x="11493" fg:w="2940"/><text x="35.9503%" y="286.50">score (torus...</text></g><g><title>round (numpy/_core/fromnumeric.py:3451) (852 samples, 2.65%)</title><rect x="42.1862%" y="292" width="2.6465%" height="15" fill="rgb(244,45,10)" fg:x="13581" fg:w="852"/><text x="42.4362%" y="302.50">ro..</text></g><g><title>_wrapfunc (numpy/_core/fromnumeric.py:57) (852 samples, 2.65%)</title><rect x="42.1862%" y="308" width="2.6465%" height="15" fill="rgb(207,125,25)" fg:x="13581" fg:w="852"/><text x="42.4362%" y="318.50">_w..</text></g><g><title>score (torus.py:49) (1,771 samples, 5.50%)</title><rect x="44.8327%" y="276" width="5.5012%" height="15" fill="rgb(210,195,18)" fg:x="14433" fg:w="1771"/><text x="45.0827%" y="286.50">score (..</text></g><g><title>score (torus.py:50) (956 samples, 2.97%)</title><rect x="50.3339%" y="276" width="2.9696%" height="15" fill="rgb(249,80,12)" fg:x="16204" fg:w="956"/><text x="50.5839%" y="286.50">sco..</text></g><g><title>clip (numpy/_core/fromnumeric.py:2247) (1,435 samples, 4.46%)</title><rect x="55.9718%" y="292" width="4.4575%" height="15" fill="rgb(221,65,9)" fg:x="18019" fg:w="1435"/><text x="56.2218%" y="302.50">clip ..</text></g><g><title>_wrapfunc (numpy/_core/fromnumeric.py:57) (1,435 samples, 4.46%)</title><rect x="55.9718%" y="308" width="4.4575%" height="15" fill="rgb(235,49,36)" fg:x="18019" fg:w="1435"/><text x="56.2218%" y="318.50">_wrap..</text></g><g><title>_clip (numpy/_core/_methods.py:108) (1,435 samples, 4.46%)</title><rect x="55.9718%" y="324" width="4.4575%" height="15" fill="rgb(225,32,20)" fg:x="18019" fg:w="1435"/><text x="56.2218%" y="334.50">_clip..</text></g><g><title>score (torus.py:51) (3,208 samples, 9.96%)</title><rect x="53.3035%" y="276" width="9.9649%" height="15" fill="rgb(215,141,46)" fg:x="17160" fg:w="3208"/><text x="53.5535%" y="286.50">score (torus.p..</text></g><g><title>round (numpy/_core/fromnumeric.py:3451) (914 samples, 2.84%)</title><rect x="60.4293%" y="292" width="2.8391%" height="15" fill="rgb(250,160,47)" fg:x="19454" fg:w="914"/><text x="60.6793%" y="302.50">ro..</text></g><g><title>_wrapfunc (numpy/_core/fromnumeric.py:57) (913 samples, 2.84%)</title><rect x="60.4324%" y="308" width="2.8360%" height="15" fill="rgb(216,222,40)" fg:x="19455" fg:w="913"/><text x="60.6824%" y="318.50">_w..</text></g><g><title>&lt;module&gt; (torus.py:72) (16,840 samples, 52.31%)</title><rect x="17.4945%" y="260" width="52.3095%" height="15" fill="rgb(234,217,39)" fg:x="5632" fg:w="16840"/><text x="17.7445%" y="270.50">&lt;module&gt; (torus.py:72)</text></g><g><title>score (torus.py:52) (2,104 samples, 6.54%)</title><rect x="63.2684%" y="276" width="6.5356%" height="15" fill="rgb(207,178,40)" fg:x="20368" fg:w="2104"/><text x="63.5184%" y="286.50">score (to..</text></g><g><title>sample (torus.py:67) (1,511 samples, 4.69%)</title><rect x="79.6943%" y="276" width="4.6936%" height="15" fill="rgb(221,136,13)" fg:x="25656" fg:w="1511"/><text x="79.9443%" y="286.50">sampl..</text></g><g><title>&lt;module&gt; (torus.py:73) (6,718 samples, 20.87%)</title><rect x="69.8040%" y="260" width="20.8679%" height="15" fill="rgb(249,199,10)" fg:x="22472" fg:w="6718"/><text x="70.0540%" y="270.50">&lt;module&gt; (torus.py:73)</text></g><g><title>sample (torus.py:68) (2,023 samples, 6.28%)</title><rect x="84.3879%" y="276" width="6.2840%" height="15" fill="rgb(249,222,13)" fg:x="27167" fg:w="2023"/><text x="84.6379%" y="286.50">sample (..</text></g><g><title>&lt;module&gt; (torus.py:74) (1,853 samples, 5.76%)</title><rect x="90.6719%" y="260" width="5.7559%" height="15" fill="rgb(244,185,38)" fg:x="29190" fg:w="1853"/><text x="90.9219%" y="270.50">&lt;module..</text></g><g><title>&lt;module&gt; (train.py:7) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="68" width="82.0334%" height="15" fill="rgb(236,202,9)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="78.50">&lt;module&gt; (train.py:7)</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="84" width="82.0334%" height="15" fill="rgb(250,229,37)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="94.50">_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007)</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="100" width="82.0334%" height="15" fill="rgb(206,174,23)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="110.50">_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986)</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="116" width="82.0334%" height="15" fill="rgb(211,33,43)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="126.50">_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680)</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="132" width="82.0334%" height="15" fill="rgb(245,58,50)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="142.50">exec_module (&lt;frozen importlib._bootstrap_external&gt;:850)</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="148" width="82.0334%" height="15" fill="rgb(244,68,36)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="158.50">_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228)</text></g><g><title>&lt;module&gt; (training.py:4) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="164" width="82.0334%" height="15" fill="rgb(232,229,15)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="174.50">&lt;module&gt; (training.py:4)</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="180" width="82.0334%" height="15" fill="rgb(254,30,23)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="190.50">_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007)</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="196" width="82.0334%" height="15" fill="rgb(235,160,14)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="206.50">_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986)</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="212" width="82.0334%" height="15" fill="rgb(212,155,44)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="222.50">_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680)</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="228" width="82.0334%" height="15" fill="rgb(226,2,50)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="238.50">exec_module (&lt;frozen importlib._bootstrap_external&gt;:850)</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26,409 samples, 82.03%)</title><rect x="17.3920%" y="244" width="82.0334%" height="15" fill="rgb(234,177,6)" fg:x="5599" fg:w="26409"/><text x="17.6420%" y="254.50">_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228)</text></g><g><title>&lt;module&gt; (torus.py:76) (965 samples, 3.00%)</title><rect x="96.4278%" y="260" width="2.9975%" height="15" fill="rgb(217,24,9)" fg:x="31043" fg:w="965"/><text x="96.6778%" y="270.50">&lt;mo..</text></g><g><title>&lt;module&gt; (e3nn/__init__.py:33) (43 samples, 0.13%)</title><rect x="99.4253%" y="548" width="0.1336%" height="15" fill="rgb(220,13,46)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (43 samples, 0.13%)</title><rect x="99.4253%" y="564" width="0.1336%" height="15" fill="rgb(239,221,27)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (43 samples, 0.13%)</title><rect x="99.4253%" y="580" width="0.1336%" height="15" fill="rgb(222,198,25)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (43 samples, 0.13%)</title><rect x="99.4253%" y="596" width="0.1336%" height="15" fill="rgb(211,99,13)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (43 samples, 0.13%)</title><rect x="99.4253%" y="612" width="0.1336%" height="15" fill="rgb(232,111,31)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (43 samples, 0.13%)</title><rect x="99.4253%" y="628" width="0.1336%" height="15" fill="rgb(245,82,37)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (43 samples, 0.13%)</title><rect x="99.4253%" y="644" width="0.1336%" height="15" fill="rgb(227,149,46)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (43 samples, 0.13%)</title><rect x="99.4253%" y="660" width="0.1336%" height="15" fill="rgb(218,36,50)" fg:x="32008" fg:w="43"/><text x="99.6753%" y="670.50"></text></g><g><title>&lt;module&gt; (e3nn/o3/__init__.py:41) (35 samples, 0.11%)</title><rect x="99.4502%" y="676" width="0.1087%" height="15" fill="rgb(226,80,48)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (35 samples, 0.11%)</title><rect x="99.4502%" y="692" width="0.1087%" height="15" fill="rgb(238,224,15)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (35 samples, 0.11%)</title><rect x="99.4502%" y="708" width="0.1087%" height="15" fill="rgb(241,136,10)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (35 samples, 0.11%)</title><rect x="99.4502%" y="724" width="0.1087%" height="15" fill="rgb(208,32,45)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (35 samples, 0.11%)</title><rect x="99.4502%" y="740" width="0.1087%" height="15" fill="rgb(207,135,9)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (35 samples, 0.11%)</title><rect x="99.4502%" y="756" width="0.1087%" height="15" fill="rgb(206,86,44)" fg:x="32016" fg:w="35"/><text x="99.7002%" y="766.50"></text></g><g><title>&lt;module&gt; (e3nn/o3/_spherical_harmonics.py:188) (34 samples, 0.11%)</title><rect x="99.4533%" y="772" width="0.1056%" height="15" fill="rgb(245,177,15)" fg:x="32017" fg:w="34"/><text x="99.7033%" y="782.50"></text></g><g><title>&lt;module&gt; (sampling.py:12) (48 samples, 0.15%)</title><rect x="99.4253%" y="260" width="0.1491%" height="15" fill="rgb(206,64,50)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (48 samples, 0.15%)</title><rect x="99.4253%" y="276" width="0.1491%" height="15" fill="rgb(234,36,40)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (48 samples, 0.15%)</title><rect x="99.4253%" y="292" width="0.1491%" height="15" fill="rgb(213,64,8)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (48 samples, 0.15%)</title><rect x="99.4253%" y="308" width="0.1491%" height="15" fill="rgb(210,75,36)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (48 samples, 0.15%)</title><rect x="99.4253%" y="324" width="0.1491%" height="15" fill="rgb(229,88,21)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (48 samples, 0.15%)</title><rect x="99.4253%" y="340" width="0.1491%" height="15" fill="rgb(252,204,47)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="350.50"></text></g><g><title>&lt;module&gt; (utils.py:6) (48 samples, 0.15%)</title><rect x="99.4253%" y="356" width="0.1491%" height="15" fill="rgb(208,77,27)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (48 samples, 0.15%)</title><rect x="99.4253%" y="372" width="0.1491%" height="15" fill="rgb(221,76,26)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (48 samples, 0.15%)</title><rect x="99.4253%" y="388" width="0.1491%" height="15" fill="rgb(225,139,18)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (48 samples, 0.15%)</title><rect x="99.4253%" y="404" width="0.1491%" height="15" fill="rgb(230,137,11)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (48 samples, 0.15%)</title><rect x="99.4253%" y="420" width="0.1491%" height="15" fill="rgb(212,28,1)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (48 samples, 0.15%)</title><rect x="99.4253%" y="436" width="0.1491%" height="15" fill="rgb(248,164,17)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="446.50"></text></g><g><title>&lt;module&gt; (score_model.py:3) (48 samples, 0.15%)</title><rect x="99.4253%" y="452" width="0.1491%" height="15" fill="rgb(222,171,42)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (48 samples, 0.15%)</title><rect x="99.4253%" y="468" width="0.1491%" height="15" fill="rgb(243,84,45)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (48 samples, 0.15%)</title><rect x="99.4253%" y="484" width="0.1491%" height="15" fill="rgb(252,49,23)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (48 samples, 0.15%)</title><rect x="99.4253%" y="500" width="0.1491%" height="15" fill="rgb(215,19,7)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (48 samples, 0.15%)</title><rect x="99.4253%" y="516" width="0.1491%" height="15" fill="rgb(238,81,41)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (48 samples, 0.15%)</title><rect x="99.4253%" y="532" width="0.1491%" height="15" fill="rgb(210,199,37)" fg:x="32008" fg:w="48"/><text x="99.6753%" y="542.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:1) (52 samples, 0.16%)</title><rect x="99.4253%" y="164" width="0.1615%" height="15" fill="rgb(244,192,49)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (52 samples, 0.16%)</title><rect x="99.4253%" y="180" width="0.1615%" height="15" fill="rgb(226,211,11)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (52 samples, 0.16%)</title><rect x="99.4253%" y="196" width="0.1615%" height="15" fill="rgb(236,162,54)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (52 samples, 0.16%)</title><rect x="99.4253%" y="212" width="0.1615%" height="15" fill="rgb(220,229,9)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (52 samples, 0.16%)</title><rect x="99.4253%" y="228" width="0.1615%" height="15" fill="rgb(250,87,22)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (52 samples, 0.16%)</title><rect x="99.4253%" y="244" width="0.1615%" height="15" fill="rgb(239,43,17)" fg:x="32008" fg:w="52"/><text x="99.6753%" y="254.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:22) (45 samples, 0.14%)</title><rect x="99.5869%" y="164" width="0.1398%" height="15" fill="rgb(231,177,25)" fg:x="32060" fg:w="45"/><text x="99.8369%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (45 samples, 0.14%)</title><rect x="99.5869%" y="180" width="0.1398%" height="15" fill="rgb(219,179,1)" fg:x="32060" fg:w="45"/><text x="99.8369%" y="190.50"></text></g><g><title>&lt;module&gt; (wandb/sdk/artifacts/artifact.py:37) (36 samples, 0.11%)</title><rect x="99.7795%" y="484" width="0.1118%" height="15" fill="rgb(238,219,53)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (36 samples, 0.11%)</title><rect x="99.7795%" y="500" width="0.1118%" height="15" fill="rgb(232,167,36)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (36 samples, 0.11%)</title><rect x="99.7795%" y="516" width="0.1118%" height="15" fill="rgb(244,19,51)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (36 samples, 0.11%)</title><rect x="99.7795%" y="532" width="0.1118%" height="15" fill="rgb(224,6,22)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (36 samples, 0.11%)</title><rect x="99.7795%" y="548" width="0.1118%" height="15" fill="rgb(224,145,5)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (36 samples, 0.11%)</title><rect x="99.7795%" y="564" width="0.1118%" height="15" fill="rgb(234,130,49)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (36 samples, 0.11%)</title><rect x="99.7795%" y="580" width="0.1118%" height="15" fill="rgb(254,6,2)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (36 samples, 0.11%)</title><rect x="99.7795%" y="596" width="0.1118%" height="15" fill="rgb(208,96,46)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (36 samples, 0.11%)</title><rect x="99.7795%" y="612" width="0.1118%" height="15" fill="rgb(239,3,39)" fg:x="32122" fg:w="36"/><text x="100.0295%" y="622.50"></text></g><g><title>&lt;module&gt; (wandb/sdk/__init__.py:25) (39 samples, 0.12%)</title><rect x="99.7732%" y="388" width="0.1211%" height="15" fill="rgb(233,210,1)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (39 samples, 0.12%)</title><rect x="99.7732%" y="404" width="0.1211%" height="15" fill="rgb(244,137,37)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (39 samples, 0.12%)</title><rect x="99.7732%" y="420" width="0.1211%" height="15" fill="rgb(240,136,2)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (39 samples, 0.12%)</title><rect x="99.7732%" y="436" width="0.1211%" height="15" fill="rgb(239,18,37)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (39 samples, 0.12%)</title><rect x="99.7732%" y="452" width="0.1211%" height="15" fill="rgb(218,185,22)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (39 samples, 0.12%)</title><rect x="99.7732%" y="468" width="0.1211%" height="15" fill="rgb(225,218,4)" fg:x="32120" fg:w="39"/><text x="100.0232%" y="478.50"></text></g><g><title>&lt;module&gt; (wandb/__init__.py:20) (68 samples, 0.21%)</title><rect x="99.7329%" y="260" width="0.2112%" height="15" fill="rgb(230,182,32)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (68 samples, 0.21%)</title><rect x="99.7329%" y="276" width="0.2112%" height="15" fill="rgb(242,56,43)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (68 samples, 0.21%)</title><rect x="99.7329%" y="292" width="0.2112%" height="15" fill="rgb(233,99,24)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (68 samples, 0.21%)</title><rect x="99.7329%" y="308" width="0.2112%" height="15" fill="rgb(234,209,42)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (68 samples, 0.21%)</title><rect x="99.7329%" y="324" width="0.2112%" height="15" fill="rgb(227,7,12)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (68 samples, 0.21%)</title><rect x="99.7329%" y="340" width="0.2112%" height="15" fill="rgb(245,203,43)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (68 samples, 0.21%)</title><rect x="99.7329%" y="356" width="0.2112%" height="15" fill="rgb(238,205,33)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (68 samples, 0.21%)</title><rect x="99.7329%" y="372" width="0.2112%" height="15" fill="rgb(231,56,7)" fg:x="32107" fg:w="68"/><text x="99.9829%" y="382.50"></text></g><g><title>&lt;module&gt; (train.py:8) (168 samples, 0.52%)</title><rect x="99.4253%" y="68" width="0.5219%" height="15" fill="rgb(244,186,29)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (168 samples, 0.52%)</title><rect x="99.4253%" y="84" width="0.5219%" height="15" fill="rgb(234,111,31)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (168 samples, 0.52%)</title><rect x="99.4253%" y="100" width="0.5219%" height="15" fill="rgb(241,149,10)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (168 samples, 0.52%)</title><rect x="99.4253%" y="116" width="0.5219%" height="15" fill="rgb(249,206,44)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (168 samples, 0.52%)</title><rect x="99.4253%" y="132" width="0.5219%" height="15" fill="rgb(251,153,30)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (168 samples, 0.52%)</title><rect x="99.4253%" y="148" width="0.5219%" height="15" fill="rgb(239,152,38)" fg:x="32008" fg:w="168"/><text x="99.6753%" y="158.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:26) (71 samples, 0.22%)</title><rect x="99.7266%" y="164" width="0.2205%" height="15" fill="rgb(249,139,47)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (71 samples, 0.22%)</title><rect x="99.7266%" y="180" width="0.2205%" height="15" fill="rgb(244,64,35)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (71 samples, 0.22%)</title><rect x="99.7266%" y="196" width="0.2205%" height="15" fill="rgb(216,46,15)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (71 samples, 0.22%)</title><rect x="99.7266%" y="212" width="0.2205%" height="15" fill="rgb(250,74,19)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (71 samples, 0.22%)</title><rect x="99.7266%" y="228" width="0.2205%" height="15" fill="rgb(249,42,33)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (71 samples, 0.22%)</title><rect x="99.7266%" y="244" width="0.2205%" height="15" fill="rgb(242,149,17)" fg:x="32105" fg:w="71"/><text x="99.9766%" y="254.50"></text></g><g><title>all (32,193 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,29,21)" fg:x="0" fg:w="32193"/><text x="0.2500%" y="62.50"></text></g></svg></svg>