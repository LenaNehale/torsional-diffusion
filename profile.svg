<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1242" onload="init(evt)" viewBox="0 0 1200 1242" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1242" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python train.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1231.00"> </text><svg id="frames" x="10" width="1180" total_samples="20729"><g><title>&lt;module&gt; (torch/__init__.py:1919) (26 samples, 0.13%)</title><rect x="0.3377%" y="164" width="0.1254%" height="15" fill="rgb(227,0,7)" fg:x="70" fg:w="26"/><text x="0.5877%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (26 samples, 0.13%)</title><rect x="0.3377%" y="180" width="0.1254%" height="15" fill="rgb(217,0,24)" fg:x="70" fg:w="26"/><text x="0.5877%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 0.13%)</title><rect x="0.3377%" y="196" width="0.1254%" height="15" fill="rgb(221,193,54)" fg:x="70" fg:w="26"/><text x="0.5877%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26 samples, 0.13%)</title><rect x="0.3377%" y="212" width="0.1254%" height="15" fill="rgb(248,212,6)" fg:x="70" fg:w="26"/><text x="0.5877%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26 samples, 0.13%)</title><rect x="0.3377%" y="228" width="0.1254%" height="15" fill="rgb(208,68,35)" fg:x="70" fg:w="26"/><text x="0.5877%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26 samples, 0.13%)</title><rect x="0.3377%" y="244" width="0.1254%" height="15" fill="rgb(232,128,0)" fg:x="70" fg:w="26"/><text x="0.5877%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26 samples, 0.13%)</title><rect x="0.3377%" y="260" width="0.1254%" height="15" fill="rgb(207,160,47)" fg:x="70" fg:w="26"/><text x="0.5877%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 0.13%)</title><rect x="0.3377%" y="276" width="0.1254%" height="15" fill="rgb(228,23,34)" fg:x="70" fg:w="26"/><text x="0.5877%" y="286.50"></text></g><g><title>&lt;module&gt; (torch/_meta_registrations.py:9) (21 samples, 0.10%)</title><rect x="0.3618%" y="292" width="0.1013%" height="15" fill="rgb(218,30,26)" fg:x="75" fg:w="21"/><text x="0.6118%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (21 samples, 0.10%)</title><rect x="0.3618%" y="308" width="0.1013%" height="15" fill="rgb(220,122,19)" fg:x="75" fg:w="21"/><text x="0.6118%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.10%)</title><rect x="0.3618%" y="324" width="0.1013%" height="15" fill="rgb(250,228,42)" fg:x="75" fg:w="21"/><text x="0.6118%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.10%)</title><rect x="0.3618%" y="340" width="0.1013%" height="15" fill="rgb(240,193,28)" fg:x="75" fg:w="21"/><text x="0.6118%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (21 samples, 0.10%)</title><rect x="0.3618%" y="356" width="0.1013%" height="15" fill="rgb(216,20,37)" fg:x="75" fg:w="21"/><text x="0.6118%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (21 samples, 0.10%)</title><rect x="0.3618%" y="372" width="0.1013%" height="15" fill="rgb(206,188,39)" fg:x="75" fg:w="21"/><text x="0.6118%" y="382.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:237) (88 samples, 0.42%)</title><rect x="0.4728%" y="164" width="0.4245%" height="15" fill="rgb(217,207,13)" fg:x="98" fg:w="88"/><text x="0.7228%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (88 samples, 0.42%)</title><rect x="0.4728%" y="180" width="0.4245%" height="15" fill="rgb(231,73,38)" fg:x="98" fg:w="88"/><text x="0.7228%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (88 samples, 0.42%)</title><rect x="0.4728%" y="196" width="0.4245%" height="15" fill="rgb(225,20,46)" fg:x="98" fg:w="88"/><text x="0.7228%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (88 samples, 0.42%)</title><rect x="0.4728%" y="212" width="0.4245%" height="15" fill="rgb(210,31,41)" fg:x="98" fg:w="88"/><text x="0.7228%" y="222.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (88 samples, 0.42%)</title><rect x="0.4728%" y="228" width="0.4245%" height="15" fill="rgb(221,200,47)" fg:x="98" fg:w="88"/><text x="0.7228%" y="238.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (88 samples, 0.42%)</title><rect x="0.4728%" y="244" width="0.4245%" height="15" fill="rgb(226,26,5)" fg:x="98" fg:w="88"/><text x="0.7228%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (88 samples, 0.42%)</title><rect x="0.4728%" y="260" width="0.4245%" height="15" fill="rgb(249,33,26)" fg:x="98" fg:w="88"/><text x="0.7228%" y="270.50"></text></g><g><title>&lt;module&gt; (train.py:1) (190 samples, 0.92%)</title><rect x="0.0000%" y="68" width="0.9166%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="190"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (190 samples, 0.92%)</title><rect x="0.0000%" y="84" width="0.9166%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="190"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (190 samples, 0.92%)</title><rect x="0.0000%" y="100" width="0.9166%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="190"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (190 samples, 0.92%)</title><rect x="0.0000%" y="116" width="0.9166%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="190"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (190 samples, 0.92%)</title><rect x="0.0000%" y="132" width="0.9166%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="190"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (190 samples, 0.92%)</title><rect x="0.0000%" y="148" width="0.9166%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="190"/><text x="0.2500%" y="158.50"></text></g><g><title>__init__ (e3nn/o3/_tensor_product/_tensor_product.py:348) (22 samples, 0.11%)</title><rect x="0.9986%" y="148" width="0.1061%" height="15" fill="rgb(238,160,17)" fg:x="207" fg:w="22"/><text x="1.2486%" y="158.50"></text></g><g><title>get_model (utils.py:10) (75 samples, 0.36%)</title><rect x="0.9166%" y="84" width="0.3618%" height="15" fill="rgb(214,148,48)" fg:x="190" fg:w="75"/><text x="1.1666%" y="94.50"></text></g><g><title>__init__ (score_model.py:97) (58 samples, 0.28%)</title><rect x="0.9986%" y="100" width="0.2798%" height="15" fill="rgb(232,36,49)" fg:x="207" fg:w="58"/><text x="1.2486%" y="110.50"></text></g><g><title>__init__ (score_model.py:22) (58 samples, 0.28%)</title><rect x="0.9986%" y="116" width="0.2798%" height="15" fill="rgb(209,103,24)" fg:x="207" fg:w="58"/><text x="1.2486%" y="126.50"></text></g><g><title>__init__ (e3nn/o3/_tensor_product/_sub.py:60) (58 samples, 0.28%)</title><rect x="0.9986%" y="132" width="0.2798%" height="15" fill="rgb(229,88,8)" fg:x="207" fg:w="58"/><text x="1.2486%" y="142.50"></text></g><g><title>__init__ (e3nn/o3/_tensor_product/_tensor_product.py:398) (36 samples, 0.17%)</title><rect x="1.1047%" y="148" width="0.1737%" height="15" fill="rgb(213,181,19)" fg:x="229" fg:w="36"/><text x="1.3547%" y="158.50"></text></g><g><title>_codegen_register (e3nn/util/codegen/_mixin.py:43) (36 samples, 0.17%)</title><rect x="1.1047%" y="164" width="0.1737%" height="15" fill="rgb(254,191,54)" fg:x="229" fg:w="36"/><text x="1.3547%" y="174.50"></text></g><g><title>script (torch/jit/_script.py:1338) (36 samples, 0.17%)</title><rect x="1.1047%" y="180" width="0.1737%" height="15" fill="rgb(241,83,37)" fg:x="229" fg:w="36"/><text x="1.3547%" y="190.50"></text></g><g><title>create_script_module (torch/jit/_recursive.py:558) (26 samples, 0.13%)</title><rect x="1.1530%" y="196" width="0.1254%" height="15" fill="rgb(233,36,39)" fg:x="239" fg:w="26"/><text x="1.4030%" y="206.50"></text></g><g><title>&lt;module&gt; (train.py:128) (94 samples, 0.45%)</title><rect x="0.9166%" y="68" width="0.4535%" height="15" fill="rgb(226,3,54)" fg:x="190" fg:w="94"/><text x="1.1666%" y="78.50"></text></g><g><title>__init__ (dataset.py:104) (53 samples, 0.26%)</title><rect x="1.4087%" y="100" width="0.2557%" height="15" fill="rgb(245,192,40)" fg:x="292" fg:w="53"/><text x="1.6587%" y="110.50"></text></g><g><title>_legacy_load (torch/serialization.py:1065) (168 samples, 0.81%)</title><rect x="2.6436%" y="148" width="0.8105%" height="15" fill="rgb(238,167,29)" fg:x="548" fg:w="168"/><text x="2.8936%" y="158.50"></text></g><g><title>_is_compressed_file (torch/serialization.py:507) (51 samples, 0.25%)</title><rect x="3.5795%" y="180" width="0.2460%" height="15" fill="rgb(232,182,51)" fg:x="742" fg:w="51"/><text x="3.8295%" y="190.50"></text></g><g><title>_should_read_directly (torch/serialization.py:518) (59 samples, 0.28%)</title><rect x="3.5602%" y="164" width="0.2846%" height="15" fill="rgb(231,60,39)" fg:x="738" fg:w="59"/><text x="3.8102%" y="174.50"></text></g><g><title>_legacy_load (torch/serialization.py:1241) (72 samples, 0.35%)</title><rect x="3.5506%" y="148" width="0.3473%" height="15" fill="rgb(208,69,12)" fg:x="736" fg:w="72"/><text x="3.8006%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1262) (113 samples, 0.55%)</title><rect x="3.9220%" y="148" width="0.5451%" height="15" fill="rgb(235,93,37)" fg:x="813" fg:w="113"/><text x="4.1720%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1265) (22 samples, 0.11%)</title><rect x="4.4816%" y="148" width="0.1061%" height="15" fill="rgb(213,116,39)" fg:x="929" fg:w="22"/><text x="4.7316%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1269) (78 samples, 0.38%)</title><rect x="4.5974%" y="148" width="0.3763%" height="15" fill="rgb(222,207,29)" fg:x="953" fg:w="78"/><text x="4.8474%" y="158.50"></text></g><g><title>persistent_load (torch/serialization.py:1197) (27 samples, 0.13%)</title><rect x="5.5044%" y="164" width="0.1303%" height="15" fill="rgb(206,96,30)" fg:x="1141" fg:w="27"/><text x="5.7544%" y="174.50"></text></g><g><title>active_fake_mode (torch/_guards.py:872) (24 samples, 0.12%)</title><rect x="5.6877%" y="180" width="0.1158%" height="15" fill="rgb(218,138,4)" fg:x="1179" fg:w="24"/><text x="5.9377%" y="190.50"></text></g><g><title>persistent_load (torch/serialization.py:1200) (106 samples, 0.51%)</title><rect x="5.6539%" y="164" width="0.5114%" height="15" fill="rgb(250,191,14)" fg:x="1172" fg:w="106"/><text x="5.9039%" y="174.50"></text></g><g><title>active_fake_mode (torch/_guards.py:875) (61 samples, 0.29%)</title><rect x="5.8710%" y="180" width="0.2943%" height="15" fill="rgb(239,60,40)" fg:x="1217" fg:w="61"/><text x="6.1210%" y="190.50"></text></g><g><title>persistent_load (torch/serialization.py:1203) (35 samples, 0.17%)</title><rect x="6.1653%" y="164" width="0.1688%" height="15" fill="rgb(206,27,48)" fg:x="1278" fg:w="35"/><text x="6.4153%" y="174.50"></text></g><g><title>persistent_load (torch/serialization.py:1208) (60 samples, 0.29%)</title><rect x="6.3872%" y="164" width="0.2894%" height="15" fill="rgb(225,35,8)" fg:x="1324" fg:w="60"/><text x="6.6372%" y="174.50"></text></g><g><title>_legacy_load (torch/serialization.py:1272) (340 samples, 1.64%)</title><rect x="5.0461%" y="148" width="1.6402%" height="15" fill="rgb(250,213,24)" fg:x="1046" fg:w="340"/><text x="5.2961%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1274) (147 samples, 0.71%)</title><rect x="6.6863%" y="148" width="0.7092%" height="15" fill="rgb(247,123,22)" fg:x="1386" fg:w="147"/><text x="6.9363%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1276) (50 samples, 0.24%)</title><rect x="7.3954%" y="148" width="0.2412%" height="15" fill="rgb(231,138,38)" fg:x="1533" fg:w="50"/><text x="7.6454%" y="158.50"></text></g><g><title>_legacy_load (torch/serialization.py:1281) (52 samples, 0.25%)</title><rect x="7.6656%" y="148" width="0.2509%" height="15" fill="rgb(231,145,46)" fg:x="1589" fg:w="52"/><text x="7.9156%" y="158.50"></text></g><g><title>load (torch/serialization.py:1040) (1,172 samples, 5.65%)</title><rect x="2.4555%" y="132" width="5.6539%" height="15" fill="rgb(251,118,11)" fg:x="509" fg:w="1172"/><text x="2.7055%" y="142.50">load (t..</text></g><g><title>load (torch/serialization.py:971) (24 samples, 0.12%)</title><rect x="8.1094%" y="132" width="0.1158%" height="15" fill="rgb(217,147,25)" fg:x="1681" fg:w="24"/><text x="8.3594%" y="142.50"></text></g><g><title>__getitem__ (os.py:676) (27 samples, 0.13%)</title><rect x="8.3313%" y="180" width="0.1303%" height="15" fill="rgb(247,81,37)" fg:x="1727" fg:w="27"/><text x="8.5813%" y="190.50"></text></g><g><title>get (_collections_abc.py:763) (51 samples, 0.25%)</title><rect x="8.2879%" y="164" width="0.2460%" height="15" fill="rgb(209,12,38)" fg:x="1718" fg:w="51"/><text x="8.5379%" y="174.50"></text></g><g><title>load (torch/serialization.py:978) (70 samples, 0.34%)</title><rect x="8.2300%" y="132" width="0.3377%" height="15" fill="rgb(227,1,9)" fg:x="1706" fg:w="70"/><text x="8.4800%" y="142.50"></text></g><g><title>getenv (os.py:775) (60 samples, 0.29%)</title><rect x="8.2783%" y="148" width="0.2894%" height="15" fill="rgb(248,47,43)" fg:x="1716" fg:w="60"/><text x="8.5283%" y="158.50"></text></g><g><title>load (torch/serialization.py:997) (61 samples, 0.29%)</title><rect x="8.6545%" y="132" width="0.2943%" height="15" fill="rgb(221,10,30)" fg:x="1794" fg:w="61"/><text x="8.9045%" y="142.50"></text></g><g><title>_open_file_like (torch/serialization.py:449) (24 samples, 0.12%)</title><rect x="8.8330%" y="148" width="0.1158%" height="15" fill="rgb(210,229,1)" fg:x="1831" fg:w="24"/><text x="9.0830%" y="158.50"></text></g><g><title>_load_from_bytes (torch/storage.py:381) (1,370 samples, 6.61%)</title><rect x="2.3928%" y="116" width="6.6091%" height="15" fill="rgb(222,148,37)" fg:x="496" fg:w="1370"/><text x="2.6428%" y="126.50">_load_fro..</text></g><g><title>_rebuild_tensor (torch/_utils.py:180) (101 samples, 0.49%)</title><rect x="9.0164%" y="132" width="0.4872%" height="15" fill="rgb(234,67,33)" fg:x="1869" fg:w="101"/><text x="9.2664%" y="142.50"></text></g><g><title>_rebuild_tensor_v2 (torch/_utils.py:202) (183 samples, 0.88%)</title><rect x="9.0019%" y="116" width="0.8828%" height="15" fill="rgb(247,98,35)" fg:x="1866" fg:w="183"/><text x="9.2519%" y="126.50"></text></g><g><title>_rebuild_tensor (torch/_utils.py:181) (79 samples, 0.38%)</title><rect x="9.5036%" y="132" width="0.3811%" height="15" fill="rgb(247,138,52)" fg:x="1970" fg:w="79"/><text x="9.7536%" y="142.50"></text></g><g><title>&lt;module&gt; (train.py:138) (1,776 samples, 8.57%)</title><rect x="1.4087%" y="68" width="8.5677%" height="15" fill="rgb(213,79,30)" fg:x="292" fg:w="1776"/><text x="1.6587%" y="78.50">&lt;module&gt; (tr..</text></g><g><title>construct_loader (dataset.py:279) (1,776 samples, 8.57%)</title><rect x="1.4087%" y="84" width="8.5677%" height="15" fill="rgb(246,177,23)" fg:x="292" fg:w="1776"/><text x="1.6587%" y="94.50">construct_lo..</text></g><g><title>__init__ (dataset.py:94) (1,723 samples, 8.31%)</title><rect x="1.6643%" y="100" width="8.3120%" height="15" fill="rgb(230,62,27)" fg:x="345" fg:w="1723"/><text x="1.9143%" y="110.50">__init__ (da..</text></g><g><title>train (train.py:46) (30 samples, 0.14%)</title><rect x="10.0391%" y="84" width="0.1447%" height="15" fill="rgb(216,154,8)" fg:x="2081" fg:w="30"/><text x="10.2891%" y="94.50"></text></g><g><title>init (wandb/sdk/wandb_init.py:1252) (28 samples, 0.14%)</title><rect x="10.0487%" y="100" width="0.1351%" height="15" fill="rgb(244,35,45)" fg:x="2083" fg:w="28"/><text x="10.2987%" y="110.50"></text></g><g><title>init (wandb/sdk/wandb_init.py:906) (23 samples, 0.11%)</title><rect x="10.0728%" y="116" width="0.1110%" height="15" fill="rgb(251,115,12)" fg:x="2088" fg:w="23"/><text x="10.3228%" y="126.50"></text></g><g><title>deepcopy (copy.py:153) (26 samples, 0.13%)</title><rect x="10.2224%" y="244" width="0.1254%" height="15" fill="rgb(240,54,50)" fg:x="2119" fg:w="26"/><text x="10.4724%" y="254.50"></text></g><g><title>gfn_sgd (gfn_train.py:380) (29 samples, 0.14%)</title><rect x="10.2127%" y="116" width="0.1399%" height="15" fill="rgb(233,84,52)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:380) (29 samples, 0.14%)</title><rect x="10.2127%" y="132" width="0.1399%" height="15" fill="rgb(207,117,47)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="142.50"></text></g><g><title>deepcopy (copy.py:153) (29 samples, 0.14%)</title><rect x="10.2127%" y="148" width="0.1399%" height="15" fill="rgb(249,43,39)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="158.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (29 samples, 0.14%)</title><rect x="10.2127%" y="164" width="0.1399%" height="15" fill="rgb(209,38,44)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (29 samples, 0.14%)</title><rect x="10.2127%" y="180" width="0.1399%" height="15" fill="rgb(236,212,23)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (29 samples, 0.14%)</title><rect x="10.2127%" y="196" width="0.1399%" height="15" fill="rgb(242,79,21)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (29 samples, 0.14%)</title><rect x="10.2127%" y="212" width="0.1399%" height="15" fill="rgb(211,96,35)" fg:x="2117" fg:w="29"/><text x="10.4627%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (28 samples, 0.14%)</title><rect x="10.2176%" y="228" width="0.1351%" height="15" fill="rgb(253,215,40)" fg:x="2118" fg:w="28"/><text x="10.4676%" y="238.50"></text></g><g><title>perturb_seeds (sampling.py:87) (33 samples, 0.16%)</title><rect x="10.3912%" y="132" width="0.1592%" height="15" fill="rgb(211,81,21)" fg:x="2154" fg:w="33"/><text x="10.6412%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:381) (47 samples, 0.23%)</title><rect x="10.3526%" y="116" width="0.2267%" height="15" fill="rgb(208,190,38)" fg:x="2146" fg:w="47"/><text x="10.6026%" y="126.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (21 samples, 0.10%)</title><rect x="10.7965%" y="164" width="0.1013%" height="15" fill="rgb(235,213,38)" fg:x="2238" fg:w="21"/><text x="11.0465%" y="174.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (21 samples, 0.10%)</title><rect x="10.7965%" y="180" width="0.1013%" height="15" fill="rgb(237,122,38)" fg:x="2238" fg:w="21"/><text x="11.0465%" y="190.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:59) (47 samples, 0.23%)</title><rect x="10.7965%" y="132" width="0.2267%" height="15" fill="rgb(244,218,35)" fg:x="2238" fg:w="47"/><text x="11.0465%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:59) (47 samples, 0.23%)</title><rect x="10.7965%" y="148" width="0.2267%" height="15" fill="rgb(240,68,47)" fg:x="2238" fg:w="47"/><text x="11.0465%" y="158.50"></text></g><g><title>forward (score_model.py:131) (88 samples, 0.42%)</title><rect x="11.0425%" y="180" width="0.4245%" height="15" fill="rgb(210,16,53)" fg:x="2289" fg:w="88"/><text x="11.2925%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:201) (60 samples, 0.29%)</title><rect x="11.1776%" y="196" width="0.2894%" height="15" fill="rgb(235,124,12)" fg:x="2317" fg:w="60"/><text x="11.4276%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (60 samples, 0.29%)</title><rect x="11.1776%" y="212" width="0.2894%" height="15" fill="rgb(224,169,11)" fg:x="2317" fg:w="60"/><text x="11.4276%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (60 samples, 0.29%)</title><rect x="11.1776%" y="228" width="0.2894%" height="15" fill="rgb(250,166,2)" fg:x="2317" fg:w="60"/><text x="11.4276%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (59 samples, 0.28%)</title><rect x="11.1824%" y="244" width="0.2846%" height="15" fill="rgb(242,216,29)" fg:x="2318" fg:w="59"/><text x="11.4324%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (59 samples, 0.28%)</title><rect x="11.1824%" y="260" width="0.2846%" height="15" fill="rgb(230,116,27)" fg:x="2318" fg:w="59"/><text x="11.4324%" y="270.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (185 samples, 0.89%)</title><rect x="11.5056%" y="276" width="0.8925%" height="15" fill="rgb(228,99,48)" fg:x="2385" fg:w="185"/><text x="11.7556%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (185 samples, 0.89%)</title><rect x="11.5056%" y="292" width="0.8925%" height="15" fill="rgb(253,11,6)" fg:x="2385" fg:w="185"/><text x="11.7556%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (185 samples, 0.89%)</title><rect x="11.5056%" y="308" width="0.8925%" height="15" fill="rgb(247,143,39)" fg:x="2385" fg:w="185"/><text x="11.7556%" y="318.50"></text></g><g><title>forward (score_model.py:34) (194 samples, 0.94%)</title><rect x="11.5056%" y="228" width="0.9359%" height="15" fill="rgb(236,97,10)" fg:x="2385" fg:w="194"/><text x="11.7556%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (194 samples, 0.94%)</title><rect x="11.5056%" y="244" width="0.9359%" height="15" fill="rgb(233,208,19)" fg:x="2385" fg:w="194"/><text x="11.7556%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (194 samples, 0.94%)</title><rect x="11.5056%" y="260" width="0.9359%" height="15" fill="rgb(216,164,2)" fg:x="2385" fg:w="194"/><text x="11.7556%" y="270.50"></text></g><g><title>forward (score_model.py:139) (247 samples, 1.19%)</title><rect x="11.4911%" y="180" width="1.1916%" height="15" fill="rgb(220,129,5)" fg:x="2382" fg:w="247"/><text x="11.7411%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (246 samples, 1.19%)</title><rect x="11.4960%" y="196" width="1.1867%" height="15" fill="rgb(242,17,10)" fg:x="2383" fg:w="246"/><text x="11.7460%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (244 samples, 1.18%)</title><rect x="11.5056%" y="212" width="1.1771%" height="15" fill="rgb(242,107,0)" fg:x="2385" fg:w="244"/><text x="11.7556%" y="222.50"></text></g><g><title>forward (score_model.py:43) (30 samples, 0.14%)</title><rect x="12.5380%" y="228" width="0.1447%" height="15" fill="rgb(251,28,31)" fg:x="2599" fg:w="30"/><text x="12.7880%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (30 samples, 0.14%)</title><rect x="12.5380%" y="244" width="0.1447%" height="15" fill="rgb(233,223,10)" fg:x="2599" fg:w="30"/><text x="12.7880%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (30 samples, 0.14%)</title><rect x="12.5380%" y="260" width="0.1447%" height="15" fill="rgb(215,21,27)" fg:x="2599" fg:w="30"/><text x="12.7880%" y="270.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (760 samples, 3.67%)</title><rect x="12.6827%" y="196" width="3.6664%" height="15" fill="rgb(232,23,21)" fg:x="2629" fg:w="760"/><text x="12.9327%" y="206.50">buil..</text></g><g><title>forward (score_model.py:141) (813 samples, 3.92%)</title><rect x="12.6827%" y="180" width="3.9220%" height="15" fill="rgb(244,5,23)" fg:x="2629" fg:w="813"/><text x="12.9327%" y="190.50">forw..</text></g><g><title>build_bond_conv_graph (score_model.py:175) (37 samples, 0.18%)</title><rect x="16.4263%" y="196" width="0.1785%" height="15" fill="rgb(226,81,46)" fg:x="3405" fg:w="37"/><text x="16.6763%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (36 samples, 0.17%)</title><rect x="16.4311%" y="212" width="0.1737%" height="15" fill="rgb(247,70,30)" fg:x="3406" fg:w="36"/><text x="16.6811%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (36 samples, 0.17%)</title><rect x="16.4311%" y="228" width="0.1737%" height="15" fill="rgb(212,68,19)" fg:x="3406" fg:w="36"/><text x="16.6811%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (36 samples, 0.17%)</title><rect x="16.4311%" y="244" width="0.1737%" height="15" fill="rgb(240,187,13)" fg:x="3406" fg:w="36"/><text x="16.6811%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (34 samples, 0.16%)</title><rect x="16.4407%" y="260" width="0.1640%" height="15" fill="rgb(223,113,26)" fg:x="3408" fg:w="34"/><text x="16.6907%" y="270.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (50 samples, 0.24%)</title><rect x="16.6868%" y="276" width="0.2412%" height="15" fill="rgb(206,192,2)" fg:x="3459" fg:w="50"/><text x="16.9368%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (50 samples, 0.24%)</title><rect x="16.6868%" y="292" width="0.2412%" height="15" fill="rgb(241,108,4)" fg:x="3459" fg:w="50"/><text x="16.9368%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (50 samples, 0.24%)</title><rect x="16.6868%" y="308" width="0.2412%" height="15" fill="rgb(247,173,49)" fg:x="3459" fg:w="50"/><text x="16.9368%" y="318.50"></text></g><g><title>forward (score_model.py:34) (52 samples, 0.25%)</title><rect x="16.6868%" y="228" width="0.2509%" height="15" fill="rgb(224,114,35)" fg:x="3459" fg:w="52"/><text x="16.9368%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (52 samples, 0.25%)</title><rect x="16.6868%" y="244" width="0.2509%" height="15" fill="rgb(245,159,27)" fg:x="3459" fg:w="52"/><text x="16.9368%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (52 samples, 0.25%)</title><rect x="16.6868%" y="260" width="0.2509%" height="15" fill="rgb(245,172,44)" fg:x="3459" fg:w="52"/><text x="16.9368%" y="270.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:65) (1,226 samples, 5.91%)</title><rect x="11.0377%" y="132" width="5.9144%" height="15" fill="rgb(236,23,11)" fg:x="2288" fg:w="1226"/><text x="11.2877%" y="142.50">sample_f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (1,226 samples, 5.91%)</title><rect x="11.0377%" y="148" width="5.9144%" height="15" fill="rgb(205,117,38)" fg:x="2288" fg:w="1226"/><text x="11.2877%" y="158.50">_wrapped..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (1,226 samples, 5.91%)</title><rect x="11.0377%" y="164" width="5.9144%" height="15" fill="rgb(237,72,25)" fg:x="2288" fg:w="1226"/><text x="11.2877%" y="174.50">_call_im..</text></g><g><title>forward (score_model.py:150) (55 samples, 0.27%)</title><rect x="16.6868%" y="180" width="0.2653%" height="15" fill="rgb(244,70,9)" fg:x="3459" fg:w="55"/><text x="16.9368%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (55 samples, 0.27%)</title><rect x="16.6868%" y="196" width="0.2653%" height="15" fill="rgb(217,125,39)" fg:x="3459" fg:w="55"/><text x="16.9368%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (55 samples, 0.27%)</title><rect x="16.6868%" y="212" width="0.2653%" height="15" fill="rgb(235,36,10)" fg:x="3459" fg:w="55"/><text x="16.9368%" y="222.50"></text></g><g><title>perturb_batch (torsion.py:106) (48 samples, 0.23%)</title><rect x="17.0438%" y="148" width="0.2316%" height="15" fill="rgb(251,123,47)" fg:x="3533" fg:w="48"/><text x="17.2938%" y="158.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (635 samples, 3.06%)</title><rect x="17.4200%" y="212" width="3.0633%" height="15" fill="rgb(221,13,13)" fg:x="3611" fg:w="635"/><text x="17.6700%" y="222.50">_de..</text></g><g><title>deepcopy (copy.py:153) (632 samples, 3.05%)</title><rect x="17.4345%" y="228" width="3.0489%" height="15" fill="rgb(238,131,9)" fg:x="3614" fg:w="632"/><text x="17.6845%" y="238.50">dee..</text></g><g><title>__deepcopy__ (torch/storage.py:114) (631 samples, 3.04%)</title><rect x="17.4393%" y="244" width="3.0440%" height="15" fill="rgb(211,50,8)" fg:x="3615" fg:w="631"/><text x="17.6893%" y="254.50">__d..</text></g><g><title>clone (torch/storage.py:128) (631 samples, 3.04%)</title><rect x="17.4393%" y="260" width="3.0440%" height="15" fill="rgb(245,182,24)" fg:x="3615" fg:w="631"/><text x="17.6893%" y="270.50">clo..</text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (642 samples, 3.10%)</title><rect x="17.4152%" y="196" width="3.0971%" height="15" fill="rgb(242,14,37)" fg:x="3610" fg:w="642"/><text x="17.6652%" y="206.50">__d..</text></g><g><title>modify_conformer (torsion.py:69) (671 samples, 3.24%)</title><rect x="17.3332%" y="164" width="3.2370%" height="15" fill="rgb(246,228,12)" fg:x="3593" fg:w="671"/><text x="17.5832%" y="174.50">mod..</text></g><g><title>deepcopy (copy.py:153) (668 samples, 3.22%)</title><rect x="17.3477%" y="180" width="3.2225%" height="15" fill="rgb(213,55,15)" fg:x="3596" fg:w="668"/><text x="17.5977%" y="190.50">dee..</text></g><g><title>modify_conformer (torsion.py:75) (40 samples, 0.19%)</title><rect x="20.5943%" y="164" width="0.1930%" height="15" fill="rgb(209,9,3)" fg:x="4269" fg:w="40"/><text x="20.8443%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:85) (66 samples, 0.32%)</title><rect x="20.9176%" y="164" width="0.3184%" height="15" fill="rgb(230,59,30)" fg:x="4336" fg:w="66"/><text x="21.1676%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:86) (70 samples, 0.34%)</title><rect x="21.2359%" y="164" width="0.3377%" height="15" fill="rgb(209,121,21)" fg:x="4402" fg:w="70"/><text x="21.4859%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:88) (106 samples, 0.51%)</title><rect x="21.5736%" y="164" width="0.5114%" height="15" fill="rgb(220,109,13)" fg:x="4472" fg:w="106"/><text x="21.8236%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:109) (1,005 samples, 4.85%)</title><rect x="17.3091%" y="148" width="4.8483%" height="15" fill="rgb(232,18,1)" fg:x="3588" fg:w="1005"/><text x="17.5591%" y="158.50">pertur..</text></g><g><title>perturb_batch (torsion.py:113) (27 samples, 0.13%)</title><rect x="22.1574%" y="148" width="0.1303%" height="15" fill="rgb(215,41,42)" fg:x="4593" fg:w="27"/><text x="22.4074%" y="158.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:85) (1,109 samples, 5.35%)</title><rect x="16.9569%" y="132" width="5.3500%" height="15" fill="rgb(224,123,36)" fg:x="3515" fg:w="1109"/><text x="17.2069%" y="142.50">sample_..</text></g><g><title>deepcopy (copy.py:153) (32 samples, 0.15%)</title><rect x="22.7507%" y="372" width="0.1544%" height="15" fill="rgb(240,125,3)" fg:x="4716" fg:w="32"/><text x="23.0007%" y="382.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (32 samples, 0.15%)</title><rect x="22.7507%" y="388" width="0.1544%" height="15" fill="rgb(205,98,50)" fg:x="4716" fg:w="32"/><text x="23.0007%" y="398.50"></text></g><g><title>clone (torch/storage.py:128) (32 samples, 0.15%)</title><rect x="22.7507%" y="404" width="0.1544%" height="15" fill="rgb(205,185,37)" fg:x="4716" fg:w="32"/><text x="23.0007%" y="414.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (41 samples, 0.20%)</title><rect x="22.7121%" y="356" width="0.1978%" height="15" fill="rgb(238,207,15)" fg:x="4708" fg:w="41"/><text x="22.9621%" y="366.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (50 samples, 0.24%)</title><rect x="22.7073%" y="340" width="0.2412%" height="15" fill="rgb(213,199,42)" fg:x="4707" fg:w="50"/><text x="22.9573%" y="350.50"></text></g><g><title>deepcopy (copy.py:146) (178 samples, 0.86%)</title><rect x="22.3117%" y="244" width="0.8587%" height="15" fill="rgb(235,201,11)" fg:x="4625" fg:w="178"/><text x="22.5617%" y="254.50"></text></g><g><title>_deepcopy_list (copy.py:205) (178 samples, 0.86%)</title><rect x="22.3117%" y="260" width="0.8587%" height="15" fill="rgb(207,46,11)" fg:x="4625" fg:w="178"/><text x="22.5617%" y="270.50"></text></g><g><title>deepcopy (copy.py:153) (156 samples, 0.75%)</title><rect x="22.4179%" y="276" width="0.7526%" height="15" fill="rgb(241,35,35)" fg:x="4647" fg:w="156"/><text x="22.6679%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (103 samples, 0.50%)</title><rect x="22.6735%" y="292" width="0.4969%" height="15" fill="rgb(243,32,47)" fg:x="4700" fg:w="103"/><text x="22.9235%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (102 samples, 0.49%)</title><rect x="22.6784%" y="308" width="0.4921%" height="15" fill="rgb(247,202,23)" fg:x="4701" fg:w="102"/><text x="22.9284%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (100 samples, 0.48%)</title><rect x="22.6880%" y="324" width="0.4824%" height="15" fill="rgb(219,102,11)" fg:x="4703" fg:w="100"/><text x="22.9380%" y="334.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:90) (192 samples, 0.93%)</title><rect x="22.3117%" y="132" width="0.9262%" height="15" fill="rgb(243,110,44)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="142.50"></text></g><g><title>deepcopy (copy.py:153) (192 samples, 0.93%)</title><rect x="22.3117%" y="148" width="0.9262%" height="15" fill="rgb(222,74,54)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="158.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (192 samples, 0.93%)</title><rect x="22.3117%" y="164" width="0.9262%" height="15" fill="rgb(216,99,12)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (192 samples, 0.93%)</title><rect x="22.3117%" y="180" width="0.9262%" height="15" fill="rgb(226,22,26)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (192 samples, 0.93%)</title><rect x="22.3117%" y="196" width="0.9262%" height="15" fill="rgb(217,163,10)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (192 samples, 0.93%)</title><rect x="22.3117%" y="212" width="0.9262%" height="15" fill="rgb(213,25,53)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (192 samples, 0.93%)</title><rect x="22.3117%" y="228" width="0.9262%" height="15" fill="rgb(252,105,26)" fg:x="4625" fg:w="192"/><text x="22.5617%" y="238.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (28 samples, 0.14%)</title><rect x="23.5178%" y="212" width="0.1351%" height="15" fill="rgb(220,39,43)" fg:x="4875" fg:w="28"/><text x="23.7678%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (74 samples, 0.36%)</title><rect x="23.8410%" y="212" width="0.3570%" height="15" fill="rgb(229,68,48)" fg:x="4942" fg:w="74"/><text x="24.0910%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (49 samples, 0.24%)</title><rect x="24.1980%" y="212" width="0.2364%" height="15" fill="rgb(252,8,32)" fg:x="5016" fg:w="49"/><text x="24.4480%" y="222.50"></text></g><g><title>narrow (torch_geometric/utils/_select.py:61) (39 samples, 0.19%)</title><rect x="24.2462%" y="228" width="0.1881%" height="15" fill="rgb(223,20,43)" fg:x="5026" fg:w="39"/><text x="24.4962%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:86) (27 samples, 0.13%)</title><rect x="24.4488%" y="212" width="0.1303%" height="15" fill="rgb(229,81,49)" fg:x="5068" fg:w="27"/><text x="24.6988%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:87) (48 samples, 0.23%)</title><rect x="24.5791%" y="212" width="0.2316%" height="15" fill="rgb(236,28,36)" fg:x="5095" fg:w="48"/><text x="24.8291%" y="222.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (284 samples, 1.37%)</title><rect x="23.4454%" y="196" width="1.3701%" height="15" fill="rgb(249,185,26)" fg:x="4860" fg:w="284"/><text x="23.6954%" y="206.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (313 samples, 1.51%)</title><rect x="23.3152%" y="180" width="1.5100%" height="15" fill="rgb(249,174,33)" fg:x="4833" fg:w="313"/><text x="23.5652%" y="190.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (319 samples, 1.54%)</title><rect x="23.3007%" y="164" width="1.5389%" height="15" fill="rgb(233,201,37)" fg:x="4830" fg:w="319"/><text x="23.5507%" y="174.50"></text></g><g><title>pyg_to_mol (sampling.py:239) (145 samples, 0.70%)</title><rect x="24.9940%" y="164" width="0.6995%" height="15" fill="rgb(221,78,26)" fg:x="5181" fg:w="145"/><text x="25.2440%" y="174.50"></text></g><g><title>pyg_to_mol (sampling.py:254) (45 samples, 0.22%)</title><rect x="25.7176%" y="164" width="0.2171%" height="15" fill="rgb(250,127,30)" fg:x="5331" fg:w="45"/><text x="25.9676%" y="174.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (34 samples, 0.16%)</title><rect x="26.3737%" y="292" width="0.1640%" height="15" fill="rgb(230,49,44)" fg:x="5467" fg:w="34"/><text x="26.6237%" y="302.50"></text></g><g><title>clone (torch/storage.py:128) (33 samples, 0.16%)</title><rect x="26.3785%" y="308" width="0.1592%" height="15" fill="rgb(229,67,23)" fg:x="5468" fg:w="33"/><text x="26.6285%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (37 samples, 0.18%)</title><rect x="26.3689%" y="276" width="0.1785%" height="15" fill="rgb(249,83,47)" fg:x="5466" fg:w="37"/><text x="26.6189%" y="286.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (47 samples, 0.23%)</title><rect x="26.3447%" y="260" width="0.2267%" height="15" fill="rgb(215,43,3)" fg:x="5461" fg:w="47"/><text x="26.5947%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (55 samples, 0.27%)</title><rect x="26.3399%" y="244" width="0.2653%" height="15" fill="rgb(238,154,13)" fg:x="5460" fg:w="55"/><text x="26.5899%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (109 samples, 0.53%)</title><rect x="26.2965%" y="228" width="0.5258%" height="15" fill="rgb(219,56,2)" fg:x="5451" fg:w="109"/><text x="26.5465%" y="238.50"></text></g><g><title>deepcopy (copy.py:153) (182 samples, 0.88%)</title><rect x="25.9540%" y="180" width="0.8780%" height="15" fill="rgb(233,0,4)" fg:x="5380" fg:w="182"/><text x="26.2040%" y="190.50"></text></g><g><title>deepcopy (copy.py:146) (113 samples, 0.55%)</title><rect x="26.2868%" y="196" width="0.5451%" height="15" fill="rgb(235,30,7)" fg:x="5449" fg:w="113"/><text x="26.5368%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (113 samples, 0.55%)</title><rect x="26.2868%" y="212" width="0.5451%" height="15" fill="rgb(250,79,13)" fg:x="5449" fg:w="113"/><text x="26.5368%" y="222.50"></text></g><g><title>gfn_sgd (gfn_train.py:383) (3,360 samples, 16.21%)</title><rect x="10.6276%" y="116" width="16.2092%" height="15" fill="rgb(211,146,34)" fg:x="2203" fg:w="3360"/><text x="10.8776%" y="126.50">gfn_sgd (gfn_train.py:383)</text></g><g><title>sample_forward_trajs (gfn_train.py:91) (746 samples, 3.60%)</title><rect x="23.2380%" y="132" width="3.5988%" height="15" fill="rgb(228,22,38)" fg:x="4817" fg:w="746"/><text x="23.4880%" y="142.50">samp..</text></g><g><title>&lt;listcomp&gt; (gfn_train.py:91) (746 samples, 3.60%)</title><rect x="23.2380%" y="148" width="3.5988%" height="15" fill="rgb(235,168,5)" fg:x="4817" fg:w="746"/><text x="23.4880%" y="158.50">&lt;lis..</text></g><g><title>pyg_to_mol (sampling.py:256) (187 samples, 0.90%)</title><rect x="25.9347%" y="164" width="0.9021%" height="15" fill="rgb(221,155,16)" fg:x="5376" fg:w="187"/><text x="26.1847%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (26 samples, 0.13%)</title><rect x="27.3337%" y="388" width="0.1254%" height="15" fill="rgb(215,215,53)" fg:x="5666" fg:w="26"/><text x="27.5837%" y="398.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (25 samples, 0.12%)</title><rect x="27.3385%" y="404" width="0.1206%" height="15" fill="rgb(223,4,10)" fg:x="5667" fg:w="25"/><text x="27.5885%" y="414.50"></text></g><g><title>clone (torch/storage.py:128) (24 samples, 0.12%)</title><rect x="27.3433%" y="420" width="0.1158%" height="15" fill="rgb(234,103,6)" fg:x="5668" fg:w="24"/><text x="27.5933%" y="430.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (30 samples, 0.14%)</title><rect x="27.3240%" y="372" width="0.1447%" height="15" fill="rgb(227,97,0)" fg:x="5664" fg:w="30"/><text x="27.5740%" y="382.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (34 samples, 0.16%)</title><rect x="27.3192%" y="356" width="0.1640%" height="15" fill="rgb(234,150,53)" fg:x="5663" fg:w="34"/><text x="27.5692%" y="366.50"></text></g><g><title>deepcopy (copy.py:146) (124 samples, 0.60%)</title><rect x="27.0008%" y="260" width="0.5982%" height="15" fill="rgb(228,201,54)" fg:x="5597" fg:w="124"/><text x="27.2508%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (123 samples, 0.59%)</title><rect x="27.0056%" y="276" width="0.5934%" height="15" fill="rgb(222,22,37)" fg:x="5598" fg:w="123"/><text x="27.2556%" y="286.50"></text></g><g><title>deepcopy (copy.py:153) (106 samples, 0.51%)</title><rect x="27.0877%" y="292" width="0.5114%" height="15" fill="rgb(237,53,32)" fg:x="5615" fg:w="106"/><text x="27.3377%" y="302.50"></text></g><g><title>deepcopy (copy.py:146) (65 samples, 0.31%)</title><rect x="27.2854%" y="308" width="0.3136%" height="15" fill="rgb(233,25,53)" fg:x="5656" fg:w="65"/><text x="27.5354%" y="318.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (65 samples, 0.31%)</title><rect x="27.2854%" y="324" width="0.3136%" height="15" fill="rgb(210,40,34)" fg:x="5656" fg:w="65"/><text x="27.5354%" y="334.50"></text></g><g><title>deepcopy (copy.py:153) (61 samples, 0.29%)</title><rect x="27.3047%" y="340" width="0.2943%" height="15" fill="rgb(241,220,44)" fg:x="5660" fg:w="61"/><text x="27.5547%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (142 samples, 0.69%)</title><rect x="27.0008%" y="164" width="0.6850%" height="15" fill="rgb(235,28,35)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (142 samples, 0.69%)</title><rect x="27.0008%" y="180" width="0.6850%" height="15" fill="rgb(210,56,17)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (142 samples, 0.69%)</title><rect x="27.0008%" y="196" width="0.6850%" height="15" fill="rgb(224,130,29)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (142 samples, 0.69%)</title><rect x="27.0008%" y="212" width="0.6850%" height="15" fill="rgb(235,212,8)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (142 samples, 0.69%)</title><rect x="27.0008%" y="228" width="0.6850%" height="15" fill="rgb(223,33,50)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (142 samples, 0.69%)</title><rect x="27.0008%" y="244" width="0.6850%" height="15" fill="rgb(219,149,13)" fg:x="5597" fg:w="142"/><text x="27.2508%" y="254.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (27 samples, 0.13%)</title><rect x="27.7051%" y="244" width="0.1303%" height="15" fill="rgb(250,156,29)" fg:x="5743" fg:w="27"/><text x="27.9551%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (27 samples, 0.13%)</title><rect x="27.7051%" y="260" width="0.1303%" height="15" fill="rgb(216,193,19)" fg:x="5743" fg:w="27"/><text x="27.9551%" y="270.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:158) (198 samples, 0.96%)</title><rect x="26.8850%" y="148" width="0.9552%" height="15" fill="rgb(216,135,14)" fg:x="5573" fg:w="198"/><text x="27.1350%" y="158.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (32 samples, 0.15%)</title><rect x="27.6859%" y="164" width="0.1544%" height="15" fill="rgb(241,47,5)" fg:x="5739" fg:w="32"/><text x="27.9359%" y="174.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (32 samples, 0.15%)</title><rect x="27.6859%" y="180" width="0.1544%" height="15" fill="rgb(233,42,35)" fg:x="5739" fg:w="32"/><text x="27.9359%" y="190.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (32 samples, 0.15%)</title><rect x="27.6859%" y="196" width="0.1544%" height="15" fill="rgb(231,13,6)" fg:x="5739" fg:w="32"/><text x="27.9359%" y="206.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (31 samples, 0.15%)</title><rect x="27.6907%" y="212" width="0.1495%" height="15" fill="rgb(207,181,40)" fg:x="5740" fg:w="31"/><text x="27.9407%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (31 samples, 0.15%)</title><rect x="27.6907%" y="228" width="0.1495%" height="15" fill="rgb(254,173,49)" fg:x="5740" fg:w="31"/><text x="27.9407%" y="238.50"></text></g><g><title>forward (score_model.py:131) (27 samples, 0.13%)</title><rect x="27.8450%" y="196" width="0.1303%" height="15" fill="rgb(221,1,38)" fg:x="5772" fg:w="27"/><text x="28.0950%" y="206.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (37 samples, 0.18%)</title><rect x="27.9898%" y="292" width="0.1785%" height="15" fill="rgb(206,124,46)" fg:x="5802" fg:w="37"/><text x="28.2398%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (36 samples, 0.17%)</title><rect x="27.9946%" y="308" width="0.1737%" height="15" fill="rgb(249,21,11)" fg:x="5803" fg:w="36"/><text x="28.2446%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (36 samples, 0.17%)</title><rect x="27.9946%" y="324" width="0.1737%" height="15" fill="rgb(222,201,40)" fg:x="5803" fg:w="36"/><text x="28.2446%" y="334.50"></text></g><g><title>forward (score_model.py:34) (41 samples, 0.20%)</title><rect x="27.9849%" y="244" width="0.1978%" height="15" fill="rgb(235,61,29)" fg:x="5801" fg:w="41"/><text x="28.2349%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (40 samples, 0.19%)</title><rect x="27.9898%" y="260" width="0.1930%" height="15" fill="rgb(219,207,3)" fg:x="5802" fg:w="40"/><text x="28.2398%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (40 samples, 0.19%)</title><rect x="27.9898%" y="276" width="0.1930%" height="15" fill="rgb(222,56,46)" fg:x="5802" fg:w="40"/><text x="28.2398%" y="286.50"></text></g><g><title>forward (score_model.py:139) (80 samples, 0.39%)</title><rect x="27.9801%" y="196" width="0.3859%" height="15" fill="rgb(239,76,54)" fg:x="5800" fg:w="80"/><text x="28.2301%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (80 samples, 0.39%)</title><rect x="27.9801%" y="212" width="0.3859%" height="15" fill="rgb(231,124,27)" fg:x="5800" fg:w="80"/><text x="28.2301%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (80 samples, 0.39%)</title><rect x="27.9801%" y="228" width="0.3859%" height="15" fill="rgb(249,195,6)" fg:x="5800" fg:w="80"/><text x="28.2301%" y="238.50"></text></g><g><title>forward (score_model.py:43) (27 samples, 0.13%)</title><rect x="28.2358%" y="244" width="0.1303%" height="15" fill="rgb(237,174,47)" fg:x="5853" fg:w="27"/><text x="28.4858%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (27 samples, 0.13%)</title><rect x="28.2358%" y="260" width="0.1303%" height="15" fill="rgb(206,201,31)" fg:x="5853" fg:w="27"/><text x="28.4858%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (26 samples, 0.13%)</title><rect x="28.2406%" y="276" width="0.1254%" height="15" fill="rgb(231,57,52)" fg:x="5854" fg:w="26"/><text x="28.4906%" y="286.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (642 samples, 3.10%)</title><rect x="28.3661%" y="212" width="3.0971%" height="15" fill="rgb(248,177,22)" fg:x="5880" fg:w="642"/><text x="28.6161%" y="222.50">bui..</text></g><g><title>forward (score_model.py:141) (655 samples, 3.16%)</title><rect x="28.3661%" y="196" width="3.1598%" height="15" fill="rgb(215,211,37)" fg:x="5880" fg:w="655"/><text x="28.6161%" y="206.50">for..</text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:161) (794 samples, 3.83%)</title><rect x="27.8450%" y="148" width="3.8304%" height="15" fill="rgb(241,128,51)" fg:x="5772" fg:w="794"/><text x="28.0950%" y="158.50">get_..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (794 samples, 3.83%)</title><rect x="27.8450%" y="164" width="3.8304%" height="15" fill="rgb(227,165,31)" fg:x="5772" fg:w="794"/><text x="28.0950%" y="174.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (794 samples, 3.83%)</title><rect x="27.8450%" y="180" width="3.8304%" height="15" fill="rgb(228,167,24)" fg:x="5772" fg:w="794"/><text x="28.0950%" y="190.50">_cal..</text></g><g><title>get_loss (gfn_train.py:237) (1,028 samples, 4.96%)</title><rect x="26.8368%" y="132" width="4.9592%" height="15" fill="rgb(228,143,12)" fg:x="5563" fg:w="1028"/><text x="27.0868%" y="142.50">get_lo..</text></g><g><title>get_loss (gfn_train.py:240) (25 samples, 0.12%)</title><rect x="31.7960%" y="132" width="0.1206%" height="15" fill="rgb(249,149,8)" fg:x="6591" fg:w="25"/><text x="32.0460%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (gfn_train.py:240) (25 samples, 0.12%)</title><rect x="31.7960%" y="148" width="0.1206%" height="15" fill="rgb(243,35,44)" fg:x="6591" fg:w="25"/><text x="32.0460%" y="158.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (25 samples, 0.12%)</title><rect x="31.7960%" y="164" width="0.1206%" height="15" fill="rgb(246,89,9)" fg:x="6591" fg:w="25"/><text x="32.0460%" y="174.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (25 samples, 0.12%)</title><rect x="31.7960%" y="180" width="0.1206%" height="15" fill="rgb(233,213,13)" fg:x="6591" fg:w="25"/><text x="32.0460%" y="190.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (25 samples, 0.12%)</title><rect x="31.7960%" y="196" width="0.1206%" height="15" fill="rgb(233,141,41)" fg:x="6591" fg:w="25"/><text x="32.0460%" y="206.50"></text></g><g><title>mmff_energy (likelihood.py:21) (65 samples, 0.31%)</title><rect x="32.0276%" y="180" width="0.3136%" height="15" fill="rgb(239,167,4)" fg:x="6639" fg:w="65"/><text x="32.2776%" y="190.50"></text></g><g><title>get_loss (gfn_train.py:244) (117 samples, 0.56%)</title><rect x="31.9166%" y="132" width="0.5644%" height="15" fill="rgb(209,217,16)" fg:x="6616" fg:w="117"/><text x="32.1666%" y="142.50"></text></g><g><title>get_logrew (gfn_train.py:194) (117 samples, 0.56%)</title><rect x="31.9166%" y="148" width="0.5644%" height="15" fill="rgb(219,88,35)" fg:x="6616" fg:w="117"/><text x="32.1666%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:194) (117 samples, 0.56%)</title><rect x="31.9166%" y="164" width="0.5644%" height="15" fill="rgb(220,193,23)" fg:x="6616" fg:w="117"/><text x="32.1666%" y="174.50"></text></g><g><title>gfn_sgd (gfn_train.py:393) (1,187 samples, 5.73%)</title><rect x="26.8368%" y="116" width="5.7263%" height="15" fill="rgb(230,90,52)" fg:x="5563" fg:w="1187"/><text x="27.0868%" y="126.50">gfn_sgd..</text></g><g><title>log_gfn_metrics (gfn_metrics.py:159) (4,636 samples, 22.36%)</title><rect x="10.2031%" y="100" width="22.3648%" height="15" fill="rgb(252,106,19)" fg:x="2115" fg:w="4636"/><text x="10.4531%" y="110.50">log_gfn_metrics (gfn_metrics.py:159)</text></g><g><title>log_gfn_metrics (gfn_metrics.py:161) (41 samples, 0.20%)</title><rect x="32.5679%" y="100" width="0.1978%" height="15" fill="rgb(206,74,20)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="110.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:452) (41 samples, 0.20%)</title><rect x="32.5679%" y="116" width="0.1978%" height="15" fill="rgb(230,138,44)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="126.50"></text></g><g><title>wrapper_fn (wandb/sdk/wandb_run.py:403) (41 samples, 0.20%)</title><rect x="32.5679%" y="132" width="0.1978%" height="15" fill="rgb(235,182,43)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="142.50"></text></g><g><title>wrapper (wandb/sdk/wandb_run.py:393) (41 samples, 0.20%)</title><rect x="32.5679%" y="148" width="0.1978%" height="15" fill="rgb(242,16,51)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="158.50"></text></g><g><title>log (wandb/sdk/wandb_run.py:1934) (41 samples, 0.20%)</title><rect x="32.5679%" y="164" width="0.1978%" height="15" fill="rgb(248,9,4)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="174.50"></text></g><g><title>_log (wandb/sdk/wandb_run.py:1653) (41 samples, 0.20%)</title><rect x="32.5679%" y="180" width="0.1978%" height="15" fill="rgb(210,31,22)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="190.50"></text></g><g><title>_partial_history_callback (wandb/sdk/wandb_run.py:1525) (41 samples, 0.20%)</title><rect x="32.5679%" y="196" width="0.1978%" height="15" fill="rgb(239,54,39)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="206.50"></text></g><g><title>publish_partial_history (wandb/sdk/interface/interface.py:629) (41 samples, 0.20%)</title><rect x="32.5679%" y="212" width="0.1978%" height="15" fill="rgb(230,99,41)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="222.50"></text></g><g><title>history_dict_to_json (wandb/sdk/data_types/utils.py:54) (41 samples, 0.20%)</title><rect x="32.5679%" y="228" width="0.1978%" height="15" fill="rgb(253,106,12)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="238.50"></text></g><g><title>val_to_json (wandb/sdk/data_types/utils.py:84) (41 samples, 0.20%)</title><rect x="32.5679%" y="244" width="0.1978%" height="15" fill="rgb(213,46,41)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="254.50"></text></g><g><title>is_pandas_data_frame (wandb/util.py:459) (41 samples, 0.20%)</title><rect x="32.5679%" y="260" width="0.1978%" height="15" fill="rgb(215,133,35)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (41 samples, 0.20%)</title><rect x="32.5679%" y="276" width="0.1978%" height="15" fill="rgb(213,28,5)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (41 samples, 0.20%)</title><rect x="32.5679%" y="292" width="0.1978%" height="15" fill="rgb(215,77,49)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (41 samples, 0.20%)</title><rect x="32.5679%" y="308" width="0.1978%" height="15" fill="rgb(248,100,22)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (41 samples, 0.20%)</title><rect x="32.5679%" y="324" width="0.1978%" height="15" fill="rgb(208,67,9)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (41 samples, 0.20%)</title><rect x="32.5679%" y="340" width="0.1978%" height="15" fill="rgb(219,133,21)" fg:x="6751" fg:w="41"/><text x="32.8179%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (32 samples, 0.15%)</title><rect x="32.6113%" y="356" width="0.1544%" height="15" fill="rgb(246,46,29)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (32 samples, 0.15%)</title><rect x="32.6113%" y="372" width="0.1544%" height="15" fill="rgb(246,185,52)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (32 samples, 0.15%)</title><rect x="32.6113%" y="388" width="0.1544%" height="15" fill="rgb(252,136,11)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (32 samples, 0.15%)</title><rect x="32.6113%" y="404" width="0.1544%" height="15" fill="rgb(219,138,53)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (32 samples, 0.15%)</title><rect x="32.6113%" y="420" width="0.1544%" height="15" fill="rgb(211,51,23)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (32 samples, 0.15%)</title><rect x="32.6113%" y="436" width="0.1544%" height="15" fill="rgb(247,221,28)" fg:x="6760" fg:w="32"/><text x="32.8613%" y="446.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:240) (28 samples, 0.14%)</title><rect x="32.7946%" y="276" width="0.1351%" height="15" fill="rgb(251,222,45)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="286.50"></text></g><g><title>set_clip_path (matplotlib/artist.py:800) (28 samples, 0.14%)</title><rect x="32.7946%" y="292" width="0.1351%" height="15" fill="rgb(217,162,53)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="302.50"></text></g><g><title>get_transform (matplotlib/patches.py:308) (28 samples, 0.14%)</title><rect x="32.7946%" y="308" width="0.1351%" height="15" fill="rgb(229,93,14)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="318.50"></text></g><g><title>get_patch_transform (matplotlib/patches.py:803) (28 samples, 0.14%)</title><rect x="32.7946%" y="324" width="0.1351%" height="15" fill="rgb(209,67,49)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="334.50"></text></g><g><title>__add__ (matplotlib/transforms.py:1357) (28 samples, 0.14%)</title><rect x="32.7946%" y="340" width="0.1351%" height="15" fill="rgb(213,87,29)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="350.50"></text></g><g><title>composite_transform_factory (matplotlib/transforms.py:2541) (28 samples, 0.14%)</title><rect x="32.7946%" y="356" width="0.1351%" height="15" fill="rgb(205,151,52)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="366.50"></text></g><g><title>__init__ (matplotlib/transforms.py:2376) (28 samples, 0.14%)</title><rect x="32.7946%" y="372" width="0.1351%" height="15" fill="rgb(253,215,39)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="382.50"></text></g><g><title>set_children (matplotlib/transforms.py:198) (28 samples, 0.14%)</title><rect x="32.7946%" y="388" width="0.1351%" height="15" fill="rgb(221,220,41)" fg:x="6798" fg:w="28"/><text x="33.0446%" y="398.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1359) (29 samples, 0.14%)</title><rect x="32.7946%" y="212" width="0.1399%" height="15" fill="rgb(218,133,21)" fg:x="6798" fg:w="29"/><text x="33.0446%" y="222.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:300) (29 samples, 0.14%)</title><rect x="32.7946%" y="228" width="0.1399%" height="15" fill="rgb(221,193,43)" fg:x="6798" fg:w="29"/><text x="33.0446%" y="238.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:1137) (29 samples, 0.14%)</title><rect x="32.7946%" y="244" width="0.1399%" height="15" fill="rgb(240,128,52)" fg:x="6798" fg:w="29"/><text x="33.0446%" y="254.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:300) (29 samples, 0.14%)</title><rect x="32.7946%" y="260" width="0.1399%" height="15" fill="rgb(253,114,12)" fg:x="6798" fg:w="29"/><text x="33.0446%" y="270.50"></text></g><g><title>log_gfn_metrics (gfn_metrics.py:197) (36 samples, 0.17%)</title><rect x="32.7657%" y="100" width="0.1737%" height="15" fill="rgb(215,223,47)" fg:x="6792" fg:w="36"/><text x="33.0157%" y="110.50"></text></g><g><title>subplots (matplotlib/pyplot.py:1760) (36 samples, 0.17%)</title><rect x="32.7657%" y="116" width="0.1737%" height="15" fill="rgb(248,225,23)" fg:x="6792" fg:w="36"/><text x="33.0157%" y="126.50"></text></g><g><title>subplots (matplotlib/figure.py:861) (36 samples, 0.17%)</title><rect x="32.7657%" y="132" width="0.1737%" height="15" fill="rgb(250,108,0)" fg:x="6792" fg:w="36"/><text x="33.0157%" y="142.50"></text></g><g><title>subplots (matplotlib/gridspec.py:283) (36 samples, 0.17%)</title><rect x="32.7657%" y="148" width="0.1737%" height="15" fill="rgb(228,208,7)" fg:x="6792" fg:w="36"/><text x="33.0157%" y="158.50"></text></g><g><title>add_subplot (matplotlib/figure.py:710) (36 samples, 0.17%)</title><rect x="32.7657%" y="164" width="0.1737%" height="15" fill="rgb(244,45,10)" fg:x="6792" fg:w="36"/><text x="33.0157%" y="174.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:681) (31 samples, 0.15%)</title><rect x="32.7898%" y="180" width="0.1495%" height="15" fill="rgb(207,125,25)" fg:x="6797" fg:w="31"/><text x="33.0398%" y="190.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1391) (31 samples, 0.15%)</title><rect x="32.7898%" y="196" width="0.1495%" height="15" fill="rgb(210,195,18)" fg:x="6797" fg:w="31"/><text x="33.0398%" y="206.50"></text></g><g><title>mmff_energy (likelihood.py:21) (31 samples, 0.15%)</title><rect x="32.9973%" y="148" width="0.1495%" height="15" fill="rgb(249,80,12)" fg:x="6840" fg:w="31"/><text x="33.2473%" y="158.50"></text></g><g><title>get_logrew (gfn_train.py:192) (38 samples, 0.18%)</title><rect x="32.9876%" y="132" width="0.1833%" height="15" fill="rgb(221,65,9)" fg:x="6838" fg:w="38"/><text x="33.2376%" y="142.50"></text></g><g><title>get_2dheatmap_array_and_pt (gfn_metrics.py:101) (40 samples, 0.19%)</title><rect x="32.9828%" y="116" width="0.1930%" height="15" fill="rgb(235,49,36)" fg:x="6837" fg:w="40"/><text x="33.2328%" y="126.50"></text></g><g><title>deepcopy (copy.py:153) (33 samples, 0.16%)</title><rect x="33.2288%" y="164" width="0.1592%" height="15" fill="rgb(225,32,20)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (33 samples, 0.16%)</title><rect x="33.2288%" y="180" width="0.1592%" height="15" fill="rgb(215,141,46)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (33 samples, 0.16%)</title><rect x="33.2288%" y="196" width="0.1592%" height="15" fill="rgb(250,160,47)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (33 samples, 0.16%)</title><rect x="33.2288%" y="212" width="0.1592%" height="15" fill="rgb(216,222,40)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (33 samples, 0.16%)</title><rect x="33.2288%" y="228" width="0.1592%" height="15" fill="rgb(234,217,39)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (33 samples, 0.16%)</title><rect x="33.2288%" y="244" width="0.1592%" height="15" fill="rgb(207,178,40)" fg:x="6888" fg:w="33"/><text x="33.4788%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (31 samples, 0.15%)</title><rect x="33.2385%" y="260" width="0.1495%" height="15" fill="rgb(221,136,13)" fg:x="6890" fg:w="31"/><text x="33.4885%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (31 samples, 0.15%)</title><rect x="33.2385%" y="276" width="0.1495%" height="15" fill="rgb(249,199,10)" fg:x="6890" fg:w="31"/><text x="33.4885%" y="286.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (31 samples, 0.15%)</title><rect x="33.2385%" y="292" width="0.1495%" height="15" fill="rgb(249,222,13)" fg:x="6890" fg:w="31"/><text x="33.4885%" y="302.50"></text></g><g><title>deepcopy (copy.py:153) (31 samples, 0.15%)</title><rect x="33.2385%" y="308" width="0.1495%" height="15" fill="rgb(244,185,38)" fg:x="6890" fg:w="31"/><text x="33.4885%" y="318.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (30 samples, 0.14%)</title><rect x="33.2433%" y="324" width="0.1447%" height="15" fill="rgb(236,202,9)" fg:x="6891" fg:w="30"/><text x="33.4933%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (30 samples, 0.14%)</title><rect x="33.2433%" y="340" width="0.1447%" height="15" fill="rgb(250,229,37)" fg:x="6891" fg:w="30"/><text x="33.4933%" y="350.50"></text></g><g><title>sample_backward_trajs (gfn_train.py:114) (45 samples, 0.22%)</title><rect x="33.2288%" y="148" width="0.2171%" height="15" fill="rgb(206,174,23)" fg:x="6888" fg:w="45"/><text x="33.4788%" y="158.50"></text></g><g><title>__contains__ (_collections_abc.py:769) (28 samples, 0.14%)</title><rect x="33.9814%" y="196" width="0.1351%" height="15" fill="rgb(211,33,43)" fg:x="7044" fg:w="28"/><text x="34.2314%" y="206.50"></text></g><g><title>perturb_batch (torsion.py:105) (131 samples, 0.63%)</title><rect x="33.6147%" y="164" width="0.6320%" height="15" fill="rgb(245,58,50)" fg:x="6968" fg:w="131"/><text x="33.8647%" y="174.50"></text></g><g><title>pos (torch_geometric/data/data.py:990) (77 samples, 0.37%)</title><rect x="33.8752%" y="180" width="0.3715%" height="15" fill="rgb(244,68,36)" fg:x="7022" fg:w="77"/><text x="34.1252%" y="190.50"></text></g><g><title>perturb_batch (torsion.py:106) (157 samples, 0.76%)</title><rect x="34.2467%" y="164" width="0.7574%" height="15" fill="rgb(232,229,15)" fg:x="7099" fg:w="157"/><text x="34.4967%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:107) (30 samples, 0.14%)</title><rect x="35.0041%" y="164" width="0.1447%" height="15" fill="rgb(254,30,23)" fg:x="7256" fg:w="30"/><text x="35.2541%" y="174.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:103) (44 samples, 0.21%)</title><rect x="35.4286%" y="212" width="0.2123%" height="15" fill="rgb(235,160,14)" fg:x="7344" fg:w="44"/><text x="35.6786%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (3,562 samples, 17.18%)</title><rect x="35.8097%" y="244" width="17.1837%" height="15" fill="rgb(212,155,44)" fg:x="7423" fg:w="3562"/><text x="36.0597%" y="254.50">deepcopy (copy.py:153)</text></g><g><title>__deepcopy__ (torch/storage.py:114) (3,548 samples, 17.12%)</title><rect x="35.8773%" y="260" width="17.1161%" height="15" fill="rgb(226,2,50)" fg:x="7437" fg:w="3548"/><text x="36.1273%" y="270.50">__deepcopy__ (torch/storage..</text></g><g><title>clone (torch/storage.py:128) (3,543 samples, 17.09%)</title><rect x="35.9014%" y="276" width="17.0920%" height="15" fill="rgb(234,177,6)" fg:x="7442" fg:w="3543"/><text x="36.1514%" y="286.50">clone (torch/storage.py:12..</text></g><g><title>_deepcopy (torch/storage.py:853) (3,582 samples, 17.28%)</title><rect x="35.7229%" y="228" width="17.2801%" height="15" fill="rgb(217,24,9)" fg:x="7405" fg:w="3582"/><text x="35.9729%" y="238.50">_deepcopy (torch/storage.py..</text></g><g><title>_typed_storage (torch/_tensor.py:243) (40 samples, 0.19%)</title><rect x="53.0368%" y="228" width="0.1930%" height="15" fill="rgb(220,13,46)" fg:x="10994" fg:w="40"/><text x="53.2868%" y="238.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (3,638 samples, 17.55%)</title><rect x="35.7036%" y="212" width="17.5503%" height="15" fill="rgb(239,221,27)" fg:x="7401" fg:w="3638"/><text x="35.9536%" y="222.50">__deepcopy__ (torch/_tensor..</text></g><g><title>modify_conformer (torsion.py:69) (3,798 samples, 18.32%)</title><rect x="35.3032%" y="180" width="18.3222%" height="15" fill="rgb(222,198,25)" fg:x="7318" fg:w="3798"/><text x="35.5532%" y="190.50">modify_conformer (torsion.py:..</text></g><g><title>deepcopy (copy.py:153) (3,778 samples, 18.23%)</title><rect x="35.3997%" y="196" width="18.2257%" height="15" fill="rgb(211,99,13)" fg:x="7338" fg:w="3778"/><text x="35.6497%" y="206.50">deepcopy (copy.py:153)</text></g><g><title>__deepcopy__ (torch/_tensor.py:95) (60 samples, 0.29%)</title><rect x="53.3359%" y="212" width="0.2894%" height="15" fill="rgb(232,111,31)" fg:x="11056" fg:w="60"/><text x="53.5859%" y="222.50"></text></g><g><title>modify_conformer (torsion.py:72) (43 samples, 0.21%)</title><rect x="53.6447%" y="180" width="0.2074%" height="15" fill="rgb(245,82,37)" fg:x="11120" fg:w="43"/><text x="53.8947%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (38 samples, 0.18%)</title><rect x="53.6688%" y="196" width="0.1833%" height="15" fill="rgb(227,149,46)" fg:x="11125" fg:w="38"/><text x="53.9188%" y="206.50"></text></g><g><title>modify_conformer (torsion.py:75) (48 samples, 0.23%)</title><rect x="53.8521%" y="180" width="0.2316%" height="15" fill="rgb(218,36,50)" fg:x="11163" fg:w="48"/><text x="54.1021%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:76) (124 samples, 0.60%)</title><rect x="54.0837%" y="180" width="0.5982%" height="15" fill="rgb(226,80,48)" fg:x="11211" fg:w="124"/><text x="54.3337%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:78) (23 samples, 0.11%)</title><rect x="54.6818%" y="180" width="0.1110%" height="15" fill="rgb(238,224,15)" fg:x="11335" fg:w="23"/><text x="54.9318%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:84) (39 samples, 0.19%)</title><rect x="54.8266%" y="180" width="0.1881%" height="15" fill="rgb(241,136,10)" fg:x="11365" fg:w="39"/><text x="55.0766%" y="190.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2552) (44 samples, 0.21%)</title><rect x="55.9506%" y="196" width="0.2123%" height="15" fill="rgb(208,32,45)" fg:x="11598" fg:w="44"/><text x="56.2006%" y="206.50"></text></g><g><title>modify_conformer (torsion.py:85) (279 samples, 1.35%)</title><rect x="55.0147%" y="180" width="1.3459%" height="15" fill="rgb(207,135,9)" fg:x="11404" fg:w="279"/><text x="55.2647%" y="190.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2553) (41 samples, 0.20%)</title><rect x="56.1629%" y="196" width="0.1978%" height="15" fill="rgb(206,86,44)" fg:x="11642" fg:w="41"/><text x="56.4129%" y="206.50"></text></g><g><title>modify_conformer (torsion.py:86) (354 samples, 1.71%)</title><rect x="56.3607%" y="180" width="1.7078%" height="15" fill="rgb(245,177,15)" fg:x="11683" fg:w="354"/><text x="56.6107%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:88) (562 samples, 2.71%)</title><rect x="58.0684%" y="180" width="2.7112%" height="15" fill="rgb(206,64,50)" fg:x="12037" fg:w="562"/><text x="58.3184%" y="190.50">mo..</text></g><g><title>perturb_batch (torsion.py:109) (5,414 samples, 26.12%)</title><rect x="35.1729%" y="164" width="26.1180%" height="15" fill="rgb(234,36,40)" fg:x="7291" fg:w="5414"/><text x="35.4229%" y="174.50">perturb_batch (torsion.py:109)</text></g><g><title>modify_conformer (torsion.py:90) (106 samples, 0.51%)</title><rect x="60.7796%" y="180" width="0.5114%" height="15" fill="rgb(213,64,8)" fg:x="12599" fg:w="106"/><text x="61.0296%" y="190.50"></text></g><g><title>perturb_batch (torsion.py:113) (141 samples, 0.68%)</title><rect x="61.2909%" y="164" width="0.6802%" height="15" fill="rgb(210,75,36)" fg:x="12705" fg:w="141"/><text x="61.5409%" y="174.50"></text></g><g><title>sample_backward_trajs (gfn_train.py:123) (5,920 samples, 28.56%)</title><rect x="33.5617%" y="148" width="28.5590%" height="15" fill="rgb(229,88,21)" fg:x="6957" fg:w="5920"/><text x="33.8117%" y="158.50">sample_backward_trajs (gfn_train.py:123)</text></g><g><title>perturb_batch (torsion.py:99) (25 samples, 0.12%)</title><rect x="62.0001%" y="164" width="0.1206%" height="15" fill="rgb(252,204,47)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (25 samples, 0.12%)</title><rect x="62.0001%" y="180" width="0.1206%" height="15" fill="rgb(208,77,27)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="190.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (25 samples, 0.12%)</title><rect x="62.0001%" y="196" width="0.1206%" height="15" fill="rgb(221,76,26)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="206.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (25 samples, 0.12%)</title><rect x="62.0001%" y="212" width="0.1206%" height="15" fill="rgb(225,139,18)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (25 samples, 0.12%)</title><rect x="62.0001%" y="228" width="0.1206%" height="15" fill="rgb(230,137,11)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="238.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (25 samples, 0.12%)</title><rect x="62.0001%" y="244" width="0.1206%" height="15" fill="rgb(212,28,1)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="254.50"></text></g><g><title>clone (torch/storage.py:128) (25 samples, 0.12%)</title><rect x="62.0001%" y="260" width="0.1206%" height="15" fill="rgb(248,164,17)" fg:x="12852" fg:w="25"/><text x="62.2501%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (22 samples, 0.11%)</title><rect x="62.1834%" y="292" width="0.1061%" height="15" fill="rgb(222,171,42)" fg:x="12890" fg:w="22"/><text x="62.4334%" y="302.50"></text></g><g><title>_deepcopy_list (copy.py:205) (22 samples, 0.11%)</title><rect x="62.1834%" y="308" width="0.1061%" height="15" fill="rgb(243,84,45)" fg:x="12890" fg:w="22"/><text x="62.4334%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (47 samples, 0.23%)</title><rect x="62.1448%" y="260" width="0.2267%" height="15" fill="rgb(252,49,23)" fg:x="12882" fg:w="47"/><text x="62.3948%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (45 samples, 0.22%)</title><rect x="62.1545%" y="276" width="0.2171%" height="15" fill="rgb(215,19,7)" fg:x="12884" fg:w="45"/><text x="62.4045%" y="286.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (152 samples, 0.73%)</title><rect x="62.3860%" y="292" width="0.7333%" height="15" fill="rgb(238,81,41)" fg:x="12932" fg:w="152"/><text x="62.6360%" y="302.50"></text></g><g><title>deepcopy (copy.py:153) (152 samples, 0.73%)</title><rect x="62.3860%" y="308" width="0.7333%" height="15" fill="rgb(210,199,37)" fg:x="12932" fg:w="152"/><text x="62.6360%" y="318.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (152 samples, 0.73%)</title><rect x="62.3860%" y="324" width="0.7333%" height="15" fill="rgb(244,192,49)" fg:x="12932" fg:w="152"/><text x="62.6360%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (152 samples, 0.73%)</title><rect x="62.3860%" y="340" width="0.7333%" height="15" fill="rgb(226,211,11)" fg:x="12932" fg:w="152"/><text x="62.6360%" y="350.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (155 samples, 0.75%)</title><rect x="62.3860%" y="276" width="0.7477%" height="15" fill="rgb(236,162,54)" fg:x="12932" fg:w="155"/><text x="62.6360%" y="286.50"></text></g><g><title>get_logpT (gfn_metrics.py:55) (6,210 samples, 29.96%)</title><rect x="33.2288%" y="132" width="29.9580%" height="15" fill="rgb(220,229,9)" fg:x="6888" fg:w="6210"/><text x="33.4788%" y="142.50">get_logpT (gfn_metrics.py:55)</text></g><g><title>sample_backward_trajs (gfn_train.py:126) (218 samples, 1.05%)</title><rect x="62.1352%" y="148" width="1.0517%" height="15" fill="rgb(250,87,22)" fg:x="12880" fg:w="218"/><text x="62.3852%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (218 samples, 1.05%)</title><rect x="62.1352%" y="164" width="1.0517%" height="15" fill="rgb(239,43,17)" fg:x="12880" fg:w="218"/><text x="62.3852%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (218 samples, 1.05%)</title><rect x="62.1352%" y="180" width="1.0517%" height="15" fill="rgb(231,177,25)" fg:x="12880" fg:w="218"/><text x="62.3852%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (217 samples, 1.05%)</title><rect x="62.1400%" y="196" width="1.0468%" height="15" fill="rgb(219,179,1)" fg:x="12881" fg:w="217"/><text x="62.3900%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (217 samples, 1.05%)</title><rect x="62.1400%" y="212" width="1.0468%" height="15" fill="rgb(238,219,53)" fg:x="12881" fg:w="217"/><text x="62.3900%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (217 samples, 1.05%)</title><rect x="62.1400%" y="228" width="1.0468%" height="15" fill="rgb(232,167,36)" fg:x="12881" fg:w="217"/><text x="62.3900%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (216 samples, 1.04%)</title><rect x="62.1448%" y="244" width="1.0420%" height="15" fill="rgb(244,19,51)" fg:x="12882" fg:w="216"/><text x="62.3948%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (169 samples, 0.82%)</title><rect x="62.3716%" y="260" width="0.8153%" height="15" fill="rgb(224,6,22)" fg:x="12929" fg:w="169"/><text x="62.6216%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (23 samples, 0.11%)</title><rect x="63.3026%" y="292" width="0.1110%" height="15" fill="rgb(224,145,5)" fg:x="13122" fg:w="23"/><text x="63.5526%" y="302.50"></text></g><g><title>_deepcopy_list (copy.py:205) (21 samples, 0.10%)</title><rect x="63.3123%" y="308" width="0.1013%" height="15" fill="rgb(234,130,49)" fg:x="13124" fg:w="21"/><text x="63.5623%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (38 samples, 0.18%)</title><rect x="63.2689%" y="260" width="0.1833%" height="15" fill="rgb(254,6,2)" fg:x="13115" fg:w="38"/><text x="63.5189%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (38 samples, 0.18%)</title><rect x="63.2689%" y="276" width="0.1833%" height="15" fill="rgb(208,96,46)" fg:x="13115" fg:w="38"/><text x="63.5189%" y="286.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (234 samples, 1.13%)</title><rect x="63.4522%" y="292" width="1.1289%" height="15" fill="rgb(239,3,39)" fg:x="13153" fg:w="234"/><text x="63.7022%" y="302.50"></text></g><g><title>deepcopy (copy.py:153) (233 samples, 1.12%)</title><rect x="63.4570%" y="308" width="1.1240%" height="15" fill="rgb(233,210,1)" fg:x="13154" fg:w="233"/><text x="63.7070%" y="318.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (233 samples, 1.12%)</title><rect x="63.4570%" y="324" width="1.1240%" height="15" fill="rgb(244,137,37)" fg:x="13154" fg:w="233"/><text x="63.7070%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (232 samples, 1.12%)</title><rect x="63.4618%" y="340" width="1.1192%" height="15" fill="rgb(240,136,2)" fg:x="13155" fg:w="232"/><text x="63.7118%" y="350.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (238 samples, 1.15%)</title><rect x="63.4522%" y="276" width="1.1481%" height="15" fill="rgb(239,18,37)" fg:x="13153" fg:w="238"/><text x="63.7022%" y="286.50"></text></g><g><title>deepcopy (copy.py:153) (280 samples, 1.35%)</title><rect x="63.2592%" y="164" width="1.3508%" height="15" fill="rgb(218,185,22)" fg:x="13113" fg:w="280"/><text x="63.5092%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (280 samples, 1.35%)</title><rect x="63.2592%" y="180" width="1.3508%" height="15" fill="rgb(225,218,4)" fg:x="13113" fg:w="280"/><text x="63.5092%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (280 samples, 1.35%)</title><rect x="63.2592%" y="196" width="1.3508%" height="15" fill="rgb(230,182,32)" fg:x="13113" fg:w="280"/><text x="63.5092%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (279 samples, 1.35%)</title><rect x="63.2640%" y="212" width="1.3459%" height="15" fill="rgb(242,56,43)" fg:x="13114" fg:w="279"/><text x="63.5140%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (279 samples, 1.35%)</title><rect x="63.2640%" y="228" width="1.3459%" height="15" fill="rgb(233,99,24)" fg:x="13114" fg:w="279"/><text x="63.5140%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (279 samples, 1.35%)</title><rect x="63.2640%" y="244" width="1.3459%" height="15" fill="rgb(234,209,42)" fg:x="13114" fg:w="279"/><text x="63.5140%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (240 samples, 1.16%)</title><rect x="63.4522%" y="260" width="1.1578%" height="15" fill="rgb(227,7,12)" fg:x="13153" fg:w="240"/><text x="63.7022%" y="270.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:895) (47 samples, 0.23%)</title><rect x="64.6196%" y="212" width="0.2267%" height="15" fill="rgb(245,203,43)" fg:x="13395" fg:w="47"/><text x="64.8696%" y="222.50"></text></g><g><title>&lt;lambda&gt; (torch_geometric/data/data.py:361) (46 samples, 0.22%)</title><rect x="64.6244%" y="228" width="0.2219%" height="15" fill="rgb(238,205,33)" fg:x="13396" fg:w="46"/><text x="64.8744%" y="238.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:894) (34 samples, 0.16%)</title><rect x="65.3384%" y="276" width="0.1640%" height="15" fill="rgb(231,56,7)" fg:x="13544" fg:w="34"/><text x="65.5884%" y="286.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:896) (65 samples, 0.31%)</title><rect x="65.5024%" y="276" width="0.3136%" height="15" fill="rgb(244,186,29)" fg:x="13578" fg:w="65"/><text x="65.7524%" y="286.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:900) (87 samples, 0.42%)</title><rect x="65.8980%" y="276" width="0.4197%" height="15" fill="rgb(234,111,31)" fg:x="13660" fg:w="87"/><text x="66.1480%" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:119) (34 samples, 0.16%)</title><rect x="66.1537%" y="292" width="0.1640%" height="15" fill="rgb(241,149,10)" fg:x="13713" fg:w="34"/><text x="66.4037%" y="302.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:902) (70 samples, 0.34%)</title><rect x="66.3177%" y="276" width="0.3377%" height="15" fill="rgb(249,206,44)" fg:x="13747" fg:w="70"/><text x="66.5677%" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:119) (33 samples, 0.16%)</title><rect x="66.4962%" y="292" width="0.1592%" height="15" fill="rgb(251,153,30)" fg:x="13784" fg:w="33"/><text x="66.7462%" y="302.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:906) (103 samples, 0.50%)</title><rect x="66.6602%" y="276" width="0.4969%" height="15" fill="rgb(239,152,38)" fg:x="13818" fg:w="103"/><text x="66.9102%" y="286.50"></text></g><g><title>&lt;lambda&gt; (torch_geometric/data/data.py:361) (55 samples, 0.27%)</title><rect x="66.8918%" y="292" width="0.2653%" height="15" fill="rgb(249,139,47)" fg:x="13866" fg:w="55"/><text x="67.1418%" y="302.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (463 samples, 2.23%)</title><rect x="65.0200%" y="244" width="2.2336%" height="15" fill="rgb(244,64,35)" fg:x="13478" fg:w="463"/><text x="65.2700%" y="254.50">r..</text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (460 samples, 2.22%)</title><rect x="65.0345%" y="260" width="2.2191%" height="15" fill="rgb(216,46,15)" fg:x="13481" fg:w="460"/><text x="65.2845%" y="270.50">&lt;..</text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:158) (852 samples, 4.11%)</title><rect x="63.2158%" y="148" width="4.1102%" height="15" fill="rgb(250,74,19)" fg:x="13104" fg:w="852"/><text x="63.4658%" y="158.50">get_..</text></g><g><title>to (torch_geometric/data/data.py:360) (563 samples, 2.72%)</title><rect x="64.6100%" y="164" width="2.7160%" height="15" fill="rgb(249,42,33)" fg:x="13393" fg:w="563"/><text x="64.8600%" y="174.50">to..</text></g><g><title>apply (torch_geometric/data/data.py:340) (563 samples, 2.72%)</title><rect x="64.6100%" y="180" width="2.7160%" height="15" fill="rgb(242,149,17)" fg:x="13393" fg:w="563"/><text x="64.8600%" y="190.50">ap..</text></g><g><title>apply (torch_geometric/data/storage.py:201) (562 samples, 2.71%)</title><rect x="64.6148%" y="196" width="2.7112%" height="15" fill="rgb(244,29,21)" fg:x="13394" fg:w="562"/><text x="64.8648%" y="206.50">ap..</text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (514 samples, 2.48%)</title><rect x="64.8464%" y="212" width="2.4796%" height="15" fill="rgb(220,130,37)" fg:x="13442" fg:w="514"/><text x="65.0964%" y="222.50">re..</text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (514 samples, 2.48%)</title><rect x="64.8464%" y="228" width="2.4796%" height="15" fill="rgb(211,67,2)" fg:x="13442" fg:w="514"/><text x="65.0964%" y="238.50">&lt;l..</text></g><g><title>radius_graph (torch_cluster/radius.py:135) (25 samples, 0.12%)</title><rect x="67.3887%" y="228" width="0.1206%" height="15" fill="rgb(235,68,52)" fg:x="13969" fg:w="25"/><text x="67.6387%" y="238.50"></text></g><g><title>build_conv_graph (score_model.py:181) (36 samples, 0.17%)</title><rect x="67.3887%" y="212" width="0.1737%" height="15" fill="rgb(246,142,3)" fg:x="13969" fg:w="36"/><text x="67.6387%" y="222.50"></text></g><g><title>forward (score_model.py:131) (85 samples, 0.41%)</title><rect x="67.3887%" y="196" width="0.4101%" height="15" fill="rgb(241,25,7)" fg:x="13969" fg:w="85"/><text x="67.6387%" y="206.50"></text></g><g><title>build_conv_graph (score_model.py:201) (22 samples, 0.11%)</title><rect x="67.6926%" y="212" width="0.1061%" height="15" fill="rgb(242,119,39)" fg:x="14032" fg:w="22"/><text x="67.9426%" y="222.50"></text></g><g><title>forward (score_model.py:135) (60 samples, 0.29%)</title><rect x="67.8373%" y="196" width="0.2894%" height="15" fill="rgb(241,98,45)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (60 samples, 0.29%)</title><rect x="67.8373%" y="212" width="0.2894%" height="15" fill="rgb(254,28,30)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (60 samples, 0.29%)</title><rect x="67.8373%" y="228" width="0.2894%" height="15" fill="rgb(241,142,54)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="238.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (60 samples, 0.29%)</title><rect x="67.8373%" y="244" width="0.2894%" height="15" fill="rgb(222,85,15)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (60 samples, 0.29%)</title><rect x="67.8373%" y="260" width="0.2894%" height="15" fill="rgb(210,85,47)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (60 samples, 0.29%)</title><rect x="67.8373%" y="276" width="0.2894%" height="15" fill="rgb(224,206,25)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="286.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (60 samples, 0.29%)</title><rect x="67.8373%" y="292" width="0.2894%" height="15" fill="rgb(243,201,19)" fg:x="14062" fg:w="60"/><text x="68.0873%" y="302.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (533 samples, 2.57%)</title><rect x="68.2812%" y="292" width="2.5713%" height="15" fill="rgb(236,59,4)" fg:x="14154" fg:w="533"/><text x="68.5312%" y="302.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (528 samples, 2.55%)</title><rect x="68.3053%" y="308" width="2.5472%" height="15" fill="rgb(254,179,45)" fg:x="14159" fg:w="528"/><text x="68.5553%" y="318.50">_w..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (528 samples, 2.55%)</title><rect x="68.3053%" y="324" width="2.5472%" height="15" fill="rgb(226,14,10)" fg:x="14159" fg:w="528"/><text x="68.5553%" y="334.50">_c..</text></g><g><title>forward (score_model.py:34) (637 samples, 3.07%)</title><rect x="68.2281%" y="244" width="3.0730%" height="15" fill="rgb(244,27,41)" fg:x="14143" fg:w="637"/><text x="68.4781%" y="254.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (630 samples, 3.04%)</title><rect x="68.2619%" y="260" width="3.0392%" height="15" fill="rgb(235,35,32)" fg:x="14150" fg:w="630"/><text x="68.5119%" y="270.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (628 samples, 3.03%)</title><rect x="68.2715%" y="276" width="3.0296%" height="15" fill="rgb(218,68,31)" fg:x="14152" fg:w="628"/><text x="68.5215%" y="286.50">_ca..</text></g><g><title>forward (torch/nn/modules/container.py:217) (92 samples, 0.44%)</title><rect x="70.8573%" y="292" width="0.4438%" height="15" fill="rgb(207,120,37)" fg:x="14688" fg:w="92"/><text x="71.1073%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (91 samples, 0.44%)</title><rect x="70.8621%" y="308" width="0.4390%" height="15" fill="rgb(227,98,0)" fg:x="14689" fg:w="91"/><text x="71.1121%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (90 samples, 0.43%)</title><rect x="70.8669%" y="324" width="0.4342%" height="15" fill="rgb(207,7,3)" fg:x="14690" fg:w="90"/><text x="71.1169%" y="334.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (80 samples, 0.39%)</title><rect x="70.9151%" y="340" width="0.3859%" height="15" fill="rgb(206,98,19)" fg:x="14700" fg:w="80"/><text x="71.1651%" y="350.50"></text></g><g><title>forward (score_model.py:37) (38 samples, 0.18%)</title><rect x="71.3059%" y="244" width="0.1833%" height="15" fill="rgb(217,5,26)" fg:x="14781" fg:w="38"/><text x="71.5559%" y="254.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (38 samples, 0.18%)</title><rect x="71.3059%" y="260" width="0.1833%" height="15" fill="rgb(235,190,38)" fg:x="14781" fg:w="38"/><text x="71.5559%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:129) (24 samples, 0.12%)</title><rect x="71.6967%" y="292" width="0.1158%" height="15" fill="rgb(247,86,24)" fg:x="14862" fg:w="24"/><text x="71.9467%" y="302.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (42 samples, 0.20%)</title><rect x="71.9475%" y="292" width="0.2026%" height="15" fill="rgb(205,101,16)" fg:x="14914" fg:w="42"/><text x="72.1975%" y="302.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (32 samples, 0.15%)</title><rect x="71.9958%" y="308" width="0.1544%" height="15" fill="rgb(246,168,33)" fg:x="14924" fg:w="32"/><text x="72.2458%" y="318.50"></text></g><g><title>forward (score_model.py:139) (883 samples, 4.26%)</title><rect x="68.2040%" y="196" width="4.2597%" height="15" fill="rgb(231,114,1)" fg:x="14138" fg:w="883"/><text x="68.4540%" y="206.50">forwa..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (883 samples, 4.26%)</title><rect x="68.2040%" y="212" width="4.2597%" height="15" fill="rgb(207,184,53)" fg:x="14138" fg:w="883"/><text x="68.4540%" y="222.50">_wrap..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (882 samples, 4.25%)</title><rect x="68.2088%" y="228" width="4.2549%" height="15" fill="rgb(224,95,51)" fg:x="14139" fg:w="882"/><text x="68.4588%" y="238.50">_call..</text></g><g><title>forward (score_model.py:43) (195 samples, 0.94%)</title><rect x="71.5230%" y="244" width="0.9407%" height="15" fill="rgb(212,188,45)" fg:x="14826" fg:w="195"/><text x="71.7730%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (195 samples, 0.94%)</title><rect x="71.5230%" y="260" width="0.9407%" height="15" fill="rgb(223,154,38)" fg:x="14826" fg:w="195"/><text x="71.7730%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (193 samples, 0.93%)</title><rect x="71.5326%" y="276" width="0.9311%" height="15" fill="rgb(251,22,52)" fg:x="14828" fg:w="193"/><text x="71.7826%" y="286.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (2,989 samples, 14.42%)</title><rect x="72.4733%" y="212" width="14.4194%" height="15" fill="rgb(229,209,22)" fg:x="15023" fg:w="2989"/><text x="72.7233%" y="222.50">build_bond_conv_graph ..</text></g><g><title>build_bond_conv_graph (score_model.py:168) (27 samples, 0.13%)</title><rect x="86.9699%" y="212" width="0.1303%" height="15" fill="rgb(234,138,34)" fg:x="18028" fg:w="27"/><text x="87.2199%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:173) (49 samples, 0.24%)</title><rect x="87.1436%" y="212" width="0.2364%" height="15" fill="rgb(212,95,11)" fg:x="18064" fg:w="49"/><text x="87.3936%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (49 samples, 0.24%)</title><rect x="87.1436%" y="228" width="0.2364%" height="15" fill="rgb(240,179,47)" fg:x="18064" fg:w="49"/><text x="87.3936%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (48 samples, 0.23%)</title><rect x="87.1484%" y="244" width="0.2316%" height="15" fill="rgb(240,163,11)" fg:x="18065" fg:w="48"/><text x="87.3984%" y="254.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (48 samples, 0.23%)</title><rect x="87.1484%" y="260" width="0.2316%" height="15" fill="rgb(236,37,12)" fg:x="18065" fg:w="48"/><text x="87.3984%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (47 samples, 0.23%)</title><rect x="87.1533%" y="276" width="0.2267%" height="15" fill="rgb(232,164,16)" fg:x="18066" fg:w="47"/><text x="87.4033%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (46 samples, 0.22%)</title><rect x="87.1581%" y="292" width="0.2219%" height="15" fill="rgb(244,205,15)" fg:x="18067" fg:w="46"/><text x="87.4081%" y="302.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (43 samples, 0.21%)</title><rect x="87.1726%" y="308" width="0.2074%" height="15" fill="rgb(223,117,47)" fg:x="18070" fg:w="43"/><text x="87.4226%" y="318.50"></text></g><g><title>forward (score_model.py:141) (3,109 samples, 15.00%)</title><rect x="72.4637%" y="196" width="14.9983%" height="15" fill="rgb(244,107,35)" fg:x="15021" fg:w="3109"/><text x="72.7137%" y="206.50">forward (score_model.py..</text></g><g><title>forward (score_model.py:147) (151 samples, 0.73%)</title><rect x="87.6067%" y="196" width="0.7284%" height="15" fill="rgb(205,140,8)" fg:x="18160" fg:w="151"/><text x="87.8567%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (147 samples, 0.71%)</title><rect x="87.6260%" y="212" width="0.7092%" height="15" fill="rgb(228,84,46)" fg:x="18164" fg:w="147"/><text x="87.8760%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (146 samples, 0.70%)</title><rect x="87.6309%" y="228" width="0.7043%" height="15" fill="rgb(254,188,9)" fg:x="18165" fg:w="146"/><text x="87.8809%" y="238.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (145 samples, 0.70%)</title><rect x="87.6357%" y="244" width="0.6995%" height="15" fill="rgb(206,112,54)" fg:x="18166" fg:w="145"/><text x="87.8857%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (145 samples, 0.70%)</title><rect x="87.6357%" y="260" width="0.6995%" height="15" fill="rgb(216,84,49)" fg:x="18166" fg:w="145"/><text x="87.8857%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (144 samples, 0.69%)</title><rect x="87.6405%" y="276" width="0.6947%" height="15" fill="rgb(214,194,35)" fg:x="18167" fg:w="144"/><text x="87.8905%" y="286.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (48 samples, 0.23%)</title><rect x="88.3786%" y="292" width="0.2316%" height="15" fill="rgb(249,28,3)" fg:x="18320" fg:w="48"/><text x="88.6286%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (48 samples, 0.23%)</title><rect x="88.3786%" y="308" width="0.2316%" height="15" fill="rgb(222,56,52)" fg:x="18320" fg:w="48"/><text x="88.6286%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (47 samples, 0.23%)</title><rect x="88.3834%" y="324" width="0.2267%" height="15" fill="rgb(245,217,50)" fg:x="18321" fg:w="47"/><text x="88.6334%" y="334.50"></text></g><g><title>forward (score_model.py:34) (89 samples, 0.43%)</title><rect x="88.3690%" y="244" width="0.4294%" height="15" fill="rgb(213,201,24)" fg:x="18318" fg:w="89"/><text x="88.6190%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (88 samples, 0.42%)</title><rect x="88.3738%" y="260" width="0.4245%" height="15" fill="rgb(248,116,28)" fg:x="18319" fg:w="88"/><text x="88.6238%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (88 samples, 0.42%)</title><rect x="88.3738%" y="276" width="0.4245%" height="15" fill="rgb(219,72,43)" fg:x="18319" fg:w="88"/><text x="88.6238%" y="286.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (39 samples, 0.19%)</title><rect x="88.6102%" y="292" width="0.1881%" height="15" fill="rgb(209,138,14)" fg:x="18368" fg:w="39"/><text x="88.8602%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (39 samples, 0.19%)</title><rect x="88.6102%" y="308" width="0.1881%" height="15" fill="rgb(222,18,33)" fg:x="18368" fg:w="39"/><text x="88.8602%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (39 samples, 0.19%)</title><rect x="88.6102%" y="324" width="0.1881%" height="15" fill="rgb(213,199,7)" fg:x="18368" fg:w="39"/><text x="88.8602%" y="334.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (37 samples, 0.18%)</title><rect x="88.6198%" y="340" width="0.1785%" height="15" fill="rgb(250,110,10)" fg:x="18370" fg:w="37"/><text x="88.8698%" y="350.50"></text></g><g><title>forward (score_model.py:150) (123 samples, 0.59%)</title><rect x="88.3545%" y="196" width="0.5934%" height="15" fill="rgb(248,123,6)" fg:x="18315" fg:w="123"/><text x="88.6045%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (120 samples, 0.58%)</title><rect x="88.3690%" y="212" width="0.5789%" height="15" fill="rgb(206,91,31)" fg:x="18318" fg:w="120"/><text x="88.6190%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (120 samples, 0.58%)</title><rect x="88.3690%" y="228" width="0.5789%" height="15" fill="rgb(211,154,13)" fg:x="18318" fg:w="120"/><text x="88.6190%" y="238.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:161) (4,505 samples, 21.73%)</title><rect x="67.3742%" y="148" width="21.7328%" height="15" fill="rgb(225,148,7)" fg:x="13966" fg:w="4505"/><text x="67.6242%" y="158.50">get_log_p_f_and_log_pb (gfn_train...</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (4,503 samples, 21.72%)</title><rect x="67.3839%" y="164" width="21.7232%" height="15" fill="rgb(220,160,43)" fg:x="13968" fg:w="4503"/><text x="67.6339%" y="174.50">_wrapped_call_impl (torch/nn/modul..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (4,502 samples, 21.72%)</title><rect x="67.3887%" y="180" width="21.7184%" height="15" fill="rgb(213,52,39)" fg:x="13969" fg:w="4502"/><text x="67.6387%" y="190.50">_call_impl (torch/nn/modules/modul..</text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:168) (78 samples, 0.38%)</title><rect x="89.1601%" y="148" width="0.3763%" height="15" fill="rgb(243,137,7)" fg:x="18482" fg:w="78"/><text x="89.4101%" y="158.50"></text></g><g><title>p_differentiable (torus.py:15) (75 samples, 0.36%)</title><rect x="89.1746%" y="164" width="0.3618%" height="15" fill="rgb(230,79,13)" fg:x="18485" fg:w="75"/><text x="89.4246%" y="174.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:174) (59 samples, 0.28%)</title><rect x="89.5605%" y="148" width="0.2846%" height="15" fill="rgb(247,105,23)" fg:x="18565" fg:w="59"/><text x="89.8105%" y="158.50"></text></g><g><title>p_differentiable (torus.py:15) (58 samples, 0.28%)</title><rect x="89.5653%" y="164" width="0.2798%" height="15" fill="rgb(223,179,41)" fg:x="18566" fg:w="58"/><text x="89.8153%" y="174.50"></text></g><g><title>get_logpT (gfn_metrics.py:56) (5,534 samples, 26.70%)</title><rect x="63.1868%" y="132" width="26.6969%" height="15" fill="rgb(218,9,34)" fg:x="13098" fg:w="5534"/><text x="63.4368%" y="142.50">get_logpT (gfn_metrics.py:56)</text></g><g><title>get_logpT (gfn_metrics.py:61) (70 samples, 0.34%)</title><rect x="89.8837%" y="132" width="0.3377%" height="15" fill="rgb(222,106,8)" fg:x="18632" fg:w="70"/><text x="90.1337%" y="142.50"></text></g><g><title>empty_cache (torch/cuda/memory.py:162) (70 samples, 0.34%)</title><rect x="89.8837%" y="148" width="0.3377%" height="15" fill="rgb(211,220,0)" fg:x="18632" fg:w="70"/><text x="90.1337%" y="158.50"></text></g><g><title>get_2dheatmap_array_and_pt (gfn_metrics.py:103) (11,828 samples, 57.06%)</title><rect x="33.1757%" y="116" width="57.0602%" height="15" fill="rgb(229,52,16)" fg:x="6877" fg:w="11828"/><text x="33.4257%" y="126.50">get_2dheatmap_array_and_pt (gfn_metrics.py:103)</text></g><g><title>log_gfn_metrics (gfn_metrics.py:200) (11,906 samples, 57.44%)</title><rect x="32.9394%" y="100" width="57.4364%" height="15" fill="rgb(212,155,18)" fg:x="6828" fg:w="11906"/><text x="33.1894%" y="110.50">log_gfn_metrics (gfn_metrics.py:200)</text></g><g><title>_deepcopy (torch/storage.py:853) (205 samples, 0.99%)</title><rect x="90.6315%" y="212" width="0.9890%" height="15" fill="rgb(242,21,14)" fg:x="18787" fg:w="205"/><text x="90.8815%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (203 samples, 0.98%)</title><rect x="90.6411%" y="228" width="0.9793%" height="15" fill="rgb(222,19,48)" fg:x="18789" fg:w="203"/><text x="90.8911%" y="238.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (202 samples, 0.97%)</title><rect x="90.6460%" y="244" width="0.9745%" height="15" fill="rgb(232,45,27)" fg:x="18790" fg:w="202"/><text x="90.8960%" y="254.50"></text></g><g><title>clone (torch/storage.py:128) (202 samples, 0.97%)</title><rect x="90.6460%" y="260" width="0.9745%" height="15" fill="rgb(249,103,42)" fg:x="18790" fg:w="202"/><text x="90.8960%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (207 samples, 1.00%)</title><rect x="90.6315%" y="196" width="0.9986%" height="15" fill="rgb(246,81,33)" fg:x="18787" fg:w="207"/><text x="90.8815%" y="206.50"></text></g><g><title>modify_conformer (torsion.py:69) (221 samples, 1.07%)</title><rect x="90.5977%" y="164" width="1.0661%" height="15" fill="rgb(252,33,42)" fg:x="18780" fg:w="221"/><text x="90.8477%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (219 samples, 1.06%)</title><rect x="90.6074%" y="180" width="1.0565%" height="15" fill="rgb(209,212,41)" fg:x="18782" fg:w="219"/><text x="90.8574%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:85) (23 samples, 0.11%)</title><rect x="91.7748%" y="164" width="0.1110%" height="15" fill="rgb(207,154,6)" fg:x="19024" fg:w="23"/><text x="92.0248%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:88) (34 samples, 0.16%)</title><rect x="91.9437%" y="164" width="0.1640%" height="15" fill="rgb(223,64,47)" fg:x="19059" fg:w="34"/><text x="92.1937%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:109) (320 samples, 1.54%)</title><rect x="90.5881%" y="148" width="1.5437%" height="15" fill="rgb(211,161,38)" fg:x="18778" fg:w="320"/><text x="90.8381%" y="158.50"></text></g><g><title>sample_backward_trajs (gfn_train.py:123) (352 samples, 1.70%)</title><rect x="90.4675%" y="132" width="1.6981%" height="15" fill="rgb(219,138,40)" fg:x="18753" fg:w="352"/><text x="90.7175%" y="142.50"></text></g><g><title>get_logpT (gfn_metrics.py:55) (365 samples, 1.76%)</title><rect x="90.4578%" y="116" width="1.7608%" height="15" fill="rgb(241,228,46)" fg:x="18751" fg:w="365"/><text x="90.7078%" y="126.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:158) (38 samples, 0.18%)</title><rect x="92.2186%" y="132" width="0.1833%" height="15" fill="rgb(223,209,38)" fg:x="19116" fg:w="38"/><text x="92.4686%" y="142.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (24 samples, 0.12%)</title><rect x="92.2862%" y="148" width="0.1158%" height="15" fill="rgb(236,164,45)" fg:x="19130" fg:w="24"/><text x="92.5362%" y="158.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (24 samples, 0.12%)</title><rect x="92.2862%" y="164" width="0.1158%" height="15" fill="rgb(231,15,5)" fg:x="19130" fg:w="24"/><text x="92.5362%" y="174.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (24 samples, 0.12%)</title><rect x="92.2862%" y="180" width="0.1158%" height="15" fill="rgb(252,35,15)" fg:x="19130" fg:w="24"/><text x="92.5362%" y="190.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (24 samples, 0.12%)</title><rect x="92.2862%" y="196" width="0.1158%" height="15" fill="rgb(248,181,18)" fg:x="19130" fg:w="24"/><text x="92.5362%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (24 samples, 0.12%)</title><rect x="92.2862%" y="212" width="0.1158%" height="15" fill="rgb(233,39,42)" fg:x="19130" fg:w="24"/><text x="92.5362%" y="222.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (23 samples, 0.11%)</title><rect x="92.2910%" y="228" width="0.1110%" height="15" fill="rgb(238,110,33)" fg:x="19131" fg:w="23"/><text x="92.5410%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (23 samples, 0.11%)</title><rect x="92.2910%" y="244" width="0.1110%" height="15" fill="rgb(233,195,10)" fg:x="19131" fg:w="23"/><text x="92.5410%" y="254.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (23 samples, 0.11%)</title><rect x="92.4647%" y="276" width="0.1110%" height="15" fill="rgb(254,105,3)" fg:x="19167" fg:w="23"/><text x="92.7147%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (23 samples, 0.11%)</title><rect x="92.4647%" y="292" width="0.1110%" height="15" fill="rgb(221,225,9)" fg:x="19167" fg:w="23"/><text x="92.7147%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (23 samples, 0.11%)</title><rect x="92.4647%" y="308" width="0.1110%" height="15" fill="rgb(224,227,45)" fg:x="19167" fg:w="23"/><text x="92.7147%" y="318.50"></text></g><g><title>forward (score_model.py:34) (33 samples, 0.16%)</title><rect x="92.4598%" y="228" width="0.1592%" height="15" fill="rgb(229,198,43)" fg:x="19166" fg:w="33"/><text x="92.7098%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (33 samples, 0.16%)</title><rect x="92.4598%" y="244" width="0.1592%" height="15" fill="rgb(206,209,35)" fg:x="19166" fg:w="33"/><text x="92.7098%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (33 samples, 0.16%)</title><rect x="92.4598%" y="260" width="0.1592%" height="15" fill="rgb(245,195,53)" fg:x="19166" fg:w="33"/><text x="92.7098%" y="270.50"></text></g><g><title>forward (score_model.py:139) (41 samples, 0.20%)</title><rect x="92.4598%" y="180" width="0.1978%" height="15" fill="rgb(240,92,26)" fg:x="19166" fg:w="41"/><text x="92.7098%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (41 samples, 0.20%)</title><rect x="92.4598%" y="196" width="0.1978%" height="15" fill="rgb(207,40,23)" fg:x="19166" fg:w="41"/><text x="92.7098%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (41 samples, 0.20%)</title><rect x="92.4598%" y="212" width="0.1978%" height="15" fill="rgb(223,111,35)" fg:x="19166" fg:w="41"/><text x="92.7098%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (168 samples, 0.81%)</title><rect x="92.6576%" y="196" width="0.8105%" height="15" fill="rgb(229,147,28)" fg:x="19207" fg:w="168"/><text x="92.9076%" y="206.50"></text></g><g><title>forward (score_model.py:141) (177 samples, 0.85%)</title><rect x="92.6576%" y="180" width="0.8539%" height="15" fill="rgb(211,29,28)" fg:x="19207" fg:w="177"/><text x="92.9076%" y="190.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:161) (248 samples, 1.20%)</title><rect x="92.4068%" y="132" width="1.1964%" height="15" fill="rgb(228,72,33)" fg:x="19155" fg:w="248"/><text x="92.6568%" y="142.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (248 samples, 1.20%)</title><rect x="92.4068%" y="148" width="1.1964%" height="15" fill="rgb(205,214,31)" fg:x="19155" fg:w="248"/><text x="92.6568%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (248 samples, 1.20%)</title><rect x="92.4068%" y="164" width="1.1964%" height="15" fill="rgb(224,111,15)" fg:x="19155" fg:w="248"/><text x="92.6568%" y="174.50"></text></g><g><title>get_logpT (gfn_metrics.py:56) (294 samples, 1.42%)</title><rect x="92.2186%" y="116" width="1.4183%" height="15" fill="rgb(253,21,26)" fg:x="19116" fg:w="294"/><text x="92.4686%" y="126.50"></text></g><g><title>&lt;module&gt; (train.py:151) (17,360 samples, 83.75%)</title><rect x="9.9764%" y="68" width="83.7474%" height="15" fill="rgb(245,139,43)" fg:x="2068" fg:w="17360"/><text x="10.2264%" y="78.50">&lt;module&gt; (train.py:151)</text></g><g><title>train (train.py:65) (17,317 samples, 83.54%)</title><rect x="10.1838%" y="84" width="83.5400%" height="15" fill="rgb(252,170,7)" fg:x="2111" fg:w="17317"/><text x="10.4338%" y="94.50">train (train.py:65)</text></g><g><title>log_gfn_metrics (gfn_metrics.py:265) (677 samples, 3.27%)</title><rect x="90.4578%" y="100" width="3.2660%" height="15" fill="rgb(231,118,14)" fg:x="18751" fg:w="677"/><text x="90.7078%" y="110.50">log..</text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (38 samples, 0.18%)</title><rect x="93.8299%" y="356" width="0.1833%" height="15" fill="rgb(238,83,0)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (38 samples, 0.18%)</title><rect x="93.8299%" y="372" width="0.1833%" height="15" fill="rgb(221,39,39)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (38 samples, 0.18%)</title><rect x="93.8299%" y="388" width="0.1833%" height="15" fill="rgb(222,119,46)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (38 samples, 0.18%)</title><rect x="93.8299%" y="404" width="0.1833%" height="15" fill="rgb(222,165,49)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (38 samples, 0.18%)</title><rect x="93.8299%" y="420" width="0.1833%" height="15" fill="rgb(219,113,52)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (38 samples, 0.18%)</title><rect x="93.8299%" y="436" width="0.1833%" height="15" fill="rgb(214,7,15)" fg:x="19450" fg:w="38"/><text x="94.0799%" y="446.50"></text></g><g><title>&lt;module&gt; (likelihood.py:4) (46 samples, 0.22%)</title><rect x="93.8251%" y="260" width="0.2219%" height="15" fill="rgb(235,32,4)" fg:x="19449" fg:w="46"/><text x="94.0751%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (46 samples, 0.22%)</title><rect x="93.8251%" y="276" width="0.2219%" height="15" fill="rgb(238,90,54)" fg:x="19449" fg:w="46"/><text x="94.0751%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (45 samples, 0.22%)</title><rect x="93.8299%" y="292" width="0.2171%" height="15" fill="rgb(213,208,19)" fg:x="19450" fg:w="45"/><text x="94.0799%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (45 samples, 0.22%)</title><rect x="93.8299%" y="308" width="0.2171%" height="15" fill="rgb(233,156,4)" fg:x="19450" fg:w="45"/><text x="94.0799%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (45 samples, 0.22%)</title><rect x="93.8299%" y="324" width="0.2171%" height="15" fill="rgb(207,194,5)" fg:x="19450" fg:w="45"/><text x="94.0799%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (45 samples, 0.22%)</title><rect x="93.8299%" y="340" width="0.2171%" height="15" fill="rgb(206,111,30)" fg:x="19450" fg:w="45"/><text x="94.0799%" y="350.50"></text></g><g><title>&lt;module&gt; (networkx/__init__.py:20) (22 samples, 0.11%)</title><rect x="94.0615%" y="452" width="0.1061%" height="15" fill="rgb(243,70,54)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="94.0615%" y="468" width="0.1061%" height="15" fill="rgb(242,28,8)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (22 samples, 0.11%)</title><rect x="94.0615%" y="484" width="0.1061%" height="15" fill="rgb(219,106,18)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (22 samples, 0.11%)</title><rect x="94.0615%" y="500" width="0.1061%" height="15" fill="rgb(244,222,10)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (22 samples, 0.11%)</title><rect x="94.0615%" y="516" width="0.1061%" height="15" fill="rgb(236,179,52)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (22 samples, 0.11%)</title><rect x="94.0615%" y="532" width="0.1061%" height="15" fill="rgb(213,23,39)" fg:x="19498" fg:w="22"/><text x="94.3115%" y="542.50"></text></g><g><title>&lt;module&gt; (torsion.py:1) (40 samples, 0.19%)</title><rect x="94.0470%" y="356" width="0.1930%" height="15" fill="rgb(238,48,10)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (40 samples, 0.19%)</title><rect x="94.0470%" y="372" width="0.1930%" height="15" fill="rgb(251,196,23)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (40 samples, 0.19%)</title><rect x="94.0470%" y="388" width="0.1930%" height="15" fill="rgb(250,152,24)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (40 samples, 0.19%)</title><rect x="94.0470%" y="404" width="0.1930%" height="15" fill="rgb(209,150,17)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (40 samples, 0.19%)</title><rect x="94.0470%" y="420" width="0.1930%" height="15" fill="rgb(234,202,34)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (40 samples, 0.19%)</title><rect x="94.0470%" y="436" width="0.1930%" height="15" fill="rgb(253,148,53)" fg:x="19495" fg:w="40"/><text x="94.2970%" y="446.50"></text></g><g><title>&lt;module&gt; (torch_geometric/__init__.py:13) (38 samples, 0.18%)</title><rect x="94.2785%" y="500" width="0.1833%" height="15" fill="rgb(218,129,16)" fg:x="19543" fg:w="38"/><text x="94.5285%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (38 samples, 0.18%)</title><rect x="94.2785%" y="516" width="0.1833%" height="15" fill="rgb(216,85,19)" fg:x="19543" fg:w="38"/><text x="94.5285%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (37 samples, 0.18%)</title><rect x="94.2834%" y="532" width="0.1785%" height="15" fill="rgb(235,228,7)" fg:x="19544" fg:w="37"/><text x="94.5334%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (37 samples, 0.18%)</title><rect x="94.2834%" y="548" width="0.1785%" height="15" fill="rgb(245,175,0)" fg:x="19544" fg:w="37"/><text x="94.5334%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (37 samples, 0.18%)</title><rect x="94.2834%" y="564" width="0.1785%" height="15" fill="rgb(208,168,36)" fg:x="19544" fg:w="37"/><text x="94.5334%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.18%)</title><rect x="94.2834%" y="580" width="0.1785%" height="15" fill="rgb(246,171,24)" fg:x="19544" fg:w="37"/><text x="94.5334%" y="590.50"></text></g><g><title>&lt;module&gt; (torch/fx/experimental/symbolic_shapes.py:63) (42 samples, 0.20%)</title><rect x="94.4715%" y="916" width="0.2026%" height="15" fill="rgb(215,142,24)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (42 samples, 0.20%)</title><rect x="94.4715%" y="932" width="0.2026%" height="15" fill="rgb(250,187,7)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (42 samples, 0.20%)</title><rect x="94.4715%" y="948" width="0.2026%" height="15" fill="rgb(228,66,33)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (42 samples, 0.20%)</title><rect x="94.4715%" y="964" width="0.2026%" height="15" fill="rgb(234,215,21)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (42 samples, 0.20%)</title><rect x="94.4715%" y="980" width="0.2026%" height="15" fill="rgb(222,191,20)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (42 samples, 0.20%)</title><rect x="94.4715%" y="996" width="0.2026%" height="15" fill="rgb(245,79,54)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1006.50"></text></g><g><title>&lt;module&gt; (torch/utils/_sympy/functions.py:1) (42 samples, 0.20%)</title><rect x="94.4715%" y="1012" width="0.2026%" height="15" fill="rgb(240,10,37)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (42 samples, 0.20%)</title><rect x="94.4715%" y="1028" width="0.2026%" height="15" fill="rgb(214,192,32)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (42 samples, 0.20%)</title><rect x="94.4715%" y="1044" width="0.2026%" height="15" fill="rgb(209,36,54)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (42 samples, 0.20%)</title><rect x="94.4715%" y="1060" width="0.2026%" height="15" fill="rgb(220,10,11)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (42 samples, 0.20%)</title><rect x="94.4715%" y="1076" width="0.2026%" height="15" fill="rgb(221,106,17)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (42 samples, 0.20%)</title><rect x="94.4715%" y="1092" width="0.2026%" height="15" fill="rgb(251,142,44)" fg:x="19583" fg:w="42"/><text x="94.7215%" y="1102.50"></text></g><g><title>&lt;module&gt; (sympy/__init__.py:74) (22 samples, 0.11%)</title><rect x="94.5680%" y="1108" width="0.1061%" height="15" fill="rgb(238,13,15)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="94.5680%" y="1124" width="0.1061%" height="15" fill="rgb(208,107,27)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (22 samples, 0.11%)</title><rect x="94.5680%" y="1140" width="0.1061%" height="15" fill="rgb(205,136,37)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (22 samples, 0.11%)</title><rect x="94.5680%" y="1156" width="0.1061%" height="15" fill="rgb(250,205,27)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (22 samples, 0.11%)</title><rect x="94.5680%" y="1172" width="0.1061%" height="15" fill="rgb(210,80,43)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (22 samples, 0.11%)</title><rect x="94.5680%" y="1188" width="0.1061%" height="15" fill="rgb(247,160,36)" fg:x="19603" fg:w="22"/><text x="94.8180%" y="1198.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:31) (43 samples, 0.21%)</title><rect x="94.4715%" y="820" width="0.2074%" height="15" fill="rgb(234,13,49)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (43 samples, 0.21%)</title><rect x="94.4715%" y="836" width="0.2074%" height="15" fill="rgb(234,122,0)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (43 samples, 0.21%)</title><rect x="94.4715%" y="852" width="0.2074%" height="15" fill="rgb(207,146,38)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (43 samples, 0.21%)</title><rect x="94.4715%" y="868" width="0.2074%" height="15" fill="rgb(207,177,25)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (43 samples, 0.21%)</title><rect x="94.4715%" y="884" width="0.2074%" height="15" fill="rgb(211,178,42)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (43 samples, 0.21%)</title><rect x="94.4715%" y="900" width="0.2074%" height="15" fill="rgb(230,69,54)" fg:x="19583" fg:w="43"/><text x="94.7215%" y="910.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/convert_frame.py:40) (23 samples, 0.11%)</title><rect x="94.6790%" y="820" width="0.1110%" height="15" fill="rgb(214,135,41)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (23 samples, 0.11%)</title><rect x="94.6790%" y="836" width="0.1110%" height="15" fill="rgb(237,67,25)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (23 samples, 0.11%)</title><rect x="94.6790%" y="852" width="0.1110%" height="15" fill="rgb(222,189,50)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (23 samples, 0.11%)</title><rect x="94.6790%" y="868" width="0.1110%" height="15" fill="rgb(245,148,34)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (23 samples, 0.11%)</title><rect x="94.6790%" y="884" width="0.1110%" height="15" fill="rgb(222,29,6)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (23 samples, 0.11%)</title><rect x="94.6790%" y="900" width="0.1110%" height="15" fill="rgb(221,189,43)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (23 samples, 0.11%)</title><rect x="94.6790%" y="916" width="0.1110%" height="15" fill="rgb(207,36,27)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (23 samples, 0.11%)</title><rect x="94.6790%" y="932" width="0.1110%" height="15" fill="rgb(217,90,24)" fg:x="19626" fg:w="23"/><text x="94.9290%" y="942.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:2) (75 samples, 0.36%)</title><rect x="94.4715%" y="692" width="0.3618%" height="15" fill="rgb(224,66,35)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (75 samples, 0.36%)</title><rect x="94.4715%" y="708" width="0.3618%" height="15" fill="rgb(221,13,50)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (75 samples, 0.36%)</title><rect x="94.4715%" y="724" width="0.3618%" height="15" fill="rgb(236,68,49)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (75 samples, 0.36%)</title><rect x="94.4715%" y="740" width="0.3618%" height="15" fill="rgb(229,146,28)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (75 samples, 0.36%)</title><rect x="94.4715%" y="756" width="0.3618%" height="15" fill="rgb(225,31,38)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (75 samples, 0.36%)</title><rect x="94.4715%" y="772" width="0.3618%" height="15" fill="rgb(250,208,3)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (75 samples, 0.36%)</title><rect x="94.4715%" y="788" width="0.3618%" height="15" fill="rgb(246,54,23)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (75 samples, 0.36%)</title><rect x="94.4715%" y="804" width="0.3618%" height="15" fill="rgb(243,76,11)" fg:x="19583" fg:w="75"/><text x="94.7215%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (105 samples, 0.51%)</title><rect x="94.4667%" y="548" width="0.5065%" height="15" fill="rgb(245,21,50)" fg:x="19582" fg:w="105"/><text x="94.7167%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (105 samples, 0.51%)</title><rect x="94.4667%" y="564" width="0.5065%" height="15" fill="rgb(228,9,43)" fg:x="19582" fg:w="105"/><text x="94.7167%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (105 samples, 0.51%)</title><rect x="94.4667%" y="580" width="0.5065%" height="15" fill="rgb(208,100,47)" fg:x="19582" fg:w="105"/><text x="94.7167%" y="590.50"></text></g><g><title>&lt;module&gt; (torch_geometric/isinstance.py:8) (105 samples, 0.51%)</title><rect x="94.4667%" y="596" width="0.5065%" height="15" fill="rgb(232,26,8)" fg:x="19582" fg:w="105"/><text x="94.7167%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (105 samples, 0.51%)</title><rect x="94.4667%" y="612" width="0.5065%" height="15" fill="rgb(216,166,38)" fg:x="19582" fg:w="105"/><text x="94.7167%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (104 samples, 0.50%)</title><rect x="94.4715%" y="628" width="0.5017%" height="15" fill="rgb(251,202,51)" fg:x="19583" fg:w="104"/><text x="94.7215%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (104 samples, 0.50%)</title><rect x="94.4715%" y="644" width="0.5017%" height="15" fill="rgb(254,216,34)" fg:x="19583" fg:w="104"/><text x="94.7215%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (104 samples, 0.50%)</title><rect x="94.4715%" y="660" width="0.5017%" height="15" fill="rgb(251,32,27)" fg:x="19583" fg:w="104"/><text x="94.7215%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (104 samples, 0.50%)</title><rect x="94.4715%" y="676" width="0.5017%" height="15" fill="rgb(208,127,28)" fg:x="19583" fg:w="104"/><text x="94.7215%" y="686.50"></text></g><g><title>&lt;module&gt; (torch/_dynamo/__init__.py:64) (29 samples, 0.14%)</title><rect x="94.8333%" y="692" width="0.1399%" height="15" fill="rgb(224,137,22)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="702.50"></text></g><g><title>disable (torch/_dynamo/decorators.py:50) (29 samples, 0.14%)</title><rect x="94.8333%" y="708" width="0.1399%" height="15" fill="rgb(254,70,32)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="718.50"></text></g><g><title>__call__ (torch/_dynamo/eval_frame.py:410) (29 samples, 0.14%)</title><rect x="94.8333%" y="724" width="0.1399%" height="15" fill="rgb(229,75,37)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="734.50"></text></g><g><title>check (torch/_dynamo/trace_rules.py:3378) (29 samples, 0.14%)</title><rect x="94.8333%" y="740" width="0.1399%" height="15" fill="rgb(252,64,23)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="750.50"></text></g><g><title>check_verbose (torch/_dynamo/trace_rules.py:3361) (29 samples, 0.14%)</title><rect x="94.8333%" y="756" width="0.1399%" height="15" fill="rgb(232,162,48)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="766.50"></text></g><g><title>lookup_inner (torch/_dynamo/trace_rules.py:3442) (29 samples, 0.14%)</title><rect x="94.8333%" y="772" width="0.1399%" height="15" fill="rgb(246,160,12)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="782.50"></text></g><g><title>get_torch_obj_rule_map (torch/_dynamo/trace_rules.py:2782) (29 samples, 0.14%)</title><rect x="94.8333%" y="788" width="0.1399%" height="15" fill="rgb(247,166,0)" fg:x="19658" fg:w="29"/><text x="95.0833%" y="798.50"></text></g><g><title>&lt;module&gt; (torch_geometric/__init__.py:5) (106 samples, 0.51%)</title><rect x="94.4667%" y="500" width="0.5114%" height="15" fill="rgb(249,219,21)" fg:x="19582" fg:w="106"/><text x="94.7167%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (106 samples, 0.51%)</title><rect x="94.4667%" y="516" width="0.5114%" height="15" fill="rgb(205,209,3)" fg:x="19582" fg:w="106"/><text x="94.7167%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (106 samples, 0.51%)</title><rect x="94.4667%" y="532" width="0.5114%" height="15" fill="rgb(243,44,1)" fg:x="19582" fg:w="106"/><text x="94.7167%" y="542.50"></text></g><g><title>&lt;module&gt; (train.py:6) (279 samples, 1.35%)</title><rect x="93.7286%" y="68" width="1.3459%" height="15" fill="rgb(206,159,16)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (279 samples, 1.35%)</title><rect x="93.7286%" y="84" width="1.3459%" height="15" fill="rgb(244,77,30)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (279 samples, 1.35%)</title><rect x="93.7286%" y="100" width="1.3459%" height="15" fill="rgb(218,69,12)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (279 samples, 1.35%)</title><rect x="93.7286%" y="116" width="1.3459%" height="15" fill="rgb(212,87,7)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (279 samples, 1.35%)</title><rect x="93.7286%" y="132" width="1.3459%" height="15" fill="rgb(245,114,25)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (279 samples, 1.35%)</title><rect x="93.7286%" y="148" width="1.3459%" height="15" fill="rgb(210,61,42)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="158.50"></text></g><g><title>&lt;module&gt; (dataset.py:3) (279 samples, 1.35%)</title><rect x="93.7286%" y="164" width="1.3459%" height="15" fill="rgb(211,52,33)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (279 samples, 1.35%)</title><rect x="93.7286%" y="180" width="1.3459%" height="15" fill="rgb(234,58,33)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (279 samples, 1.35%)</title><rect x="93.7286%" y="196" width="1.3459%" height="15" fill="rgb(220,115,36)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (279 samples, 1.35%)</title><rect x="93.7286%" y="212" width="1.3459%" height="15" fill="rgb(243,153,54)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (279 samples, 1.35%)</title><rect x="93.7286%" y="228" width="1.3459%" height="15" fill="rgb(251,47,18)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (279 samples, 1.35%)</title><rect x="93.7286%" y="244" width="1.3459%" height="15" fill="rgb(242,102,42)" fg:x="19429" fg:w="279"/><text x="93.9786%" y="254.50"></text></g><g><title>&lt;module&gt; (likelihood.py:6) (213 samples, 1.03%)</title><rect x="94.0470%" y="260" width="1.0275%" height="15" fill="rgb(234,31,38)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (213 samples, 1.03%)</title><rect x="94.0470%" y="276" width="1.0275%" height="15" fill="rgb(221,117,51)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (213 samples, 1.03%)</title><rect x="94.0470%" y="292" width="1.0275%" height="15" fill="rgb(212,20,18)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (213 samples, 1.03%)</title><rect x="94.0470%" y="308" width="1.0275%" height="15" fill="rgb(245,133,36)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (213 samples, 1.03%)</title><rect x="94.0470%" y="324" width="1.0275%" height="15" fill="rgb(212,6,19)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (213 samples, 1.03%)</title><rect x="94.0470%" y="340" width="1.0275%" height="15" fill="rgb(218,1,36)" fg:x="19495" fg:w="213"/><text x="94.2970%" y="350.50"></text></g><g><title>&lt;module&gt; (torsion.py:5) (173 samples, 0.83%)</title><rect x="94.2400%" y="356" width="0.8346%" height="15" fill="rgb(246,84,54)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (173 samples, 0.83%)</title><rect x="94.2400%" y="372" width="0.8346%" height="15" fill="rgb(242,110,6)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (173 samples, 0.83%)</title><rect x="94.2400%" y="388" width="0.8346%" height="15" fill="rgb(214,47,5)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (173 samples, 0.83%)</title><rect x="94.2400%" y="404" width="0.8346%" height="15" fill="rgb(218,159,25)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (173 samples, 0.83%)</title><rect x="94.2400%" y="420" width="0.8346%" height="15" fill="rgb(215,211,28)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (173 samples, 0.83%)</title><rect x="94.2400%" y="436" width="0.8346%" height="15" fill="rgb(238,59,32)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (173 samples, 0.83%)</title><rect x="94.2400%" y="452" width="0.8346%" height="15" fill="rgb(226,82,3)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (173 samples, 0.83%)</title><rect x="94.2400%" y="468" width="0.8346%" height="15" fill="rgb(240,164,32)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (173 samples, 0.83%)</title><rect x="94.2400%" y="484" width="0.8346%" height="15" fill="rgb(232,46,7)" fg:x="19535" fg:w="173"/><text x="94.4900%" y="494.50"></text></g><g><title>score (torus.py:44) (65 samples, 0.31%)</title><rect x="95.1228%" y="276" width="0.3136%" height="15" fill="rgb(229,129,53)" fg:x="19718" fg:w="65"/><text x="95.3728%" y="286.50"></text></g><g><title>score (torus.py:45) (28 samples, 0.14%)</title><rect x="95.4363%" y="276" width="0.1351%" height="15" fill="rgb(234,188,29)" fg:x="19783" fg:w="28"/><text x="95.6863%" y="286.50"></text></g><g><title>score (torus.py:46) (34 samples, 0.16%)</title><rect x="95.5714%" y="276" width="0.1640%" height="15" fill="rgb(246,141,4)" fg:x="19811" fg:w="34"/><text x="95.8214%" y="286.50"></text></g><g><title>score (torus.py:47) (25 samples, 0.12%)</title><rect x="95.7354%" y="276" width="0.1206%" height="15" fill="rgb(229,23,39)" fg:x="19845" fg:w="25"/><text x="95.9854%" y="286.50"></text></g><g><title>score (torus.py:48) (48 samples, 0.23%)</title><rect x="95.8560%" y="276" width="0.2316%" height="15" fill="rgb(206,12,3)" fg:x="19870" fg:w="48"/><text x="96.1060%" y="286.50"></text></g><g><title>score (torus.py:49) (32 samples, 0.15%)</title><rect x="96.0876%" y="276" width="0.1544%" height="15" fill="rgb(252,226,20)" fg:x="19918" fg:w="32"/><text x="96.3376%" y="286.50"></text></g><g><title>score (torus.py:50) (23 samples, 0.11%)</title><rect x="96.2420%" y="276" width="0.1110%" height="15" fill="rgb(216,123,35)" fg:x="19950" fg:w="23"/><text x="96.4920%" y="286.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2169) (23 samples, 0.11%)</title><rect x="96.4349%" y="292" width="0.1110%" height="15" fill="rgb(212,68,40)" fg:x="19990" fg:w="23"/><text x="96.6849%" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (23 samples, 0.11%)</title><rect x="96.4349%" y="308" width="0.1110%" height="15" fill="rgb(254,125,32)" fg:x="19990" fg:w="23"/><text x="96.6849%" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:99) (23 samples, 0.11%)</title><rect x="96.4349%" y="324" width="0.1110%" height="15" fill="rgb(253,97,22)" fg:x="19990" fg:w="23"/><text x="96.6849%" y="334.50"></text></g><g><title>score (torus.py:51) (60 samples, 0.29%)</title><rect x="96.3529%" y="276" width="0.2894%" height="15" fill="rgb(241,101,14)" fg:x="19973" fg:w="60"/><text x="96.6029%" y="286.50"></text></g><g><title>&lt;module&gt; (torus.py:72) (487 samples, 2.35%)</title><rect x="95.1228%" y="260" width="2.3494%" height="15" fill="rgb(238,103,29)" fg:x="19718" fg:w="487"/><text x="95.3728%" y="270.50">&lt;..</text></g><g><title>score (torus.py:52) (172 samples, 0.83%)</title><rect x="96.6424%" y="276" width="0.8298%" height="15" fill="rgb(233,195,47)" fg:x="20033" fg:w="172"/><text x="96.8924%" y="286.50"></text></g><g><title>sample (torus.py:67) (140 samples, 0.68%)</title><rect x="97.8098%" y="276" width="0.6754%" height="15" fill="rgb(246,218,30)" fg:x="20275" fg:w="140"/><text x="98.0598%" y="286.50"></text></g><g><title>&lt;module&gt; (torus.py:73) (276 samples, 1.33%)</title><rect x="97.4721%" y="260" width="1.3315%" height="15" fill="rgb(219,145,47)" fg:x="20205" fg:w="276"/><text x="97.7221%" y="270.50"></text></g><g><title>sample (torus.py:68) (66 samples, 0.32%)</title><rect x="98.4852%" y="276" width="0.3184%" height="15" fill="rgb(243,12,26)" fg:x="20415" fg:w="66"/><text x="98.7352%" y="286.50"></text></g><g><title>&lt;module&gt; (torus.py:74) (31 samples, 0.15%)</title><rect x="98.8036%" y="260" width="0.1495%" height="15" fill="rgb(214,87,16)" fg:x="20481" fg:w="31"/><text x="99.0536%" y="270.50"></text></g><g><title>&lt;module&gt; (train.py:8) (825 samples, 3.98%)</title><rect x="95.0745%" y="68" width="3.9799%" height="15" fill="rgb(208,99,42)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="78.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (825 samples, 3.98%)</title><rect x="95.0745%" y="84" width="3.9799%" height="15" fill="rgb(253,99,2)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="94.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (825 samples, 3.98%)</title><rect x="95.0745%" y="100" width="3.9799%" height="15" fill="rgb(220,168,23)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="110.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (825 samples, 3.98%)</title><rect x="95.0745%" y="116" width="3.9799%" height="15" fill="rgb(242,38,24)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="126.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (825 samples, 3.98%)</title><rect x="95.0745%" y="132" width="3.9799%" height="15" fill="rgb(225,182,9)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="142.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (825 samples, 3.98%)</title><rect x="95.0745%" y="148" width="3.9799%" height="15" fill="rgb(243,178,37)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="158.50">_cal..</text></g><g><title>&lt;module&gt; (training.py:4) (825 samples, 3.98%)</title><rect x="95.0745%" y="164" width="3.9799%" height="15" fill="rgb(232,139,19)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="174.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (825 samples, 3.98%)</title><rect x="95.0745%" y="180" width="3.9799%" height="15" fill="rgb(225,201,24)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="190.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (825 samples, 3.98%)</title><rect x="95.0745%" y="196" width="3.9799%" height="15" fill="rgb(221,47,46)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="206.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (825 samples, 3.98%)</title><rect x="95.0745%" y="212" width="3.9799%" height="15" fill="rgb(249,23,13)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="222.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (825 samples, 3.98%)</title><rect x="95.0745%" y="228" width="3.9799%" height="15" fill="rgb(219,9,5)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="238.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (825 samples, 3.98%)</title><rect x="95.0745%" y="244" width="3.9799%" height="15" fill="rgb(254,171,16)" fg:x="19708" fg:w="825"/><text x="95.3245%" y="254.50">_cal..</text></g><g><title>&lt;module&gt; (torus.py:76) (21 samples, 0.10%)</title><rect x="98.9532%" y="260" width="0.1013%" height="15" fill="rgb(230,171,20)" fg:x="20512" fg:w="21"/><text x="99.2032%" y="270.50"></text></g><g><title>&lt;module&gt; (e3nn/__init__.py:33) (33 samples, 0.16%)</title><rect x="99.0545%" y="548" width="0.1592%" height="15" fill="rgb(210,71,41)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (33 samples, 0.16%)</title><rect x="99.0545%" y="564" width="0.1592%" height="15" fill="rgb(206,173,20)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (33 samples, 0.16%)</title><rect x="99.0545%" y="580" width="0.1592%" height="15" fill="rgb(233,88,34)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (33 samples, 0.16%)</title><rect x="99.0545%" y="596" width="0.1592%" height="15" fill="rgb(223,209,46)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (33 samples, 0.16%)</title><rect x="99.0545%" y="612" width="0.1592%" height="15" fill="rgb(250,43,18)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (33 samples, 0.16%)</title><rect x="99.0545%" y="628" width="0.1592%" height="15" fill="rgb(208,13,10)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (33 samples, 0.16%)</title><rect x="99.0545%" y="644" width="0.1592%" height="15" fill="rgb(212,200,36)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (33 samples, 0.16%)</title><rect x="99.0545%" y="660" width="0.1592%" height="15" fill="rgb(225,90,30)" fg:x="20533" fg:w="33"/><text x="99.3045%" y="670.50"></text></g><g><title>&lt;module&gt; (sampling.py:12) (34 samples, 0.16%)</title><rect x="99.0545%" y="260" width="0.1640%" height="15" fill="rgb(236,182,39)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.0545%" y="276" width="0.1640%" height="15" fill="rgb(212,144,35)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (34 samples, 0.16%)</title><rect x="99.0545%" y="292" width="0.1640%" height="15" fill="rgb(228,63,44)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (34 samples, 0.16%)</title><rect x="99.0545%" y="308" width="0.1640%" height="15" fill="rgb(228,109,6)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (34 samples, 0.16%)</title><rect x="99.0545%" y="324" width="0.1640%" height="15" fill="rgb(238,117,24)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.0545%" y="340" width="0.1640%" height="15" fill="rgb(242,26,26)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="350.50"></text></g><g><title>&lt;module&gt; (utils.py:6) (34 samples, 0.16%)</title><rect x="99.0545%" y="356" width="0.1640%" height="15" fill="rgb(221,92,48)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.0545%" y="372" width="0.1640%" height="15" fill="rgb(209,209,32)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (34 samples, 0.16%)</title><rect x="99.0545%" y="388" width="0.1640%" height="15" fill="rgb(221,70,22)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (34 samples, 0.16%)</title><rect x="99.0545%" y="404" width="0.1640%" height="15" fill="rgb(248,145,5)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (34 samples, 0.16%)</title><rect x="99.0545%" y="420" width="0.1640%" height="15" fill="rgb(226,116,26)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.0545%" y="436" width="0.1640%" height="15" fill="rgb(244,5,17)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="446.50"></text></g><g><title>&lt;module&gt; (score_model.py:3) (34 samples, 0.16%)</title><rect x="99.0545%" y="452" width="0.1640%" height="15" fill="rgb(252,159,33)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.0545%" y="468" width="0.1640%" height="15" fill="rgb(206,71,0)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (34 samples, 0.16%)</title><rect x="99.0545%" y="484" width="0.1640%" height="15" fill="rgb(233,118,54)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (34 samples, 0.16%)</title><rect x="99.0545%" y="500" width="0.1640%" height="15" fill="rgb(234,83,48)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (34 samples, 0.16%)</title><rect x="99.0545%" y="516" width="0.1640%" height="15" fill="rgb(228,3,54)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.0545%" y="532" width="0.1640%" height="15" fill="rgb(226,155,13)" fg:x="20533" fg:w="34"/><text x="99.3045%" y="542.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:1) (36 samples, 0.17%)</title><rect x="99.0545%" y="164" width="0.1737%" height="15" fill="rgb(241,28,37)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (36 samples, 0.17%)</title><rect x="99.0545%" y="180" width="0.1737%" height="15" fill="rgb(233,93,10)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (36 samples, 0.17%)</title><rect x="99.0545%" y="196" width="0.1737%" height="15" fill="rgb(225,113,19)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (36 samples, 0.17%)</title><rect x="99.0545%" y="212" width="0.1737%" height="15" fill="rgb(241,2,18)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (36 samples, 0.17%)</title><rect x="99.0545%" y="228" width="0.1737%" height="15" fill="rgb(228,207,21)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (36 samples, 0.17%)</title><rect x="99.0545%" y="244" width="0.1737%" height="15" fill="rgb(213,211,35)" fg:x="20533" fg:w="36"/><text x="99.3045%" y="254.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/_axes.py:12) (22 samples, 0.11%)</title><rect x="99.4163%" y="708" width="0.1061%" height="15" fill="rgb(209,83,10)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="99.4163%" y="724" width="0.1061%" height="15" fill="rgb(209,164,1)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (22 samples, 0.11%)</title><rect x="99.4163%" y="740" width="0.1061%" height="15" fill="rgb(213,184,43)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (22 samples, 0.11%)</title><rect x="99.4163%" y="756" width="0.1061%" height="15" fill="rgb(231,61,34)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (22 samples, 0.11%)</title><rect x="99.4163%" y="772" width="0.1061%" height="15" fill="rgb(235,75,3)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (22 samples, 0.11%)</title><rect x="99.4163%" y="788" width="0.1061%" height="15" fill="rgb(220,106,47)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="798.50"></text></g><g><title>&lt;module&gt; (matplotlib/category.py:14) (22 samples, 0.11%)</title><rect x="99.4163%" y="804" width="0.1061%" height="15" fill="rgb(210,196,33)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="99.4163%" y="820" width="0.1061%" height="15" fill="rgb(229,154,42)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (22 samples, 0.11%)</title><rect x="99.4163%" y="836" width="0.1061%" height="15" fill="rgb(228,114,26)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (22 samples, 0.11%)</title><rect x="99.4163%" y="852" width="0.1061%" height="15" fill="rgb(208,144,1)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (22 samples, 0.11%)</title><rect x="99.4163%" y="868" width="0.1061%" height="15" fill="rgb(239,112,37)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (22 samples, 0.11%)</title><rect x="99.4163%" y="884" width="0.1061%" height="15" fill="rgb(210,96,50)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="894.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py:2) (22 samples, 0.11%)</title><rect x="99.4163%" y="900" width="0.1061%" height="15" fill="rgb(222,178,2)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="99.4163%" y="916" width="0.1061%" height="15" fill="rgb(226,74,18)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (22 samples, 0.11%)</title><rect x="99.4163%" y="932" width="0.1061%" height="15" fill="rgb(225,67,54)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (22 samples, 0.11%)</title><rect x="99.4163%" y="948" width="0.1061%" height="15" fill="rgb(251,92,32)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (22 samples, 0.11%)</title><rect x="99.4163%" y="964" width="0.1061%" height="15" fill="rgb(228,149,22)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (22 samples, 0.11%)</title><rect x="99.4163%" y="980" width="0.1061%" height="15" fill="rgb(243,54,13)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="990.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/_parser.py:50) (22 samples, 0.11%)</title><rect x="99.4163%" y="996" width="0.1061%" height="15" fill="rgb(243,180,28)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (22 samples, 0.11%)</title><rect x="99.4163%" y="1012" width="0.1061%" height="15" fill="rgb(208,167,24)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1022.50"></text></g><g><title>__getattr__ (dateutil/__init__.py:16) (22 samples, 0.11%)</title><rect x="99.4163%" y="1028" width="0.1061%" height="15" fill="rgb(245,73,45)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1038.50"></text></g><g><title>import_module (importlib/__init__.py:127) (22 samples, 0.11%)</title><rect x="99.4163%" y="1044" width="0.1061%" height="15" fill="rgb(237,203,48)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1054.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (22 samples, 0.11%)</title><rect x="99.4163%" y="1060" width="0.1061%" height="15" fill="rgb(211,197,16)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (22 samples, 0.11%)</title><rect x="99.4163%" y="1076" width="0.1061%" height="15" fill="rgb(243,99,51)" fg:x="20608" fg:w="22"/><text x="99.6663%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.10%)</title><rect x="99.4211%" y="1092" width="0.1013%" height="15" fill="rgb(215,123,29)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.10%)</title><rect x="99.4211%" y="1108" width="0.1013%" height="15" fill="rgb(239,186,37)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (21 samples, 0.10%)</title><rect x="99.4211%" y="1124" width="0.1013%" height="15" fill="rgb(252,136,39)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (21 samples, 0.10%)</title><rect x="99.4211%" y="1140" width="0.1013%" height="15" fill="rgb(223,213,32)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1150.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/__init__.py:2) (21 samples, 0.10%)</title><rect x="99.4211%" y="1156" width="0.1013%" height="15" fill="rgb(233,115,5)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (21 samples, 0.10%)</title><rect x="99.4211%" y="1172" width="0.1013%" height="15" fill="rgb(207,226,44)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.10%)</title><rect x="99.4211%" y="1188" width="0.1013%" height="15" fill="rgb(208,126,0)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.10%)</title><rect x="99.4211%" y="1204" width="0.1013%" height="15" fill="rgb(244,66,21)" fg:x="20609" fg:w="21"/><text x="99.6711%" y="1214.50"></text></g><g><title>&lt;module&gt; (matplotlib/projections/__init__.py:55) (34 samples, 0.16%)</title><rect x="99.3825%" y="484" width="0.1640%" height="15" fill="rgb(222,97,12)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (34 samples, 0.16%)</title><rect x="99.3825%" y="500" width="0.1640%" height="15" fill="rgb(219,213,19)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.3825%" y="516" width="0.1640%" height="15" fill="rgb(252,169,30)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.3825%" y="532" width="0.1640%" height="15" fill="rgb(206,32,51)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (34 samples, 0.16%)</title><rect x="99.3825%" y="548" width="0.1640%" height="15" fill="rgb(250,172,42)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (34 samples, 0.16%)</title><rect x="99.3825%" y="564" width="0.1640%" height="15" fill="rgb(209,34,43)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (34 samples, 0.16%)</title><rect x="99.3825%" y="580" width="0.1640%" height="15" fill="rgb(223,11,35)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.3825%" y="596" width="0.1640%" height="15" fill="rgb(251,219,26)" fg:x="20601" fg:w="34"/><text x="99.6325%" y="606.50"></text></g><g><title>&lt;module&gt; (matplotlib/axes/__init__.py:2) (27 samples, 0.13%)</title><rect x="99.4163%" y="612" width="0.1303%" height="15" fill="rgb(231,119,3)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (27 samples, 0.13%)</title><rect x="99.4163%" y="628" width="0.1303%" height="15" fill="rgb(216,97,11)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (27 samples, 0.13%)</title><rect x="99.4163%" y="644" width="0.1303%" height="15" fill="rgb(223,59,9)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (27 samples, 0.13%)</title><rect x="99.4163%" y="660" width="0.1303%" height="15" fill="rgb(233,93,31)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (27 samples, 0.13%)</title><rect x="99.4163%" y="676" width="0.1303%" height="15" fill="rgb(239,81,33)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (27 samples, 0.13%)</title><rect x="99.4163%" y="692" width="0.1303%" height="15" fill="rgb(213,120,34)" fg:x="20608" fg:w="27"/><text x="99.6663%" y="702.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:23) (70 samples, 0.34%)</title><rect x="99.2474%" y="164" width="0.3377%" height="15" fill="rgb(243,49,53)" fg:x="20573" fg:w="70"/><text x="99.4974%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (70 samples, 0.34%)</title><rect x="99.2474%" y="180" width="0.3377%" height="15" fill="rgb(247,216,33)" fg:x="20573" fg:w="70"/><text x="99.4974%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (55 samples, 0.27%)</title><rect x="99.3198%" y="196" width="0.2653%" height="15" fill="rgb(226,26,14)" fg:x="20588" fg:w="55"/><text x="99.5698%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (55 samples, 0.27%)</title><rect x="99.3198%" y="212" width="0.2653%" height="15" fill="rgb(215,49,53)" fg:x="20588" fg:w="55"/><text x="99.5698%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (55 samples, 0.27%)</title><rect x="99.3198%" y="228" width="0.2653%" height="15" fill="rgb(245,162,40)" fg:x="20588" fg:w="55"/><text x="99.5698%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (55 samples, 0.27%)</title><rect x="99.3198%" y="244" width="0.2653%" height="15" fill="rgb(229,68,17)" fg:x="20588" fg:w="55"/><text x="99.5698%" y="254.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:66) (44 samples, 0.21%)</title><rect x="99.3729%" y="260" width="0.2123%" height="15" fill="rgb(213,182,10)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (44 samples, 0.21%)</title><rect x="99.3729%" y="276" width="0.2123%" height="15" fill="rgb(245,125,30)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (44 samples, 0.21%)</title><rect x="99.3729%" y="292" width="0.2123%" height="15" fill="rgb(232,202,2)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (44 samples, 0.21%)</title><rect x="99.3729%" y="308" width="0.2123%" height="15" fill="rgb(237,140,51)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (44 samples, 0.21%)</title><rect x="99.3729%" y="324" width="0.2123%" height="15" fill="rgb(236,157,25)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (44 samples, 0.21%)</title><rect x="99.3729%" y="340" width="0.2123%" height="15" fill="rgb(219,209,0)" fg:x="20599" fg:w="44"/><text x="99.6229%" y="350.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py:40) (42 samples, 0.20%)</title><rect x="99.3825%" y="356" width="0.2026%" height="15" fill="rgb(240,116,54)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (42 samples, 0.20%)</title><rect x="99.3825%" y="372" width="0.2026%" height="15" fill="rgb(216,10,36)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (42 samples, 0.20%)</title><rect x="99.3825%" y="388" width="0.2026%" height="15" fill="rgb(222,72,44)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (42 samples, 0.20%)</title><rect x="99.3825%" y="404" width="0.2026%" height="15" fill="rgb(232,159,9)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (42 samples, 0.20%)</title><rect x="99.3825%" y="420" width="0.2026%" height="15" fill="rgb(210,39,32)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (42 samples, 0.20%)</title><rect x="99.3825%" y="436" width="0.2026%" height="15" fill="rgb(216,194,45)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (42 samples, 0.20%)</title><rect x="99.3825%" y="452" width="0.2026%" height="15" fill="rgb(218,18,35)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (42 samples, 0.20%)</title><rect x="99.3825%" y="468" width="0.2026%" height="15" fill="rgb(207,83,51)" fg:x="20601" fg:w="42"/><text x="99.6325%" y="478.50"></text></g><g><title>&lt;module&gt; (wandb/sdk/artifacts/artifact.py:37) (34 samples, 0.16%)</title><rect x="99.6768%" y="484" width="0.1640%" height="15" fill="rgb(225,63,43)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.6768%" y="500" width="0.1640%" height="15" fill="rgb(207,57,36)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (34 samples, 0.16%)</title><rect x="99.6768%" y="516" width="0.1640%" height="15" fill="rgb(216,99,33)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.6768%" y="532" width="0.1640%" height="15" fill="rgb(225,42,16)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (34 samples, 0.16%)</title><rect x="99.6768%" y="548" width="0.1640%" height="15" fill="rgb(220,201,45)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (34 samples, 0.16%)</title><rect x="99.6768%" y="564" width="0.1640%" height="15" fill="rgb(225,33,4)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (34 samples, 0.16%)</title><rect x="99.6768%" y="580" width="0.1640%" height="15" fill="rgb(224,33,50)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (34 samples, 0.16%)</title><rect x="99.6768%" y="596" width="0.1640%" height="15" fill="rgb(246,198,51)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (34 samples, 0.16%)</title><rect x="99.6768%" y="612" width="0.1640%" height="15" fill="rgb(205,22,4)" fg:x="20662" fg:w="34"/><text x="99.9268%" y="622.50"></text></g><g><title>&lt;module&gt; (wandb/sdk/__init__.py:25) (38 samples, 0.18%)</title><rect x="99.6623%" y="388" width="0.1833%" height="15" fill="rgb(206,3,8)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (38 samples, 0.18%)</title><rect x="99.6623%" y="404" width="0.1833%" height="15" fill="rgb(251,23,15)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (38 samples, 0.18%)</title><rect x="99.6623%" y="420" width="0.1833%" height="15" fill="rgb(252,88,28)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (38 samples, 0.18%)</title><rect x="99.6623%" y="436" width="0.1833%" height="15" fill="rgb(212,127,14)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (38 samples, 0.18%)</title><rect x="99.6623%" y="452" width="0.1833%" height="15" fill="rgb(247,145,37)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (38 samples, 0.18%)</title><rect x="99.6623%" y="468" width="0.1833%" height="15" fill="rgb(209,117,53)" fg:x="20659" fg:w="38"/><text x="99.9123%" y="478.50"></text></g><g><title>&lt;module&gt; (train.py:9) (176 samples, 0.85%)</title><rect x="99.0545%" y="68" width="0.8491%" height="15" fill="rgb(212,90,42)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (176 samples, 0.85%)</title><rect x="99.0545%" y="84" width="0.8491%" height="15" fill="rgb(218,164,37)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (176 samples, 0.85%)</title><rect x="99.0545%" y="100" width="0.8491%" height="15" fill="rgb(246,65,34)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (176 samples, 0.85%)</title><rect x="99.0545%" y="116" width="0.8491%" height="15" fill="rgb(231,100,33)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (176 samples, 0.85%)</title><rect x="99.0545%" y="132" width="0.8491%" height="15" fill="rgb(228,126,14)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (176 samples, 0.85%)</title><rect x="99.0545%" y="148" width="0.8491%" height="15" fill="rgb(215,173,21)" fg:x="20533" fg:w="176"/><text x="99.3045%" y="158.50"></text></g><g><title>&lt;module&gt; (gfn_train.py:27) (66 samples, 0.32%)</title><rect x="99.5851%" y="164" width="0.3184%" height="15" fill="rgb(210,6,40)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (66 samples, 0.32%)</title><rect x="99.5851%" y="180" width="0.3184%" height="15" fill="rgb(212,48,18)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (66 samples, 0.32%)</title><rect x="99.5851%" y="196" width="0.3184%" height="15" fill="rgb(230,214,11)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (66 samples, 0.32%)</title><rect x="99.5851%" y="212" width="0.3184%" height="15" fill="rgb(254,105,39)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (66 samples, 0.32%)</title><rect x="99.5851%" y="228" width="0.3184%" height="15" fill="rgb(245,158,5)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (66 samples, 0.32%)</title><rect x="99.5851%" y="244" width="0.3184%" height="15" fill="rgb(249,208,11)" fg:x="20643" fg:w="66"/><text x="99.8351%" y="254.50"></text></g><g><title>&lt;module&gt; (wandb/__init__.py:20) (64 samples, 0.31%)</title><rect x="99.5948%" y="260" width="0.3087%" height="15" fill="rgb(210,39,28)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (64 samples, 0.31%)</title><rect x="99.5948%" y="276" width="0.3087%" height="15" fill="rgb(211,56,53)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (64 samples, 0.31%)</title><rect x="99.5948%" y="292" width="0.3087%" height="15" fill="rgb(226,201,30)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (64 samples, 0.31%)</title><rect x="99.5948%" y="308" width="0.3087%" height="15" fill="rgb(239,101,34)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (64 samples, 0.31%)</title><rect x="99.5948%" y="324" width="0.3087%" height="15" fill="rgb(226,209,5)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (64 samples, 0.31%)</title><rect x="99.5948%" y="340" width="0.3087%" height="15" fill="rgb(250,105,47)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (64 samples, 0.31%)</title><rect x="99.5948%" y="356" width="0.3087%" height="15" fill="rgb(230,72,3)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (64 samples, 0.31%)</title><rect x="99.5948%" y="372" width="0.3087%" height="15" fill="rgb(232,218,39)" fg:x="20645" fg:w="64"/><text x="99.8448%" y="382.50"></text></g><g><title>all (20,729 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(248,166,6)" fg:x="0" fg:w="20729"/><text x="0.2500%" y="62.50"></text></g></svg></svg>