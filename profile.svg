<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="442" onload="init(evt)" viewBox="0 0 1200 442" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="442" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python train.py --train_mode on_policy --smi Brc1cc2c(cc1Cn1c(-c3cncs3)nc3ccccc31)OCO2 --energy_fn dummy --p_replay 0.5 --seed 749</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="431.00"> </text><svg id="frames" x="10" width="1180" total_samples="2000686"><g><title>build_bond_conv_graph (score_model.py:165) (2,406 samples, 0.12%)</title><rect x="0.1506%" y="196" width="0.1203%" height="15" fill="rgb(227,0,7)" fg:x="3014" fg:w="2406"/><text x="0.4006%" y="206.50"></text></g><g><title>forward (score_model.py:141) (2,460 samples, 0.12%)</title><rect x="0.1506%" y="180" width="0.1230%" height="15" fill="rgb(217,0,24)" fg:x="3014" fg:w="2460"/><text x="0.4006%" y="190.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:164) (3,009 samples, 0.15%)</title><rect x="0.1291%" y="132" width="0.1504%" height="15" fill="rgb(221,193,54)" fg:x="2583" fg:w="3009"/><text x="0.3791%" y="142.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (3,009 samples, 0.15%)</title><rect x="0.1291%" y="148" width="0.1504%" height="15" fill="rgb(248,212,6)" fg:x="2583" fg:w="3009"/><text x="0.3791%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (3,009 samples, 0.15%)</title><rect x="0.1291%" y="164" width="0.1504%" height="15" fill="rgb(208,68,35)" fg:x="2583" fg:w="3009"/><text x="0.3791%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:109) (2,066 samples, 0.10%)</title><rect x="0.2879%" y="148" width="0.1033%" height="15" fill="rgb(232,128,0)" fg:x="5759" fg:w="2066"/><text x="0.5379%" y="158.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:173) (2,335 samples, 0.12%)</title><rect x="0.2797%" y="132" width="0.1167%" height="15" fill="rgb(207,160,47)" fg:x="5596" fg:w="2335"/><text x="0.5297%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:586) (8,688 samples, 0.43%)</title><rect x="0.1096%" y="116" width="0.4343%" height="15" fill="rgb(228,23,34)" fg:x="2193" fg:w="8688"/><text x="0.3596%" y="126.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:179) (2,401 samples, 0.12%)</title><rect x="0.4239%" y="132" width="0.1200%" height="15" fill="rgb(218,30,26)" fg:x="8480" fg:w="2401"/><text x="0.6739%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:179) (2,401 samples, 0.12%)</title><rect x="0.4239%" y="148" width="0.1200%" height="15" fill="rgb(220,122,19)" fg:x="8480" fg:w="2401"/><text x="0.6739%" y="158.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (2,610 samples, 0.13%)</title><rect x="0.5880%" y="212" width="0.1305%" height="15" fill="rgb(250,228,42)" fg:x="11765" fg:w="2610"/><text x="0.8380%" y="222.50"></text></g><g><title>forward (score_model.py:141) (2,625 samples, 0.13%)</title><rect x="0.5880%" y="196" width="0.1312%" height="15" fill="rgb(240,193,28)" fg:x="11765" fg:w="2625"/><text x="0.8380%" y="206.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:244) (2,846 samples, 0.14%)</title><rect x="0.5789%" y="148" width="0.1423%" height="15" fill="rgb(216,20,37)" fg:x="11581" fg:w="2846"/><text x="0.8289%" y="158.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,845 samples, 0.14%)</title><rect x="0.5789%" y="164" width="0.1422%" height="15" fill="rgb(206,188,39)" fg:x="11582" fg:w="2845"/><text x="0.8289%" y="174.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,845 samples, 0.14%)</title><rect x="0.5789%" y="180" width="0.1422%" height="15" fill="rgb(217,207,13)" fg:x="11582" fg:w="2845"/><text x="0.8289%" y="190.50"></text></g><g><title>get_loss (gfn_train.py:305) (3,584 samples, 0.18%)</title><rect x="0.5439%" y="132" width="0.1791%" height="15" fill="rgb(231,73,38)" fg:x="10881" fg:w="3584"/><text x="0.7939%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:596) (3,724 samples, 0.19%)</title><rect x="0.5439%" y="116" width="0.1861%" height="15" fill="rgb(225,20,46)" fg:x="10881" fg:w="3724"/><text x="0.7939%" y="126.50"></text></g><g><title>log_gfn_metrics (gfn_train.py:719) (14,140 samples, 0.71%)</title><rect x="0.0978%" y="100" width="0.7068%" height="15" fill="rgb(210,31,41)" fg:x="1957" fg:w="14140"/><text x="0.3478%" y="110.50"></text></g><g><title>perturb_batch (torsion.py:105) (2,806 samples, 0.14%)</title><rect x="1.1044%" y="164" width="0.1403%" height="15" fill="rgb(221,200,47)" fg:x="22096" fg:w="2806"/><text x="1.3544%" y="174.50"></text></g><g><title>perturb_batch (torsion.py:106) (3,180 samples, 0.16%)</title><rect x="1.2447%" y="164" width="0.1589%" height="15" fill="rgb(226,26,5)" fg:x="24902" fg:w="3180"/><text x="1.4947%" y="174.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (112,544 samples, 5.63%)</title><rect x="1.6174%" y="260" width="5.6253%" height="15" fill="rgb(249,33,26)" fg:x="32360" fg:w="112544"/><text x="1.8674%" y="270.50">__deepc..</text></g><g><title>clone (torch/storage.py:128) (112,488 samples, 5.62%)</title><rect x="1.6202%" y="276" width="5.6225%" height="15" fill="rgb(235,183,28)" fg:x="32416" fg:w="112488"/><text x="1.8702%" y="286.50">clone (..</text></g><g><title>deepcopy (copy.py:153) (112,775 samples, 5.64%)</title><rect x="1.6065%" y="244" width="5.6368%" height="15" fill="rgb(221,5,38)" fg:x="32141" fg:w="112775"/><text x="1.8565%" y="254.50">deepcop..</text></g><g><title>_deepcopy (torch/storage.py:853) (113,309 samples, 5.66%)</title><rect x="1.5814%" y="228" width="5.6635%" height="15" fill="rgb(247,18,42)" fg:x="31639" fg:w="113309"/><text x="1.8314%" y="238.50">_deepco..</text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (114,745 samples, 5.74%)</title><rect x="1.5761%" y="212" width="5.7353%" height="15" fill="rgb(241,131,45)" fg:x="31533" fg:w="114745"/><text x="1.8261%" y="222.50">__deepc..</text></g><g><title>deepcopy (copy.py:153) (118,317 samples, 5.91%)</title><rect x="1.5081%" y="196" width="5.9138%" height="15" fill="rgb(249,31,29)" fg:x="30173" fg:w="118317"/><text x="1.7581%" y="206.50">deepcopy..</text></g><g><title>modify_conformer (torsion.py:69) (118,890 samples, 5.94%)</title><rect x="1.4798%" y="180" width="5.9425%" height="15" fill="rgb(225,111,53)" fg:x="29607" fg:w="118890"/><text x="1.7298%" y="190.50">modify_c..</text></g><g><title>modify_conformer (torsion.py:85) (2,729 samples, 0.14%)</title><rect x="7.5591%" y="180" width="0.1364%" height="15" fill="rgb(238,160,17)" fg:x="151233" fg:w="2729"/><text x="7.8091%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:86) (4,792 samples, 0.24%)</title><rect x="7.6955%" y="180" width="0.2395%" height="15" fill="rgb(214,148,48)" fg:x="153962" fg:w="4792"/><text x="7.9455%" y="190.50"></text></g><g><title>modify_conformer (torsion.py:88) (5,177 samples, 0.26%)</title><rect x="7.9350%" y="180" width="0.2588%" height="15" fill="rgb(232,36,49)" fg:x="158754" fg:w="5177"/><text x="8.1850%" y="190.50"></text></g><g><title>perturb_batch (torsion.py:109) (136,070 samples, 6.80%)</title><rect x="1.4473%" y="164" width="6.8012%" height="15" fill="rgb(209,103,24)" fg:x="28955" fg:w="136070"/><text x="1.6973%" y="174.50">perturb_b..</text></g><g><title>perturb_batch (torsion.py:113) (2,303 samples, 0.12%)</title><rect x="8.2490%" y="164" width="0.1151%" height="15" fill="rgb(229,88,8)" fg:x="165036" fg:w="2303"/><text x="8.4990%" y="174.50"></text></g><g><title>sample_backward_trajs (gfn_train.py:206) (146,311 samples, 7.31%)</title><rect x="1.0791%" y="148" width="7.3130%" height="15" fill="rgb(213,181,19)" fg:x="21589" fg:w="146311"/><text x="1.3291%" y="158.50">sample_bac..</text></g><g><title>deepcopy (copy.py:146) (2,064 samples, 0.10%)</title><rect x="8.3974%" y="260" width="0.1032%" height="15" fill="rgb(254,191,54)" fg:x="168006" fg:w="2064"/><text x="8.6474%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (2,045 samples, 0.10%)</title><rect x="8.3984%" y="276" width="0.1022%" height="15" fill="rgb(241,83,37)" fg:x="168025" fg:w="2045"/><text x="8.6484%" y="286.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (2,744 samples, 0.14%)</title><rect x="8.5025%" y="324" width="0.1372%" height="15" fill="rgb(233,36,39)" fg:x="170108" fg:w="2744"/><text x="8.7525%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (2,743 samples, 0.14%)</title><rect x="8.5025%" y="340" width="0.1371%" height="15" fill="rgb(226,3,54)" fg:x="170109" fg:w="2743"/><text x="8.7525%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (2,750 samples, 0.14%)</title><rect x="8.5022%" y="308" width="0.1375%" height="15" fill="rgb(245,192,40)" fg:x="170103" fg:w="2750"/><text x="8.7522%" y="318.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (2,766 samples, 0.14%)</title><rect x="8.5015%" y="292" width="0.1383%" height="15" fill="rgb(238,167,29)" fg:x="170089" fg:w="2766"/><text x="8.7515%" y="302.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (2,786 samples, 0.14%)</title><rect x="8.5014%" y="276" width="0.1393%" height="15" fill="rgb(232,182,51)" fg:x="170086" fg:w="2786"/><text x="8.7514%" y="286.50"></text></g><g><title>get_logpT (gfn_train.py:82) (153,130 samples, 7.65%)</title><rect x="0.9893%" y="132" width="7.6539%" height="15" fill="rgb(231,60,39)" fg:x="19793" fg:w="153130"/><text x="1.2393%" y="142.50">get_logpT ..</text></g><g><title>sample_backward_trajs (gfn_train.py:209) (4,948 samples, 0.25%)</title><rect x="8.3959%" y="148" width="0.2473%" height="15" fill="rgb(208,69,12)" fg:x="167975" fg:w="4948"/><text x="8.6459%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (4,941 samples, 0.25%)</title><rect x="8.3962%" y="164" width="0.2470%" height="15" fill="rgb(235,93,37)" fg:x="167982" fg:w="4941"/><text x="8.6462%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (4,938 samples, 0.25%)</title><rect x="8.3964%" y="180" width="0.2468%" height="15" fill="rgb(213,116,39)" fg:x="167985" fg:w="4938"/><text x="8.6464%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (4,933 samples, 0.25%)</title><rect x="8.3966%" y="196" width="0.2466%" height="15" fill="rgb(222,207,29)" fg:x="167990" fg:w="4933"/><text x="8.6466%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (4,931 samples, 0.25%)</title><rect x="8.3967%" y="212" width="0.2465%" height="15" fill="rgb(206,96,30)" fg:x="167992" fg:w="4931"/><text x="8.6467%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (4,929 samples, 0.25%)</title><rect x="8.3968%" y="228" width="0.2464%" height="15" fill="rgb(218,138,4)" fg:x="167994" fg:w="4929"/><text x="8.6468%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (4,926 samples, 0.25%)</title><rect x="8.3970%" y="244" width="0.2462%" height="15" fill="rgb(250,191,14)" fg:x="167997" fg:w="4926"/><text x="8.6470%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (2,852 samples, 0.14%)</title><rect x="8.5006%" y="260" width="0.1426%" height="15" fill="rgb(239,60,40)" fg:x="170071" fg:w="2852"/><text x="8.7506%" y="270.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (15,979 samples, 0.80%)</title><rect x="8.7587%" y="324" width="0.7987%" height="15" fill="rgb(206,27,48)" fg:x="175234" fg:w="15979"/><text x="9.0087%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (15,972 samples, 0.80%)</title><rect x="8.7590%" y="340" width="0.7983%" height="15" fill="rgb(225,35,8)" fg:x="175241" fg:w="15972"/><text x="9.0090%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (15,988 samples, 0.80%)</title><rect x="8.7583%" y="308" width="0.7991%" height="15" fill="rgb(250,213,24)" fg:x="175227" fg:w="15988"/><text x="9.0083%" y="318.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (16,019 samples, 0.80%)</title><rect x="8.7571%" y="292" width="0.8007%" height="15" fill="rgb(247,123,22)" fg:x="175202" fg:w="16019"/><text x="9.0071%" y="302.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (16,089 samples, 0.80%)</title><rect x="8.7566%" y="276" width="0.8042%" height="15" fill="rgb(231,138,38)" fg:x="175192" fg:w="16089"/><text x="9.0066%" y="286.50"></text></g><g><title>deepcopy (copy.py:153) (16,474 samples, 0.82%)</title><rect x="8.7519%" y="260" width="0.8234%" height="15" fill="rgb(231,145,46)" fg:x="175099" fg:w="16474"/><text x="9.0019%" y="270.50"></text></g><g><title>deepcopy (copy.py:153) (18,315 samples, 0.92%)</title><rect x="8.6605%" y="164" width="0.9154%" height="15" fill="rgb(251,118,11)" fg:x="173269" fg:w="18315"/><text x="8.9105%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (18,313 samples, 0.92%)</title><rect x="8.6606%" y="180" width="0.9153%" height="15" fill="rgb(217,147,25)" fg:x="173271" fg:w="18313"/><text x="8.9106%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (18,310 samples, 0.92%)</title><rect x="8.6607%" y="196" width="0.9152%" height="15" fill="rgb(247,81,37)" fg:x="173274" fg:w="18310"/><text x="8.9107%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (18,308 samples, 0.92%)</title><rect x="8.6608%" y="212" width="0.9151%" height="15" fill="rgb(209,12,38)" fg:x="173276" fg:w="18308"/><text x="8.9108%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (18,305 samples, 0.91%)</title><rect x="8.6610%" y="228" width="0.9149%" height="15" fill="rgb(227,1,9)" fg:x="173279" fg:w="18305"/><text x="8.9110%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (18,298 samples, 0.91%)</title><rect x="8.6613%" y="244" width="0.9146%" height="15" fill="rgb(248,47,43)" fg:x="173286" fg:w="18298"/><text x="8.9113%" y="254.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:906) (2,074 samples, 0.10%)</title><rect x="9.9484%" y="276" width="0.1037%" height="15" fill="rgb(221,10,30)" fg:x="199036" fg:w="2074"/><text x="10.1984%" y="286.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (7,774 samples, 0.39%)</title><rect x="9.6888%" y="244" width="0.3886%" height="15" fill="rgb(210,229,1)" fg:x="193842" fg:w="7774"/><text x="9.9388%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (7,663 samples, 0.38%)</title><rect x="9.6943%" y="260" width="0.3830%" height="15" fill="rgb(222,148,37)" fg:x="193953" fg:w="7663"/><text x="9.9443%" y="270.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:241) (29,350 samples, 1.47%)</title><rect x="8.6451%" y="148" width="1.4670%" height="15" fill="rgb(234,67,33)" fg:x="172961" fg:w="29350"/><text x="8.8951%" y="158.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (10,727 samples, 0.54%)</title><rect x="9.5759%" y="164" width="0.5362%" height="15" fill="rgb(247,98,35)" fg:x="191584" fg:w="10727"/><text x="9.8259%" y="174.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (10,726 samples, 0.54%)</title><rect x="9.5760%" y="180" width="0.5361%" height="15" fill="rgb(247,138,52)" fg:x="191585" fg:w="10726"/><text x="9.8260%" y="190.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (10,701 samples, 0.53%)</title><rect x="9.5772%" y="196" width="0.5349%" height="15" fill="rgb(213,79,30)" fg:x="191610" fg:w="10701"/><text x="9.8272%" y="206.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (9,798 samples, 0.49%)</title><rect x="9.6223%" y="212" width="0.4897%" height="15" fill="rgb(246,177,23)" fg:x="192513" fg:w="9798"/><text x="9.8723%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (9,798 samples, 0.49%)</title><rect x="9.6223%" y="228" width="0.4897%" height="15" fill="rgb(230,62,27)" fg:x="192513" fg:w="9798"/><text x="9.8723%" y="238.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (12,547 samples, 0.63%)</title><rect x="10.2897%" y="292" width="0.6271%" height="15" fill="rgb(216,154,8)" fg:x="205865" fg:w="12547"/><text x="10.5397%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (12,524 samples, 0.63%)</title><rect x="10.2909%" y="308" width="0.6260%" height="15" fill="rgb(244,35,45)" fg:x="205888" fg:w="12524"/><text x="10.5409%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (12,513 samples, 0.63%)</title><rect x="10.2914%" y="324" width="0.6254%" height="15" fill="rgb(251,115,12)" fg:x="205899" fg:w="12513"/><text x="10.5414%" y="334.50"></text></g><g><title>forward (score_model.py:34) (18,730 samples, 0.94%)</title><rect x="10.2821%" y="244" width="0.9362%" height="15" fill="rgb(240,54,50)" fg:x="205713" fg:w="18730"/><text x="10.5321%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (18,655 samples, 0.93%)</title><rect x="10.2859%" y="260" width="0.9324%" height="15" fill="rgb(233,84,52)" fg:x="205788" fg:w="18655"/><text x="10.5359%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (18,628 samples, 0.93%)</title><rect x="10.2872%" y="276" width="0.9311%" height="15" fill="rgb(207,117,47)" fg:x="205815" fg:w="18628"/><text x="10.5372%" y="286.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (6,018 samples, 0.30%)</title><rect x="10.9175%" y="292" width="0.3008%" height="15" fill="rgb(249,43,39)" fg:x="218425" fg:w="6018"/><text x="11.1675%" y="302.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (5,989 samples, 0.30%)</title><rect x="10.9190%" y="308" width="0.2993%" height="15" fill="rgb(209,38,44)" fg:x="218454" fg:w="5989"/><text x="11.1690%" y="318.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (5,960 samples, 0.30%)</title><rect x="10.9204%" y="324" width="0.2979%" height="15" fill="rgb(236,212,23)" fg:x="218483" fg:w="5960"/><text x="11.1704%" y="334.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (5,881 samples, 0.29%)</title><rect x="10.9244%" y="340" width="0.2939%" height="15" fill="rgb(242,79,21)" fg:x="218562" fg:w="5881"/><text x="11.1744%" y="350.50"></text></g><g><title>forward (score_model.py:139) (22,219 samples, 1.11%)</title><rect x="10.2767%" y="196" width="1.1106%" height="15" fill="rgb(211,96,35)" fg:x="205604" fg:w="22219"/><text x="10.5267%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (22,197 samples, 1.11%)</title><rect x="10.2778%" y="212" width="1.1095%" height="15" fill="rgb(253,215,40)" fg:x="205626" fg:w="22197"/><text x="10.5278%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (22,170 samples, 1.11%)</title><rect x="10.2791%" y="228" width="1.1081%" height="15" fill="rgb(211,81,21)" fg:x="205653" fg:w="22170"/><text x="10.5291%" y="238.50"></text></g><g><title>forward (score_model.py:43) (2,537 samples, 0.13%)</title><rect x="11.2604%" y="244" width="0.1268%" height="15" fill="rgb(208,190,38)" fg:x="225286" fg:w="2537"/><text x="11.5104%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,523 samples, 0.13%)</title><rect x="11.2611%" y="260" width="0.1261%" height="15" fill="rgb(235,213,38)" fg:x="225300" fg:w="2523"/><text x="11.5111%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,508 samples, 0.13%)</title><rect x="11.2619%" y="276" width="0.1254%" height="15" fill="rgb(237,122,38)" fg:x="225315" fg:w="2508"/><text x="11.5119%" y="286.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (212,437 samples, 10.62%)</title><rect x="11.3876%" y="212" width="10.6182%" height="15" fill="rgb(244,218,35)" fg:x="227830" fg:w="212437"/><text x="11.6376%" y="222.50">build_bond_conv..</text></g><g><title>forward (score_model.py:141) (214,306 samples, 10.71%)</title><rect x="11.3872%" y="196" width="10.7116%" height="15" fill="rgb(240,68,47)" fg:x="227823" fg:w="214306"/><text x="11.6372%" y="206.50">forward (score_m..</text></g><g><title>forward (score_model.py:147) (2,938 samples, 0.15%)</title><rect x="22.1174%" y="196" width="0.1468%" height="15" fill="rgb(210,16,53)" fg:x="442500" fg:w="2938"/><text x="22.3674%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,911 samples, 0.15%)</title><rect x="22.1188%" y="212" width="0.1455%" height="15" fill="rgb(235,124,12)" fg:x="442527" fg:w="2911"/><text x="22.3688%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,906 samples, 0.15%)</title><rect x="22.1190%" y="228" width="0.1453%" height="15" fill="rgb(224,169,11)" fg:x="442532" fg:w="2906"/><text x="22.3690%" y="238.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (2,900 samples, 0.14%)</title><rect x="22.1193%" y="244" width="0.1450%" height="15" fill="rgb(250,166,2)" fg:x="442538" fg:w="2900"/><text x="22.3693%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,896 samples, 0.14%)</title><rect x="22.1195%" y="260" width="0.1448%" height="15" fill="rgb(242,216,29)" fg:x="442542" fg:w="2896"/><text x="22.3695%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,892 samples, 0.14%)</title><rect x="22.1197%" y="276" width="0.1446%" height="15" fill="rgb(230,116,27)" fg:x="442546" fg:w="2892"/><text x="22.3697%" y="286.50"></text></g><g><title>forward (score_model.py:150) (2,508 samples, 0.13%)</title><rect x="22.2682%" y="196" width="0.1254%" height="15" fill="rgb(228,99,48)" fg:x="445516" fg:w="2508"/><text x="22.5182%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,466 samples, 0.12%)</title><rect x="22.2703%" y="212" width="0.1233%" height="15" fill="rgb(253,11,6)" fg:x="445558" fg:w="2466"/><text x="22.5203%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,458 samples, 0.12%)</title><rect x="22.2707%" y="228" width="0.1229%" height="15" fill="rgb(247,143,39)" fg:x="445566" fg:w="2458"/><text x="22.5207%" y="238.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:244) (245,965 samples, 12.29%)</title><rect x="10.1179%" y="148" width="12.2940%" height="15" fill="rgb(236,97,10)" fg:x="202428" fg:w="245965"/><text x="10.3679%" y="158.50">get_log_p_f_and_lo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (245,954 samples, 12.29%)</title><rect x="10.1185%" y="164" width="12.2935%" height="15" fill="rgb(233,208,19)" fg:x="202439" fg:w="245954"/><text x="10.3685%" y="174.50">_wrapped_call_impl..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (245,948 samples, 12.29%)</title><rect x="10.1188%" y="180" width="12.2932%" height="15" fill="rgb(216,164,2)" fg:x="202445" fg:w="245948"/><text x="10.3688%" y="190.50">_call_impl (torch/..</text></g><g><title>get_logpT (gfn_train.py:83) (277,845 samples, 13.89%)</title><rect x="8.6432%" y="132" width="13.8875%" height="15" fill="rgb(220,129,5)" fg:x="172923" fg:w="277845"/><text x="8.8932%" y="142.50">get_logpT (gfn_train...</text></g><g><title>log_gfn_metrics (gfn_train.py:759) (436,255 samples, 21.81%)</title><rect x="0.8108%" y="100" width="21.8053%" height="15" fill="rgb(242,17,10)" fg:x="16221" fg:w="436255"/><text x="1.0608%" y="110.50">log_gfn_metrics (gfn_train.py:759)</text></g><g><title>get_2dheatmap_array_and_pt (gfn_train.py:133) (433,384 samples, 21.66%)</title><rect x="0.9543%" y="116" width="21.6618%" height="15" fill="rgb(242,107,0)" fg:x="19092" fg:w="433384"/><text x="1.2043%" y="126.50">get_2dheatmap_array_and_pt (gfn_tr..</text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:244) (2,185 samples, 0.11%)</title><rect x="22.7932%" y="132" width="0.1092%" height="15" fill="rgb(251,28,31)" fg:x="456020" fg:w="2185"/><text x="23.0432%" y="142.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,185 samples, 0.11%)</title><rect x="22.7932%" y="148" width="0.1092%" height="15" fill="rgb(233,223,10)" fg:x="456020" fg:w="2185"/><text x="23.0432%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,185 samples, 0.11%)</title><rect x="22.7932%" y="164" width="0.1092%" height="15" fill="rgb(215,21,27)" fg:x="456020" fg:w="2185"/><text x="23.0432%" y="174.50"></text></g><g><title>get_logpT (gfn_train.py:83) (2,383 samples, 0.12%)</title><rect x="22.7842%" y="116" width="0.1191%" height="15" fill="rgb(232,23,21)" fg:x="455840" fg:w="2383"/><text x="23.0342%" y="126.50"></text></g><g><title>log_gfn_metrics (gfn_train.py:835) (4,120 samples, 0.21%)</title><rect x="22.7002%" y="100" width="0.2059%" height="15" fill="rgb(244,5,23)" fg:x="454160" fg:w="4120"/><text x="22.9502%" y="110.50"></text></g><g><title>train (train.py:53) (456,423 samples, 22.81%)</title><rect x="0.0965%" y="84" width="22.8133%" height="15" fill="rgb(226,81,46)" fg:x="1930" fg:w="456423"/><text x="0.3465%" y="94.50">train (train.py:53)</text></g><g><title>format_meter (tqdm/std.py:593) (8,000 samples, 0.40%)</title><rect x="22.9137%" y="180" width="0.3999%" height="15" fill="rgb(247,70,30)" fg:x="458432" fg:w="8000"/><text x="23.1637%" y="190.50"></text></g><g><title>__str__ (tqdm/std.py:1151) (8,338 samples, 0.42%)</title><rect x="22.9117%" y="164" width="0.4168%" height="15" fill="rgb(212,68,19)" fg:x="458392" fg:w="8338"/><text x="23.1617%" y="174.50"></text></g><g><title>refresh (tqdm/std.py:1347) (8,523 samples, 0.43%)</title><rect x="22.9114%" y="132" width="0.4260%" height="15" fill="rgb(240,187,13)" fg:x="458386" fg:w="8523"/><text x="23.1614%" y="142.50"></text></g><g><title>display (tqdm/std.py:1495) (8,521 samples, 0.43%)</title><rect x="22.9115%" y="148" width="0.4259%" height="15" fill="rgb(223,113,26)" fg:x="458388" fg:w="8521"/><text x="23.1615%" y="158.50"></text></g><g><title>train (train.py:55) (8,558 samples, 0.43%)</title><rect x="22.9098%" y="84" width="0.4278%" height="15" fill="rgb(206,192,2)" fg:x="458353" fg:w="8558"/><text x="23.1598%" y="94.50"></text></g><g><title>__iter__ (tqdm/std.py:1191) (8,552 samples, 0.43%)</title><rect x="22.9101%" y="100" width="0.4275%" height="15" fill="rgb(241,108,4)" fg:x="458359" fg:w="8552"/><text x="23.1601%" y="110.50"></text></g><g><title>update (tqdm/std.py:1242) (8,534 samples, 0.43%)</title><rect x="22.9110%" y="116" width="0.4266%" height="15" fill="rgb(247,173,49)" fg:x="458377" fg:w="8534"/><text x="23.1610%" y="126.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (3,279 samples, 0.16%)</title><rect x="24.0364%" y="244" width="0.1639%" height="15" fill="rgb(224,114,35)" fg:x="480893" fg:w="3279"/><text x="24.2864%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (3,275 samples, 0.16%)</title><rect x="24.0366%" y="260" width="0.1637%" height="15" fill="rgb(245,159,27)" fg:x="480897" fg:w="3275"/><text x="24.2866%" y="270.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (3,271 samples, 0.16%)</title><rect x="24.0368%" y="276" width="0.1635%" height="15" fill="rgb(245,172,44)" fg:x="480901" fg:w="3271"/><text x="24.2868%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (3,261 samples, 0.16%)</title><rect x="24.0373%" y="292" width="0.1630%" height="15" fill="rgb(236,23,11)" fg:x="480911" fg:w="3261"/><text x="24.2873%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (3,254 samples, 0.16%)</title><rect x="24.0377%" y="308" width="0.1626%" height="15" fill="rgb(205,117,38)" fg:x="480918" fg:w="3254"/><text x="24.2877%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (3,286 samples, 0.16%)</title><rect x="24.0362%" y="228" width="0.1642%" height="15" fill="rgb(237,72,25)" fg:x="480889" fg:w="3286"/><text x="24.2862%" y="238.50"></text></g><g><title>__getitem__ (torch_geometric/data/dataset.py:289) (3,301 samples, 0.16%)</title><rect x="24.0356%" y="196" width="0.1650%" height="15" fill="rgb(244,70,9)" fg:x="480877" fg:w="3301"/><text x="24.2856%" y="206.50"></text></g><g><title>get (dataset.py:210) (3,299 samples, 0.16%)</title><rect x="24.0357%" y="212" width="0.1649%" height="15" fill="rgb(217,125,39)" fg:x="480879" fg:w="3299"/><text x="24.2857%" y="222.50"></text></g><g><title>fetch (torch/utils/data/_utils/fetch.py:51) (3,406 samples, 0.17%)</title><rect x="24.0355%" y="164" width="0.1702%" height="15" fill="rgb(235,36,10)" fg:x="480875" fg:w="3406"/><text x="24.2855%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/fetch.py:51) (3,405 samples, 0.17%)</title><rect x="24.0356%" y="180" width="0.1702%" height="15" fill="rgb(251,123,47)" fg:x="480876" fg:w="3405"/><text x="24.2856%" y="190.50"></text></g><g><title>__next__ (torch/utils/data/dataloader.py:631) (4,733 samples, 0.24%)</title><rect x="24.0345%" y="132" width="0.2366%" height="15" fill="rgb(221,13,13)" fg:x="480855" fg:w="4733"/><text x="24.2845%" y="142.50"></text></g><g><title>_next_data (torch/utils/data/dataloader.py:675) (4,726 samples, 0.24%)</title><rect x="24.0349%" y="148" width="0.2362%" height="15" fill="rgb(238,131,9)" fg:x="480862" fg:w="4726"/><text x="24.2849%" y="158.50"></text></g><g><title>__iter__ (tqdm/std.py:1181) (4,855 samples, 0.24%)</title><rect x="24.0301%" y="116" width="0.2427%" height="15" fill="rgb(211,50,8)" fg:x="480767" fg:w="4855"/><text x="24.2801%" y="126.50"></text></g><g><title>gfn_sgd (gfn_train.py:570) (6,329 samples, 0.32%)</title><rect x="23.9576%" y="100" width="0.3163%" height="15" fill="rgb(245,182,24)" fg:x="479316" fg:w="6329"/><text x="24.2076%" y="110.50"></text></g><g><title>deepcopy (copy.py:153) (2,202 samples, 0.11%)</title><rect x="24.3183%" y="228" width="0.1101%" height="15" fill="rgb(242,14,37)" fg:x="486532" fg:w="2202"/><text x="24.5683%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (2,424 samples, 0.12%)</title><rect x="24.3085%" y="196" width="0.1212%" height="15" fill="rgb(246,228,12)" fg:x="486337" fg:w="2424"/><text x="24.5585%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (2,414 samples, 0.12%)</title><rect x="24.3090%" y="212" width="0.1207%" height="15" fill="rgb(213,55,15)" fg:x="486347" fg:w="2414"/><text x="24.5590%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (2,451 samples, 0.12%)</title><rect x="24.3073%" y="164" width="0.1225%" height="15" fill="rgb(209,9,3)" fg:x="486312" fg:w="2451"/><text x="24.5573%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (2,443 samples, 0.12%)</title><rect x="24.3077%" y="180" width="0.1221%" height="15" fill="rgb(230,59,30)" fg:x="486320" fg:w="2443"/><text x="24.5577%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (2,468 samples, 0.12%)</title><rect x="24.3065%" y="148" width="0.1234%" height="15" fill="rgb(209,121,21)" fg:x="486296" fg:w="2468"/><text x="24.5565%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (2,483 samples, 0.12%)</title><rect x="24.3060%" y="132" width="0.1241%" height="15" fill="rgb(220,109,13)" fg:x="486287" fg:w="2483"/><text x="24.5560%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:581) (2,511 samples, 0.13%)</title><rect x="24.3047%" y="100" width="0.1255%" height="15" fill="rgb(232,18,1)" fg:x="486261" fg:w="2511"/><text x="24.5547%" y="110.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:581) (2,510 samples, 0.13%)</title><rect x="24.3048%" y="116" width="0.1255%" height="15" fill="rgb(215,41,42)" fg:x="486262" fg:w="2510"/><text x="24.5548%" y="126.50"></text></g><g><title>perturb_seeds (sampling.py:87) (2,155 samples, 0.11%)</title><rect x="24.4894%" y="116" width="0.1077%" height="15" fill="rgb(224,123,36)" fg:x="489956" fg:w="2155"/><text x="24.7394%" y="126.50"></text></g><g><title>gfn_sgd (gfn_train.py:583) (2,754 samples, 0.14%)</title><rect x="24.4701%" y="100" width="0.1377%" height="15" fill="rgb(240,125,3)" fg:x="489570" fg:w="2754"/><text x="24.7201%" y="110.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:160) (3,354 samples, 0.17%)</title><rect x="25.0300%" y="116" width="0.1676%" height="15" fill="rgb(205,98,50)" fg:x="500772" fg:w="3354"/><text x="25.2800%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:160) (3,354 samples, 0.17%)</title><rect x="25.0300%" y="132" width="0.1676%" height="15" fill="rgb(205,185,37)" fg:x="500772" fg:w="3354"/><text x="25.2800%" y="142.50"></text></g><g><title>radius_graph (torch_cluster/radius.py:135) (2,774 samples, 0.14%)</title><rect x="25.2521%" y="196" width="0.1387%" height="15" fill="rgb(238,207,15)" fg:x="505215" fg:w="2774"/><text x="25.5021%" y="206.50"></text></g><g><title>build_conv_graph (score_model.py:181) (4,042 samples, 0.20%)</title><rect x="25.2466%" y="180" width="0.2020%" height="15" fill="rgb(213,199,42)" fg:x="505106" fg:w="4042"/><text x="25.4966%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:201) (3,285 samples, 0.16%)</title><rect x="25.6393%" y="180" width="0.1642%" height="15" fill="rgb(235,201,11)" fg:x="512962" fg:w="3285"/><text x="25.8893%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (2,187 samples, 0.11%)</title><rect x="25.6942%" y="196" width="0.1093%" height="15" fill="rgb(207,46,11)" fg:x="514060" fg:w="2187"/><text x="25.9442%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,177 samples, 0.11%)</title><rect x="25.6947%" y="212" width="0.1088%" height="15" fill="rgb(241,35,35)" fg:x="514070" fg:w="2177"/><text x="25.9447%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,159 samples, 0.11%)</title><rect x="25.6956%" y="228" width="0.1079%" height="15" fill="rgb(243,32,47)" fg:x="514088" fg:w="2159"/><text x="25.9456%" y="238.50"></text></g><g><title>forward (score_model.py:131) (11,231 samples, 0.56%)</title><rect x="25.2422%" y="164" width="0.5614%" height="15" fill="rgb(247,202,23)" fg:x="505018" fg:w="11231"/><text x="25.4922%" y="174.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (6,274 samples, 0.31%)</title><rect x="25.8681%" y="212" width="0.3136%" height="15" fill="rgb(219,102,11)" fg:x="517539" fg:w="6274"/><text x="26.1181%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,247 samples, 0.31%)</title><rect x="25.8694%" y="228" width="0.3122%" height="15" fill="rgb(243,110,44)" fg:x="517566" fg:w="6247"/><text x="26.1194%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,221 samples, 0.31%)</title><rect x="25.8707%" y="244" width="0.3109%" height="15" fill="rgb(222,74,54)" fg:x="517592" fg:w="6221"/><text x="26.1207%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (6,087 samples, 0.30%)</title><rect x="25.8774%" y="260" width="0.3042%" height="15" fill="rgb(216,99,12)" fg:x="517726" fg:w="6087"/><text x="26.1274%" y="270.50"></text></g><g><title>forward (score_model.py:135) (6,335 samples, 0.32%)</title><rect x="25.8651%" y="164" width="0.3166%" height="15" fill="rgb(226,22,26)" fg:x="517479" fg:w="6335"/><text x="26.1151%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,307 samples, 0.32%)</title><rect x="25.8665%" y="180" width="0.3152%" height="15" fill="rgb(217,163,10)" fg:x="517507" fg:w="6307"/><text x="26.1165%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,293 samples, 0.31%)</title><rect x="25.8672%" y="196" width="0.3145%" height="15" fill="rgb(213,25,53)" fg:x="517521" fg:w="6293"/><text x="26.1172%" y="206.50"></text></g><g><title>forward (score_model.py:138) (2,167 samples, 0.11%)</title><rect x="26.1851%" y="164" width="0.1083%" height="15" fill="rgb(252,105,26)" fg:x="523881" fg:w="2167"/><text x="26.4351%" y="174.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (78,372 samples, 3.92%)</title><rect x="26.3969%" y="260" width="3.9173%" height="15" fill="rgb(220,39,43)" fg:x="528120" fg:w="78372"/><text x="26.6469%" y="270.50">forw..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (78,258 samples, 3.91%)</title><rect x="26.4026%" y="276" width="3.9116%" height="15" fill="rgb(229,68,48)" fg:x="528234" fg:w="78258"/><text x="26.6526%" y="286.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (78,146 samples, 3.91%)</title><rect x="26.4082%" y="292" width="3.9060%" height="15" fill="rgb(252,8,32)" fg:x="528346" fg:w="78146"/><text x="26.6582%" y="302.50">_cal..</text></g><g><title>forward (score_model.py:34) (100,620 samples, 5.03%)</title><rect x="26.3368%" y="212" width="5.0293%" height="15" fill="rgb(223,20,43)" fg:x="526917" fg:w="100620"/><text x="26.5868%" y="222.50">forwar..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (99,918 samples, 4.99%)</title><rect x="26.3719%" y="228" width="4.9942%" height="15" fill="rgb(229,81,49)" fg:x="527619" fg:w="99918"/><text x="26.6219%" y="238.50">_wrapp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (99,738 samples, 4.99%)</title><rect x="26.3809%" y="244" width="4.9852%" height="15" fill="rgb(236,28,36)" fg:x="527799" fg:w="99738"/><text x="26.6309%" y="254.50">_call_..</text></g><g><title>forward (torch/nn/modules/container.py:217) (20,963 samples, 1.05%)</title><rect x="30.3183%" y="260" width="1.0478%" height="15" fill="rgb(249,185,26)" fg:x="606574" fg:w="20963"/><text x="30.5683%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (20,813 samples, 1.04%)</title><rect x="30.3258%" y="276" width="1.0403%" height="15" fill="rgb(249,174,33)" fg:x="606724" fg:w="20813"/><text x="30.5758%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (20,653 samples, 1.03%)</title><rect x="30.3338%" y="292" width="1.0323%" height="15" fill="rgb(233,201,37)" fg:x="606884" fg:w="20653"/><text x="30.5838%" y="302.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (19,700 samples, 0.98%)</title><rect x="30.3814%" y="308" width="0.9847%" height="15" fill="rgb(221,78,26)" fg:x="607837" fg:w="19700"/><text x="30.6314%" y="318.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:41) (2,409 samples, 0.12%)</title><rect x="31.3803%" y="244" width="0.1204%" height="15" fill="rgb(250,127,30)" fg:x="627821" fg:w="2409"/><text x="31.6303%" y="254.50"></text></g><g><title>forward (score_model.py:37) (6,456 samples, 0.32%)</title><rect x="31.3717%" y="212" width="0.3227%" height="15" fill="rgb(230,49,44)" fg:x="627650" fg:w="6456"/><text x="31.6217%" y="222.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (6,396 samples, 0.32%)</title><rect x="31.3747%" y="228" width="0.3197%" height="15" fill="rgb(229,67,23)" fg:x="627710" fg:w="6396"/><text x="31.6247%" y="238.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:129) (3,383 samples, 0.17%)</title><rect x="32.1274%" y="260" width="0.1691%" height="15" fill="rgb(249,83,47)" fg:x="642769" fg:w="3383"/><text x="32.3774%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (5,274 samples, 0.26%)</title><rect x="32.4217%" y="260" width="0.2636%" height="15" fill="rgb(215,43,3)" fg:x="648657" fg:w="5274"/><text x="32.6717%" y="270.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (3,259 samples, 0.16%)</title><rect x="32.5224%" y="276" width="0.1629%" height="15" fill="rgb(238,154,13)" fg:x="650672" fg:w="3259"/><text x="32.7724%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:147) (2,315 samples, 0.12%)</title><rect x="32.6861%" y="260" width="0.1157%" height="15" fill="rgb(219,56,2)" fg:x="653946" fg:w="2315"/><text x="32.9361%" y="270.50"></text></g><g><title>forward (score_model.py:139) (137,756 samples, 6.89%)</title><rect x="26.2934%" y="164" width="6.8854%" height="15" fill="rgb(233,0,4)" fg:x="526048" fg:w="137756"/><text x="26.5434%" y="174.50">forward (..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (137,583 samples, 6.88%)</title><rect x="26.3020%" y="180" width="6.8768%" height="15" fill="rgb(235,30,7)" fg:x="526221" fg:w="137583"/><text x="26.5520%" y="190.50">_wrapped_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (137,419 samples, 6.87%)</title><rect x="26.3102%" y="196" width="6.8686%" height="15" fill="rgb(250,79,13)" fg:x="526385" fg:w="137419"/><text x="26.5602%" y="206.50">_call_imp..</text></g><g><title>forward (score_model.py:43) (27,727 samples, 1.39%)</title><rect x="31.7929%" y="212" width="1.3859%" height="15" fill="rgb(211,146,34)" fg:x="636077" fg:w="27727"/><text x="32.0429%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (27,634 samples, 1.38%)</title><rect x="31.7976%" y="228" width="1.3812%" height="15" fill="rgb(228,22,38)" fg:x="636170" fg:w="27634"/><text x="32.0476%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (27,458 samples, 1.37%)</title><rect x="31.8064%" y="244" width="1.3724%" height="15" fill="rgb(235,168,5)" fg:x="636346" fg:w="27458"/><text x="32.0564%" y="254.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (5,817 samples, 0.29%)</title><rect x="33.1833%" y="180" width="0.2908%" height="15" fill="rgb(221,155,16)" fg:x="663894" fg:w="5817"/><text x="33.4333%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:168) (2,773 samples, 0.14%)</title><rect x="33.5077%" y="180" width="0.1386%" height="15" fill="rgb(215,215,53)" fg:x="670383" fg:w="2773"/><text x="33.7577%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:173) (2,645 samples, 0.13%)</title><rect x="33.7105%" y="180" width="0.1322%" height="15" fill="rgb(223,4,10)" fg:x="674441" fg:w="2645"/><text x="33.9605%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,622 samples, 0.13%)</title><rect x="33.7116%" y="196" width="0.1311%" height="15" fill="rgb(234,103,6)" fg:x="674464" fg:w="2622"/><text x="33.9616%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,602 samples, 0.13%)</title><rect x="33.7126%" y="212" width="0.1301%" height="15" fill="rgb(227,97,0)" fg:x="674484" fg:w="2602"/><text x="33.9626%" y="222.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (2,572 samples, 0.13%)</title><rect x="33.7141%" y="228" width="0.1286%" height="15" fill="rgb(234,150,53)" fg:x="674514" fg:w="2572"/><text x="33.9641%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,525 samples, 0.13%)</title><rect x="33.7165%" y="244" width="0.1262%" height="15" fill="rgb(228,201,54)" fg:x="674561" fg:w="2525"/><text x="33.9665%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,484 samples, 0.12%)</title><rect x="33.7185%" y="260" width="0.1242%" height="15" fill="rgb(222,22,37)" fg:x="674602" fg:w="2484"/><text x="33.9685%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (2,301 samples, 0.12%)</title><rect x="33.7277%" y="276" width="0.1150%" height="15" fill="rgb(237,53,32)" fg:x="674785" fg:w="2301"/><text x="33.9777%" y="286.50"></text></g><g><title>forward (score_model.py:141) (16,600 samples, 0.83%)</title><rect x="33.1788%" y="164" width="0.8297%" height="15" fill="rgb(233,25,53)" fg:x="663804" fg:w="16600"/><text x="33.4288%" y="174.50"></text></g><g><title>build_bond_conv_graph (score_model.py:175) (3,318 samples, 0.17%)</title><rect x="33.8427%" y="180" width="0.1658%" height="15" fill="rgb(210,40,34)" fg:x="677086" fg:w="3318"/><text x="34.0927%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (2,269 samples, 0.11%)</title><rect x="33.8951%" y="196" width="0.1134%" height="15" fill="rgb(241,220,44)" fg:x="678135" fg:w="2269"/><text x="34.1451%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,264 samples, 0.11%)</title><rect x="33.8954%" y="212" width="0.1132%" height="15" fill="rgb(235,28,35)" fg:x="678140" fg:w="2264"/><text x="34.1454%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,244 samples, 0.11%)</title><rect x="33.8964%" y="228" width="0.1122%" height="15" fill="rgb(210,56,17)" fg:x="678160" fg:w="2244"/><text x="34.1464%" y="238.50"></text></g><g><title>forward (score_model.py:146) (2,406 samples, 0.12%)</title><rect x="34.0500%" y="164" width="0.1203%" height="15" fill="rgb(224,130,29)" fg:x="681233" fg:w="2406"/><text x="34.3000%" y="174.50"></text></g><g><title>forward (score_model.py:147) (10,465 samples, 0.52%)</title><rect x="34.1702%" y="164" width="0.5231%" height="15" fill="rgb(235,212,8)" fg:x="683639" fg:w="10465"/><text x="34.4202%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (10,257 samples, 0.51%)</title><rect x="34.1806%" y="180" width="0.5127%" height="15" fill="rgb(223,33,50)" fg:x="683847" fg:w="10257"/><text x="34.4306%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (10,236 samples, 0.51%)</title><rect x="34.1817%" y="196" width="0.5116%" height="15" fill="rgb(219,149,13)" fg:x="683868" fg:w="10236"/><text x="34.4317%" y="206.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (10,153 samples, 0.51%)</title><rect x="34.1858%" y="212" width="0.5075%" height="15" fill="rgb(250,156,29)" fg:x="683951" fg:w="10153"/><text x="34.4358%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (10,129 samples, 0.51%)</title><rect x="34.1870%" y="228" width="0.5063%" height="15" fill="rgb(216,193,19)" fg:x="683975" fg:w="10129"/><text x="34.4370%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (10,110 samples, 0.51%)</title><rect x="34.1880%" y="244" width="0.5053%" height="15" fill="rgb(216,135,14)" fg:x="683994" fg:w="10110"/><text x="34.4380%" y="254.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (5,515 samples, 0.28%)</title><rect x="34.7688%" y="260" width="0.2757%" height="15" fill="rgb(241,47,5)" fg:x="695615" fg:w="5515"/><text x="35.0188%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (5,493 samples, 0.27%)</title><rect x="34.7699%" y="276" width="0.2746%" height="15" fill="rgb(233,42,35)" fg:x="695637" fg:w="5493"/><text x="35.0199%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (5,477 samples, 0.27%)</title><rect x="34.7707%" y="292" width="0.2738%" height="15" fill="rgb(231,13,6)" fg:x="695653" fg:w="5477"/><text x="35.0207%" y="302.50"></text></g><g><title>forward (score_model.py:34) (8,015 samples, 0.40%)</title><rect x="34.7532%" y="212" width="0.4006%" height="15" fill="rgb(207,181,40)" fg:x="695302" fg:w="8015"/><text x="35.0032%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,796 samples, 0.39%)</title><rect x="34.7641%" y="228" width="0.3897%" height="15" fill="rgb(254,173,49)" fg:x="695521" fg:w="7796"/><text x="35.0141%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (7,767 samples, 0.39%)</title><rect x="34.7656%" y="244" width="0.3882%" height="15" fill="rgb(221,1,38)" fg:x="695550" fg:w="7767"/><text x="35.0156%" y="254.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (2,165 samples, 0.11%)</title><rect x="35.0456%" y="260" width="0.1082%" height="15" fill="rgb(206,124,46)" fg:x="701152" fg:w="2165"/><text x="35.2956%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,129 samples, 0.11%)</title><rect x="35.0474%" y="276" width="0.1064%" height="15" fill="rgb(249,21,11)" fg:x="701188" fg:w="2129"/><text x="35.2974%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,086 samples, 0.10%)</title><rect x="35.0495%" y="292" width="0.1043%" height="15" fill="rgb(222,201,40)" fg:x="701231" fg:w="2086"/><text x="35.2995%" y="302.50"></text></g><g><title>forward (score_model.py:150) (12,922 samples, 0.65%)</title><rect x="34.7252%" y="164" width="0.6459%" height="15" fill="rgb(235,61,29)" fg:x="694742" fg:w="12922"/><text x="34.9752%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (12,531 samples, 0.63%)</title><rect x="34.7447%" y="180" width="0.6263%" height="15" fill="rgb(219,207,3)" fg:x="695133" fg:w="12531"/><text x="34.9947%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (12,492 samples, 0.62%)</title><rect x="34.7467%" y="196" width="0.6244%" height="15" fill="rgb(222,56,46)" fg:x="695172" fg:w="12492"/><text x="34.9967%" y="206.50"></text></g><g><title>forward (score_model.py:43) (2,381 samples, 0.12%)</title><rect x="35.2521%" y="212" width="0.1190%" height="15" fill="rgb(239,76,54)" fg:x="705283" fg:w="2381"/><text x="35.5021%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,365 samples, 0.12%)</title><rect x="35.2529%" y="228" width="0.1182%" height="15" fill="rgb(231,124,27)" fg:x="705299" fg:w="2365"/><text x="35.5029%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,324 samples, 0.12%)</title><rect x="35.2549%" y="244" width="0.1162%" height="15" fill="rgb(249,195,6)" fg:x="705340" fg:w="2324"/><text x="35.5049%" y="254.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:164) (206,390 samples, 10.32%)</title><rect x="25.2323%" y="116" width="10.3160%" height="15" fill="rgb(237,174,47)" fg:x="504819" fg:w="206390"/><text x="25.4823%" y="126.50">sample_forward_..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (206,356 samples, 10.31%)</title><rect x="25.2340%" y="132" width="10.3143%" height="15" fill="rgb(206,201,31)" fg:x="504853" fg:w="206356"/><text x="25.4840%" y="142.50">_wrapped_call_i..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (206,311 samples, 10.31%)</title><rect x="25.2362%" y="148" width="10.3120%" height="15" fill="rgb(231,57,52)" fg:x="504898" fg:w="206311"/><text x="25.4862%" y="158.50">_call_impl (tor..</text></g><g><title>sample_forward_trajs (gfn_train.py:172) (6,258 samples, 0.31%)</title><rect x="35.5821%" y="116" width="0.3128%" height="15" fill="rgb(248,177,22)" fg:x="711886" fg:w="6258"/><text x="35.8321%" y="126.50"></text></g><g><title>perturb_batch (torsion.py:106) (2,776 samples, 0.14%)</title><rect x="36.0045%" y="132" width="0.1388%" height="15" fill="rgb(215,211,37)" fg:x="720337" fg:w="2776"/><text x="36.2545%" y="142.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (2,186 samples, 0.11%)</title><rect x="36.2409%" y="196" width="0.1093%" height="15" fill="rgb(241,128,51)" fg:x="725066" fg:w="2186"/><text x="36.4909%" y="206.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (2,796 samples, 0.14%)</title><rect x="36.2362%" y="180" width="0.1398%" height="15" fill="rgb(227,165,31)" fg:x="724973" fg:w="2796"/><text x="36.4862%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (6,172 samples, 0.31%)</title><rect x="36.2051%" y="164" width="0.3085%" height="15" fill="rgb(228,167,24)" fg:x="724350" fg:w="6172"/><text x="36.4551%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:69) (6,547 samples, 0.33%)</title><rect x="36.1900%" y="148" width="0.3272%" height="15" fill="rgb(228,143,12)" fg:x="724049" fg:w="6547"/><text x="36.4400%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (4,130 samples, 0.21%)</title><rect x="36.5883%" y="164" width="0.2064%" height="15" fill="rgb(249,149,8)" fg:x="732016" fg:w="4130"/><text x="36.8383%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:72) (4,940 samples, 0.25%)</title><rect x="36.5507%" y="148" width="0.2469%" height="15" fill="rgb(243,35,44)" fg:x="731265" fg:w="4940"/><text x="36.8007%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:75) (3,299 samples, 0.16%)</title><rect x="36.7976%" y="148" width="0.1649%" height="15" fill="rgb(246,89,9)" fg:x="736205" fg:w="3299"/><text x="37.0476%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:85) (3,498 samples, 0.17%)</title><rect x="37.0245%" y="148" width="0.1748%" height="15" fill="rgb(233,213,13)" fg:x="740744" fg:w="3498"/><text x="37.2745%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:86) (3,777 samples, 0.19%)</title><rect x="37.1993%" y="148" width="0.1888%" height="15" fill="rgb(233,141,41)" fg:x="744242" fg:w="3777"/><text x="37.4493%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:88) (5,849 samples, 0.29%)</title><rect x="37.3881%" y="148" width="0.2923%" height="15" fill="rgb(239,167,4)" fg:x="748019" fg:w="5849"/><text x="37.6381%" y="158.50"></text></g><g><title>perturb_batch (torsion.py:109) (30,902 samples, 1.54%)</title><rect x="36.1724%" y="132" width="1.5446%" height="15" fill="rgb(209,217,16)" fg:x="723696" fg:w="30902"/><text x="36.4224%" y="142.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (2,412 samples, 0.12%)</title><rect x="37.7834%" y="212" width="0.1206%" height="15" fill="rgb(219,88,35)" fg:x="755928" fg:w="2412"/><text x="38.0334%" y="222.50"></text></g><g><title>clone (torch/storage.py:128) (2,401 samples, 0.12%)</title><rect x="37.7840%" y="228" width="0.1200%" height="15" fill="rgb(220,193,23)" fg:x="755939" fg:w="2401"/><text x="38.0340%" y="238.50"></text></g><g><title>deepcopy (copy.py:153) (2,434 samples, 0.12%)</title><rect x="37.7827%" y="196" width="0.1217%" height="15" fill="rgb(230,90,52)" fg:x="755913" fg:w="2434"/><text x="38.0327%" y="206.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (2,546 samples, 0.13%)</title><rect x="37.7793%" y="180" width="0.1273%" height="15" fill="rgb(252,106,19)" fg:x="755845" fg:w="2546"/><text x="38.0293%" y="190.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (2,667 samples, 0.13%)</title><rect x="37.7781%" y="164" width="0.1333%" height="15" fill="rgb(206,74,20)" fg:x="755821" fg:w="2667"/><text x="38.0281%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (3,188 samples, 0.16%)</title><rect x="37.7725%" y="148" width="0.1593%" height="15" fill="rgb(230,138,44)" fg:x="755709" fg:w="3188"/><text x="38.0225%" y="158.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:173) (40,813 samples, 2.04%)</title><rect x="35.8949%" y="116" width="2.0400%" height="15" fill="rgb(235,182,43)" fg:x="718144" fg:w="40813"/><text x="36.1449%" y="126.50">s..</text></g><g><title>perturb_batch (torsion.py:99) (3,304 samples, 0.17%)</title><rect x="37.7697%" y="132" width="0.1651%" height="15" fill="rgb(242,16,51)" fg:x="755653" fg:w="3304"/><text x="38.0197%" y="142.50"></text></g><g><title>deepcopy (copy.py:146) (2,119 samples, 0.11%)</title><rect x="38.0163%" y="260" width="0.1059%" height="15" fill="rgb(248,9,4)" fg:x="760587" fg:w="2119"/><text x="38.2663%" y="270.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (2,055 samples, 0.10%)</title><rect x="38.4626%" y="372" width="0.1027%" height="15" fill="rgb(210,31,22)" fg:x="769516" fg:w="2055"/><text x="38.7126%" y="382.50"></text></g><g><title>clone (torch/storage.py:128) (2,031 samples, 0.10%)</title><rect x="38.4638%" y="388" width="0.1015%" height="15" fill="rgb(239,54,39)" fg:x="769540" fg:w="2031"/><text x="38.7138%" y="398.50"></text></g><g><title>deepcopy (copy.py:153) (2,181 samples, 0.11%)</title><rect x="38.4586%" y="356" width="0.1090%" height="15" fill="rgb(230,99,41)" fg:x="769436" fg:w="2181"/><text x="38.7086%" y="366.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (2,714 samples, 0.14%)</title><rect x="38.4362%" y="340" width="0.1357%" height="15" fill="rgb(253,106,12)" fg:x="768988" fg:w="2714"/><text x="38.6862%" y="350.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (3,113 samples, 0.16%)</title><rect x="38.4337%" y="324" width="0.1556%" height="15" fill="rgb(213,46,41)" fg:x="768937" fg:w="3113"/><text x="38.6837%" y="334.50"></text></g><g><title>deepcopy (copy.py:153) (5,569 samples, 0.28%)</title><rect x="38.4145%" y="308" width="0.2784%" height="15" fill="rgb(215,133,35)" fg:x="768553" fg:w="5569"/><text x="38.6645%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (5,900 samples, 0.29%)</title><rect x="38.4008%" y="276" width="0.2949%" height="15" fill="rgb(213,28,5)" fg:x="768280" fg:w="5900"/><text x="38.6508%" y="286.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (5,797 samples, 0.29%)</title><rect x="38.4060%" y="292" width="0.2898%" height="15" fill="rgb(215,77,49)" fg:x="768383" fg:w="5797"/><text x="38.6560%" y="302.50"></text></g><g><title>deepcopy (copy.py:153) (11,457 samples, 0.57%)</title><rect x="38.1257%" y="260" width="0.5727%" height="15" fill="rgb(248,100,22)" fg:x="762776" fg:w="11457"/><text x="38.3757%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (14,149 samples, 0.71%)</title><rect x="37.9996%" y="228" width="0.7072%" height="15" fill="rgb(208,67,9)" fg:x="760253" fg:w="14149"/><text x="38.2496%" y="238.50"></text></g><g><title>_deepcopy_list (copy.py:205) (14,055 samples, 0.70%)</title><rect x="38.0043%" y="244" width="0.7025%" height="15" fill="rgb(219,133,21)" fg:x="760347" fg:w="14055"/><text x="38.2543%" y="254.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (2,115 samples, 0.11%)</title><rect x="38.7193%" y="244" width="0.1057%" height="15" fill="rgb(246,46,29)" fg:x="774652" fg:w="2115"/><text x="38.9693%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (3,713 samples, 0.19%)</title><rect x="38.7078%" y="228" width="0.1856%" height="15" fill="rgb(246,185,52)" fg:x="774422" fg:w="3713"/><text x="38.9578%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (18,078 samples, 0.90%)</title><rect x="37.9927%" y="196" width="0.9036%" height="15" fill="rgb(252,136,11)" fg:x="760115" fg:w="18078"/><text x="38.2427%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (18,050 samples, 0.90%)</title><rect x="37.9941%" y="212" width="0.9022%" height="15" fill="rgb(219,138,53)" fg:x="760143" fg:w="18050"/><text x="38.2441%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (18,154 samples, 0.91%)</title><rect x="37.9892%" y="164" width="0.9074%" height="15" fill="rgb(211,51,23)" fg:x="760045" fg:w="18154"/><text x="38.2392%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (18,128 samples, 0.91%)</title><rect x="37.9905%" y="180" width="0.9061%" height="15" fill="rgb(247,221,28)" fg:x="760071" fg:w="18128"/><text x="38.2405%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (18,213 samples, 0.91%)</title><rect x="37.9867%" y="148" width="0.9103%" height="15" fill="rgb(251,222,45)" fg:x="759994" fg:w="18213"/><text x="38.2367%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (18,249 samples, 0.91%)</title><rect x="37.9858%" y="132" width="0.9121%" height="15" fill="rgb(217,162,53)" fg:x="759977" fg:w="18249"/><text x="38.2358%" y="142.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:178) (18,379 samples, 0.92%)</title><rect x="37.9794%" y="116" width="0.9186%" height="15" fill="rgb(229,93,14)" fg:x="759848" fg:w="18379"/><text x="38.2294%" y="126.50"></text></g><g><title>_pop_cache (torch_geometric/data/storage.py:83) (2,683 samples, 0.13%)</title><rect x="39.2123%" y="212" width="0.1341%" height="15" fill="rgb(209,67,49)" fg:x="784515" fg:w="2683"/><text x="39.4623%" y="222.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (3,062 samples, 0.15%)</title><rect x="39.1950%" y="196" width="0.1530%" height="15" fill="rgb(213,87,29)" fg:x="784168" fg:w="3062"/><text x="39.4450%" y="206.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (5,869 samples, 0.29%)</title><rect x="39.5378%" y="196" width="0.2933%" height="15" fill="rgb(205,151,52)" fg:x="791027" fg:w="5869"/><text x="39.7878%" y="206.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (4,899 samples, 0.24%)</title><rect x="39.8311%" y="196" width="0.2449%" height="15" fill="rgb(253,215,39)" fg:x="796896" fg:w="4899"/><text x="40.0811%" y="206.50"></text></g><g><title>narrow (torch_geometric/utils/_select.py:61) (3,686 samples, 0.18%)</title><rect x="39.8918%" y="212" width="0.1842%" height="15" fill="rgb(221,220,41)" fg:x="798109" fg:w="3686"/><text x="40.1418%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:86) (3,097 samples, 0.15%)</title><rect x="40.0926%" y="196" width="0.1548%" height="15" fill="rgb(218,133,21)" fg:x="802128" fg:w="3097"/><text x="40.3426%" y="206.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:87) (3,947 samples, 0.20%)</title><rect x="40.2474%" y="196" width="0.1973%" height="15" fill="rgb(221,193,43)" fg:x="805225" fg:w="3947"/><text x="40.4974%" y="206.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (26,579 samples, 1.33%)</title><rect x="39.1202%" y="180" width="1.3285%" height="15" fill="rgb(240,128,52)" fg:x="782673" fg:w="26579"/><text x="39.3702%" y="190.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (29,840 samples, 1.49%)</title><rect x="38.9694%" y="164" width="1.4915%" height="15" fill="rgb(253,114,12)" fg:x="779656" fg:w="29840"/><text x="39.2194%" y="174.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (30,275 samples, 1.51%)</title><rect x="38.9600%" y="148" width="1.5132%" height="15" fill="rgb(215,223,47)" fg:x="779468" fg:w="30275"/><text x="39.2100%" y="158.50"></text></g><g><title>pyg_to_mol (sampling.py:239) (12,961 samples, 0.65%)</title><rect x="40.5771%" y="148" width="0.6478%" height="15" fill="rgb(248,225,23)" fg:x="811820" fg:w="12961"/><text x="40.8271%" y="158.50"></text></g><g><title>pyg_to_mol (sampling.py:254) (3,591 samples, 0.18%)</title><rect x="41.2490%" y="148" width="0.1795%" height="15" fill="rgb(250,108,0)" fg:x="825262" fg:w="3591"/><text x="41.4990%" y="158.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (2,545 samples, 0.13%)</title><rect x="41.8246%" y="276" width="0.1272%" height="15" fill="rgb(228,208,7)" fg:x="836778" fg:w="2545"/><text x="42.0746%" y="286.50"></text></g><g><title>clone (torch/storage.py:128) (2,516 samples, 0.13%)</title><rect x="41.8260%" y="292" width="0.1258%" height="15" fill="rgb(244,45,10)" fg:x="836807" fg:w="2516"/><text x="42.0760%" y="302.50"></text></g><g><title>deepcopy (copy.py:153) (2,705 samples, 0.14%)</title><rect x="41.8189%" y="260" width="0.1352%" height="15" fill="rgb(207,125,25)" fg:x="836664" fg:w="2705"/><text x="42.0689%" y="270.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (3,525 samples, 0.18%)</title><rect x="41.7899%" y="244" width="0.1762%" height="15" fill="rgb(210,195,18)" fg:x="836084" fg:w="3525"/><text x="42.0399%" y="254.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (4,145 samples, 0.21%)</title><rect x="41.7859%" y="228" width="0.2072%" height="15" fill="rgb(249,80,12)" fg:x="836004" fg:w="4145"/><text x="42.0359%" y="238.50"></text></g><g><title>deepcopy (copy.py:153) (7,918 samples, 0.40%)</title><rect x="41.7519%" y="212" width="0.3958%" height="15" fill="rgb(221,65,9)" fg:x="835324" fg:w="7918"/><text x="42.0019%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (8,273 samples, 0.41%)</title><rect x="41.7385%" y="196" width="0.4135%" height="15" fill="rgb(235,49,36)" fg:x="835057" fg:w="8273"/><text x="41.9885%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (8,407 samples, 0.42%)</title><rect x="41.7319%" y="180" width="0.4202%" height="15" fill="rgb(225,32,20)" fg:x="834925" fg:w="8407"/><text x="41.9819%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (14,156 samples, 0.71%)</title><rect x="41.4473%" y="164" width="0.7076%" height="15" fill="rgb(215,141,46)" fg:x="829231" fg:w="14156"/><text x="41.6973%" y="174.50"></text></g><g><title>gfn_sgd (gfn_train.py:586) (350,286 samples, 17.51%)</title><rect x="24.6489%" y="100" width="17.5083%" height="15" fill="rgb(250,160,47)" fg:x="493148" fg:w="350286"/><text x="24.8989%" y="110.50">gfn_sgd (gfn_train.py:586)</text></g><g><title>sample_forward_trajs (gfn_train.py:179) (65,207 samples, 3.26%)</title><rect x="38.8980%" y="116" width="3.2592%" height="15" fill="rgb(216,222,40)" fg:x="778227" fg:w="65207"/><text x="39.1480%" y="126.50">sam..</text></g><g><title>&lt;listcomp&gt; (gfn_train.py:179) (65,170 samples, 3.26%)</title><rect x="38.8999%" y="132" width="3.2574%" height="15" fill="rgb(234,217,39)" fg:x="778264" fg:w="65170"/><text x="39.1499%" y="142.50">&lt;li..</text></g><g><title>pyg_to_mol (sampling.py:256) (14,572 samples, 0.73%)</title><rect x="41.4289%" y="148" width="0.7284%" height="15" fill="rgb(207,178,40)" fg:x="828862" fg:w="14572"/><text x="41.6789%" y="158.50"></text></g><g><title>sample (gfn_train.py:525) (4,143 samples, 0.21%)</title><rect x="42.1574%" y="116" width="0.2071%" height="15" fill="rgb(221,136,13)" fg:x="843437" fg:w="4143"/><text x="42.4074%" y="126.50"></text></g><g><title>_collate (torch_geometric/data/collate.py:169) (2,494 samples, 0.12%)</title><rect x="42.5064%" y="180" width="0.1247%" height="15" fill="rgb(249,199,10)" fg:x="850420" fg:w="2494"/><text x="42.7564%" y="190.50"></text></g><g><title>_collate (torch_geometric/data/collate.py:204) (2,108 samples, 0.11%)</title><rect x="42.7510%" y="180" width="0.1054%" height="15" fill="rgb(249,222,13)" fg:x="855313" fg:w="2108"/><text x="43.0010%" y="190.50"></text></g><g><title>collate (torch_geometric/data/collate.py:109) (10,009 samples, 0.50%)</title><rect x="42.3698%" y="164" width="0.5003%" height="15" fill="rgb(244,185,38)" fg:x="847686" fg:w="10009"/><text x="42.6198%" y="174.50"></text></g><g><title>sample (gfn_train.py:528) (13,816 samples, 0.69%)</title><rect x="42.3654%" y="116" width="0.6906%" height="15" fill="rgb(236,202,9)" fg:x="847599" fg:w="13816"/><text x="42.6154%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:528) (13,814 samples, 0.69%)</title><rect x="42.3655%" y="132" width="0.6905%" height="15" fill="rgb(250,229,37)" fg:x="847601" fg:w="13814"/><text x="42.6155%" y="142.50"></text></g><g><title>from_data_list (torch_geometric/data/batch.py:97) (13,750 samples, 0.69%)</title><rect x="42.3687%" y="148" width="0.6873%" height="15" fill="rgb(206,174,23)" fg:x="847665" fg:w="13750"/><text x="42.6187%" y="158.50"></text></g><g><title>gfn_sgd (gfn_train.py:590) (17,995 samples, 0.90%)</title><rect x="42.1574%" y="100" width="0.8994%" height="15" fill="rgb(211,33,43)" fg:x="843437" fg:w="17995"/><text x="42.4074%" y="110.50"></text></g><g><title>_pop_cache (torch_geometric/data/storage.py:83) (2,566 samples, 0.13%)</title><rect x="43.3371%" y="228" width="0.1283%" height="15" fill="rgb(245,58,50)" fg:x="867040" fg:w="2566"/><text x="43.5871%" y="238.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (2,924 samples, 0.15%)</title><rect x="43.3199%" y="212" width="0.1461%" height="15" fill="rgb(244,68,36)" fg:x="866695" fg:w="2924"/><text x="43.5699%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:125) (3,376 samples, 0.17%)</title><rect x="43.4933%" y="212" width="0.1687%" height="15" fill="rgb(232,229,15)" fg:x="870164" fg:w="3376"/><text x="43.7433%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (3,158 samples, 0.16%)</title><rect x="43.5042%" y="228" width="0.1578%" height="15" fill="rgb(254,30,23)" fg:x="870382" fg:w="3158"/><text x="43.7542%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (5,469 samples, 0.27%)</title><rect x="43.7671%" y="212" width="0.2734%" height="15" fill="rgb(235,160,14)" fg:x="875643" fg:w="5469"/><text x="44.0171%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (4,438 samples, 0.22%)</title><rect x="44.0405%" y="212" width="0.2218%" height="15" fill="rgb(212,155,44)" fg:x="881112" fg:w="4438"/><text x="44.2905%" y="222.50"></text></g><g><title>narrow (torch_geometric/utils/_select.py:61) (3,371 samples, 0.17%)</title><rect x="44.0938%" y="228" width="0.1685%" height="15" fill="rgb(226,2,50)" fg:x="882179" fg:w="3371"/><text x="44.3438%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:86) (3,113 samples, 0.16%)</title><rect x="44.2858%" y="212" width="0.1556%" height="15" fill="rgb(234,177,6)" fg:x="886019" fg:w="3113"/><text x="44.5358%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:87) (3,343 samples, 0.17%)</title><rect x="44.4414%" y="212" width="0.1671%" height="15" fill="rgb(217,24,9)" fg:x="889132" fg:w="3343"/><text x="44.6914%" y="222.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (27,352 samples, 1.37%)</title><rect x="43.2441%" y="196" width="1.3671%" height="15" fill="rgb(220,13,46)" fg:x="865178" fg:w="27352"/><text x="43.4941%" y="206.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (30,096 samples, 1.50%)</title><rect x="43.1163%" y="180" width="1.5043%" height="15" fill="rgb(239,221,27)" fg:x="862622" fg:w="30096"/><text x="43.3663%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/batch.py:193) (30,406 samples, 1.52%)</title><rect x="43.1092%" y="164" width="1.5198%" height="15" fill="rgb(222,198,25)" fg:x="862480" fg:w="30406"/><text x="43.3592%" y="174.50"></text></g><g><title>concat (gfn_train.py:542) (30,435 samples, 1.52%)</title><rect x="43.1086%" y="116" width="1.5212%" height="15" fill="rgb(211,99,13)" fg:x="862467" fg:w="30435"/><text x="43.3586%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:542) (30,435 samples, 1.52%)</title><rect x="43.1086%" y="132" width="1.5212%" height="15" fill="rgb(232,111,31)" fg:x="862467" fg:w="30435"/><text x="43.3586%" y="142.50"></text></g><g><title>to_data_list (torch_geometric/data/batch.py:193) (30,430 samples, 1.52%)</title><rect x="43.1088%" y="148" width="1.5210%" height="15" fill="rgb(245,82,37)" fg:x="862472" fg:w="30430"/><text x="43.3588%" y="158.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (2,694 samples, 0.13%)</title><rect x="44.8986%" y="212" width="0.1347%" height="15" fill="rgb(227,149,46)" fg:x="898281" fg:w="2694"/><text x="45.1486%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (2,194 samples, 0.11%)</title><rect x="45.0333%" y="212" width="0.1097%" height="15" fill="rgb(218,36,50)" fg:x="900975" fg:w="2194"/><text x="45.2833%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:79) (2,053 samples, 0.10%)</title><rect x="45.1434%" y="212" width="0.1026%" height="15" fill="rgb(226,80,48)" fg:x="903178" fg:w="2053"/><text x="45.3934%" y="222.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (14,462 samples, 0.72%)</title><rect x="44.6858%" y="196" width="0.7229%" height="15" fill="rgb(238,224,15)" fg:x="894022" fg:w="14462"/><text x="44.9358%" y="206.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (15,557 samples, 0.78%)</title><rect x="44.6356%" y="180" width="0.7776%" height="15" fill="rgb(241,136,10)" fg:x="893019" fg:w="15557"/><text x="44.8856%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/batch.py:193) (15,729 samples, 0.79%)</title><rect x="44.6316%" y="164" width="0.7862%" height="15" fill="rgb(208,32,45)" fg:x="892938" fg:w="15729"/><text x="44.8816%" y="174.50"></text></g><g><title>concat (gfn_train.py:544) (15,768 samples, 0.79%)</title><rect x="44.6303%" y="116" width="0.7881%" height="15" fill="rgb(207,135,9)" fg:x="892913" fg:w="15768"/><text x="44.8803%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:544) (15,768 samples, 0.79%)</title><rect x="44.6303%" y="132" width="0.7881%" height="15" fill="rgb(206,86,44)" fg:x="892913" fg:w="15768"/><text x="44.8803%" y="142.50"></text></g><g><title>to_data_list (torch_geometric/data/batch.py:193) (15,756 samples, 0.79%)</title><rect x="44.6309%" y="148" width="0.7875%" height="15" fill="rgb(245,177,15)" fg:x="892925" fg:w="15756"/><text x="44.8809%" y="158.50"></text></g><g><title>_collate (torch_geometric/data/collate.py:169) (3,440 samples, 0.17%)</title><rect x="45.5643%" y="180" width="0.1719%" height="15" fill="rgb(206,64,50)" fg:x="911599" fg:w="3440"/><text x="45.8143%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/collate.py:172) (5,480 samples, 0.27%)</title><rect x="45.7529%" y="196" width="0.2739%" height="15" fill="rgb(234,36,40)" fg:x="915371" fg:w="5480"/><text x="46.0029%" y="206.50"></text></g><g><title>_collate (torch_geometric/data/collate.py:171) (5,557 samples, 0.28%)</title><rect x="45.7491%" y="180" width="0.2778%" height="15" fill="rgb(213,64,8)" fg:x="915295" fg:w="5557"/><text x="45.9991%" y="190.50"></text></g><g><title>collate (torch_geometric/data/collate.py:109) (14,062 samples, 0.70%)</title><rect x="45.4240%" y="164" width="0.7029%" height="15" fill="rgb(210,75,36)" fg:x="908791" fg:w="14062"/><text x="45.6740%" y="174.50"></text></g><g><title>gfn_sgd (gfn_train.py:594) (67,056 samples, 3.35%)</title><rect x="43.0568%" y="100" width="3.3517%" height="15" fill="rgb(229,88,21)" fg:x="861432" fg:w="67056"/><text x="43.3068%" y="110.50">gfn..</text></g><g><title>concat (gfn_train.py:548) (19,797 samples, 0.99%)</title><rect x="45.4190%" y="116" width="0.9895%" height="15" fill="rgb(252,204,47)" fg:x="908691" fg:w="19797"/><text x="45.6690%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:548) (19,795 samples, 0.99%)</title><rect x="45.4191%" y="132" width="0.9894%" height="15" fill="rgb(208,77,27)" fg:x="908693" fg:w="19795"/><text x="45.6691%" y="142.50"></text></g><g><title>from_data_list (torch_geometric/data/batch.py:97) (19,724 samples, 0.99%)</title><rect x="45.4226%" y="148" width="0.9859%" height="15" fill="rgb(221,76,26)" fg:x="908764" fg:w="19724"/><text x="45.6726%" y="158.50"></text></g><g><title>_deepcopy_list (copy.py:205) (2,818 samples, 0.14%)</title><rect x="46.6837%" y="292" width="0.1409%" height="15" fill="rgb(225,139,18)" fg:x="933995" fg:w="2818"/><text x="46.9337%" y="302.50"></text></g><g><title>deepcopy (copy.py:146) (3,331 samples, 0.17%)</title><rect x="46.6582%" y="276" width="0.1665%" height="15" fill="rgb(230,137,11)" fg:x="933484" fg:w="3331"/><text x="46.9082%" y="286.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (3,061 samples, 0.15%)</title><rect x="47.4984%" y="388" width="0.1530%" height="15" fill="rgb(212,28,1)" fg:x="950294" fg:w="3061"/><text x="47.7484%" y="398.50"></text></g><g><title>clone (torch/storage.py:128) (3,020 samples, 0.15%)</title><rect x="47.5005%" y="404" width="0.1509%" height="15" fill="rgb(248,164,17)" fg:x="950335" fg:w="3020"/><text x="47.7505%" y="414.50"></text></g><g><title>deepcopy (copy.py:153) (3,239 samples, 0.16%)</title><rect x="47.4926%" y="372" width="0.1619%" height="15" fill="rgb(222,171,42)" fg:x="950178" fg:w="3239"/><text x="47.7426%" y="382.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (3,960 samples, 0.20%)</title><rect x="47.4620%" y="356" width="0.1979%" height="15" fill="rgb(243,84,45)" fg:x="949565" fg:w="3960"/><text x="47.7120%" y="366.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (4,580 samples, 0.23%)</title><rect x="47.4573%" y="340" width="0.2289%" height="15" fill="rgb(252,49,23)" fg:x="949471" fg:w="4580"/><text x="47.7073%" y="350.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:182) (2,600 samples, 0.13%)</title><rect x="47.7251%" y="340" width="0.1300%" height="15" fill="rgb(215,19,7)" fg:x="954829" fg:w="2600"/><text x="47.9751%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (10,813 samples, 0.54%)</title><rect x="47.4311%" y="324" width="0.5405%" height="15" fill="rgb(238,81,41)" fg:x="948948" fg:w="10813"/><text x="47.6811%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (11,373 samples, 0.57%)</title><rect x="47.4065%" y="292" width="0.5685%" height="15" fill="rgb(210,199,37)" fg:x="948455" fg:w="11373"/><text x="47.6565%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (11,175 samples, 0.56%)</title><rect x="47.4164%" y="308" width="0.5586%" height="15" fill="rgb(244,192,49)" fg:x="948653" fg:w="11175"/><text x="47.6664%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (22,895 samples, 1.14%)</title><rect x="46.8347%" y="276" width="1.1444%" height="15" fill="rgb(226,211,11)" fg:x="937016" fg:w="22895"/><text x="47.0847%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (27,159 samples, 1.36%)</title><rect x="46.6348%" y="244" width="1.3575%" height="15" fill="rgb(236,162,54)" fg:x="933015" fg:w="27159"/><text x="46.8848%" y="254.50"></text></g><g><title>_deepcopy_list (copy.py:205) (27,006 samples, 1.35%)</title><rect x="46.6424%" y="260" width="1.3498%" height="15" fill="rgb(220,229,9)" fg:x="933168" fg:w="27006"/><text x="46.8924%" y="270.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (2,085 samples, 0.10%)</title><rect x="48.0121%" y="276" width="0.1042%" height="15" fill="rgb(250,87,22)" fg:x="960571" fg:w="2085"/><text x="48.2621%" y="286.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (2,453 samples, 0.12%)</title><rect x="48.0090%" y="260" width="0.1226%" height="15" fill="rgb(239,43,17)" fg:x="960509" fg:w="2453"/><text x="48.2590%" y="270.50"></text></g><g><title>deepcopy (copy.py:153) (4,360 samples, 0.22%)</title><rect x="47.9927%" y="244" width="0.2179%" height="15" fill="rgb(231,177,25)" fg:x="960184" fg:w="4360"/><text x="48.2427%" y="254.50"></text></g><g><title>deepcopy (copy.py:146) (31,754 samples, 1.59%)</title><rect x="46.6262%" y="212" width="1.5872%" height="15" fill="rgb(219,179,1)" fg:x="932843" fg:w="31754"/><text x="46.8762%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (31,705 samples, 1.58%)</title><rect x="46.6286%" y="228" width="1.5847%" height="15" fill="rgb(238,219,53)" fg:x="932892" fg:w="31705"/><text x="46.8786%" y="238.50"></text></g><g><title>deepcopy (copy.py:153) (31,855 samples, 1.59%)</title><rect x="46.6212%" y="180" width="1.5922%" height="15" fill="rgb(232,167,36)" fg:x="932744" fg:w="31855"/><text x="46.8712%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (31,822 samples, 1.59%)</title><rect x="46.6229%" y="196" width="1.5906%" height="15" fill="rgb(244,19,51)" fg:x="932777" fg:w="31822"/><text x="46.8729%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (31,921 samples, 1.60%)</title><rect x="46.6182%" y="164" width="1.5955%" height="15" fill="rgb(224,6,22)" fg:x="932683" fg:w="31921"/><text x="46.8682%" y="174.50"></text></g><g><title>deepcopy (copy.py:153) (31,973 samples, 1.60%)</title><rect x="46.6167%" y="148" width="1.5981%" height="15" fill="rgb(224,145,5)" fg:x="932654" fg:w="31973"/><text x="46.8667%" y="158.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (2,738 samples, 0.14%)</title><rect x="48.3117%" y="228" width="0.1369%" height="15" fill="rgb(234,130,49)" fg:x="966565" fg:w="2738"/><text x="48.5617%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (2,692 samples, 0.13%)</title><rect x="48.3140%" y="244" width="0.1346%" height="15" fill="rgb(254,6,2)" fg:x="966611" fg:w="2692"/><text x="48.5640%" y="254.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (5,142 samples, 0.26%)</title><rect x="48.2149%" y="148" width="0.2570%" height="15" fill="rgb(208,96,46)" fg:x="964628" fg:w="5142"/><text x="48.4649%" y="158.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (5,116 samples, 0.26%)</title><rect x="48.2162%" y="164" width="0.2557%" height="15" fill="rgb(239,3,39)" fg:x="964654" fg:w="5116"/><text x="48.4662%" y="174.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (4,938 samples, 0.25%)</title><rect x="48.2251%" y="180" width="0.2468%" height="15" fill="rgb(233,210,1)" fg:x="964832" fg:w="4938"/><text x="48.4751%" y="190.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (4,020 samples, 0.20%)</title><rect x="48.2709%" y="196" width="0.2009%" height="15" fill="rgb(244,137,37)" fg:x="965750" fg:w="4020"/><text x="48.5209%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (4,009 samples, 0.20%)</title><rect x="48.2715%" y="212" width="0.2004%" height="15" fill="rgb(240,136,2)" fg:x="965761" fg:w="4009"/><text x="48.5215%" y="222.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:241) (40,568 samples, 2.03%)</title><rect x="46.4444%" y="132" width="2.0277%" height="15" fill="rgb(239,18,37)" fg:x="929207" fg:w="40568"/><text x="46.6944%" y="142.50">g..</text></g><g><title>radius_graph (torch_cluster/radius.py:135) (2,867 samples, 0.14%)</title><rect x="48.5370%" y="212" width="0.1433%" height="15" fill="rgb(218,185,22)" fg:x="971072" fg:w="2867"/><text x="48.7870%" y="222.50"></text></g><g><title>build_conv_graph (score_model.py:181) (4,219 samples, 0.21%)</title><rect x="48.5313%" y="196" width="0.2109%" height="15" fill="rgb(225,218,4)" fg:x="970958" fg:w="4219"/><text x="48.7813%" y="206.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (6,459 samples, 0.32%)</title><rect x="49.0146%" y="260" width="0.3228%" height="15" fill="rgb(230,182,32)" fg:x="980628" fg:w="6459"/><text x="49.2646%" y="270.50"></text></g><g><title>build_conv_graph (score_model.py:201) (8,046 samples, 0.40%)</title><rect x="48.9357%" y="196" width="0.4022%" height="15" fill="rgb(242,56,43)" fg:x="979050" fg:w="8046"/><text x="49.1857%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (7,126 samples, 0.36%)</title><rect x="48.9817%" y="212" width="0.3562%" height="15" fill="rgb(233,99,24)" fg:x="979970" fg:w="7126"/><text x="49.2317%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,114 samples, 0.36%)</title><rect x="48.9823%" y="228" width="0.3556%" height="15" fill="rgb(234,209,42)" fg:x="979982" fg:w="7114"/><text x="49.2323%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (7,092 samples, 0.35%)</title><rect x="48.9834%" y="244" width="0.3545%" height="15" fill="rgb(227,7,12)" fg:x="980004" fg:w="7092"/><text x="49.2334%" y="254.50"></text></g><g><title>forward (score_model.py:131) (16,259 samples, 0.81%)</title><rect x="48.5254%" y="180" width="0.8127%" height="15" fill="rgb(245,203,43)" fg:x="970840" fg:w="16259"/><text x="48.7754%" y="190.50"></text></g><g><title>forward (score_model.py:135) (6,889 samples, 0.34%)</title><rect x="49.3994%" y="180" width="0.3443%" height="15" fill="rgb(238,205,33)" fg:x="988326" fg:w="6889"/><text x="49.6494%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,867 samples, 0.34%)</title><rect x="49.4005%" y="196" width="0.3432%" height="15" fill="rgb(231,56,7)" fg:x="988348" fg:w="6867"/><text x="49.6505%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,857 samples, 0.34%)</title><rect x="49.4010%" y="212" width="0.3427%" height="15" fill="rgb(244,186,29)" fg:x="988358" fg:w="6857"/><text x="49.6510%" y="222.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (6,843 samples, 0.34%)</title><rect x="49.4017%" y="228" width="0.3420%" height="15" fill="rgb(234,111,31)" fg:x="988372" fg:w="6843"/><text x="49.6517%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,804 samples, 0.34%)</title><rect x="49.4036%" y="244" width="0.3401%" height="15" fill="rgb(241,149,10)" fg:x="988411" fg:w="6804"/><text x="49.6536%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,760 samples, 0.34%)</title><rect x="49.4058%" y="260" width="0.3379%" height="15" fill="rgb(249,206,44)" fg:x="988455" fg:w="6760"/><text x="49.6558%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (6,612 samples, 0.33%)</title><rect x="49.4132%" y="276" width="0.3305%" height="15" fill="rgb(251,153,30)" fg:x="988603" fg:w="6612"/><text x="49.6632%" y="286.50"></text></g><g><title>forward (score_model.py:138) (2,772 samples, 0.14%)</title><rect x="49.7467%" y="180" width="0.1386%" height="15" fill="rgb(239,152,38)" fg:x="995275" fg:w="2772"/><text x="49.9967%" y="190.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (98,294 samples, 4.91%)</title><rect x="50.0007%" y="276" width="4.9130%" height="15" fill="rgb(249,139,47)" fg:x="1000358" fg:w="98294"/><text x="50.2507%" y="286.50">forwar..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (98,106 samples, 4.90%)</title><rect x="50.0101%" y="292" width="4.9036%" height="15" fill="rgb(244,64,35)" fg:x="1000546" fg:w="98106"/><text x="50.2601%" y="302.50">_wrapp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (97,991 samples, 4.90%)</title><rect x="50.0159%" y="308" width="4.8979%" height="15" fill="rgb(216,46,15)" fg:x="1000661" fg:w="97991"/><text x="50.2659%" y="318.50">_call_..</text></g><g><title>relu (torch/nn/functional.py:1500) (5,133 samples, 0.26%)</title><rect x="54.9472%" y="340" width="0.2566%" height="15" fill="rgb(250,74,19)" fg:x="1099321" fg:w="5133"/><text x="55.1972%" y="350.50"></text></g><g><title>forward (torch/nn/modules/activation.py:103) (5,210 samples, 0.26%)</title><rect x="54.9435%" y="324" width="0.2604%" height="15" fill="rgb(249,42,33)" fg:x="1099246" fg:w="5210"/><text x="55.1935%" y="334.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (42,940 samples, 2.15%)</title><rect x="54.9187%" y="276" width="2.1463%" height="15" fill="rgb(242,149,17)" fg:x="1098750" fg:w="42940"/><text x="55.1687%" y="286.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (42,713 samples, 2.13%)</title><rect x="54.9300%" y="292" width="2.1349%" height="15" fill="rgb(244,29,21)" fg:x="1098977" fg:w="42713"/><text x="55.1800%" y="302.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (42,498 samples, 2.12%)</title><rect x="54.9408%" y="308" width="2.1242%" height="15" fill="rgb(220,130,37)" fg:x="1099192" fg:w="42498"/><text x="55.1908%" y="318.50">_..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (37,234 samples, 1.86%)</title><rect x="55.2039%" y="324" width="1.8611%" height="15" fill="rgb(211,67,2)" fg:x="1104456" fg:w="37234"/><text x="55.4539%" y="334.50">f..</text></g><g><title>forward (score_model.py:34) (142,729 samples, 7.13%)</title><rect x="49.9310%" y="228" width="7.1340%" height="15" fill="rgb(235,68,52)" fg:x="998962" fg:w="142729"/><text x="50.1810%" y="238.50">forward (s..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (141,925 samples, 7.09%)</title><rect x="49.9712%" y="244" width="7.0938%" height="15" fill="rgb(246,142,3)" fg:x="999766" fg:w="141925"/><text x="50.2212%" y="254.50">_wrapped_c..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (141,698 samples, 7.08%)</title><rect x="49.9825%" y="260" width="7.0825%" height="15" fill="rgb(241,25,7)" fg:x="999993" fg:w="141698"/><text x="50.2325%" y="270.50">_call_impl..</text></g><g><title>scatter_mean (torch_scatter/scatter.py:41) (2,799 samples, 0.14%)</title><rect x="57.0811%" y="260" width="0.1399%" height="15" fill="rgb(242,119,39)" fg:x="1142014" fg:w="2799"/><text x="57.3311%" y="270.50"></text></g><g><title>forward (score_model.py:37) (7,002 samples, 0.35%)</title><rect x="57.0710%" y="228" width="0.3500%" height="15" fill="rgb(241,98,45)" fg:x="1141811" fg:w="7002"/><text x="57.3210%" y="238.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (6,910 samples, 0.35%)</title><rect x="57.0756%" y="244" width="0.3454%" height="15" fill="rgb(254,28,30)" fg:x="1141903" fg:w="6910"/><text x="57.3256%" y="254.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:129) (3,411 samples, 0.17%)</title><rect x="57.9017%" y="276" width="0.1705%" height="15" fill="rgb(241,142,54)" fg:x="1158431" fg:w="3411"/><text x="58.1517%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (3,807 samples, 0.19%)</title><rect x="58.2074%" y="276" width="0.1903%" height="15" fill="rgb(222,85,15)" fg:x="1164547" fg:w="3807"/><text x="58.4574%" y="286.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (3,207 samples, 0.16%)</title><rect x="58.2374%" y="292" width="0.1603%" height="15" fill="rgb(210,85,47)" fg:x="1165147" fg:w="3207"/><text x="58.4874%" y="302.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:147) (2,362 samples, 0.12%)</title><rect x="58.3981%" y="276" width="0.1181%" height="15" fill="rgb(224,206,25)" fg:x="1168362" fg:w="2362"/><text x="58.6481%" y="286.50"></text></g><g><title>forward (score_model.py:139) (180,185 samples, 9.01%)</title><rect x="49.8852%" y="180" width="9.0062%" height="15" fill="rgb(243,201,19)" fg:x="998047" fg:w="180185"/><text x="50.1352%" y="190.50">forward (scor..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (180,006 samples, 9.00%)</title><rect x="49.8942%" y="196" width="8.9972%" height="15" fill="rgb(236,59,4)" fg:x="998226" fg:w="180006"/><text x="50.1442%" y="206.50">_wrapped_call..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (179,834 samples, 8.99%)</title><rect x="49.9028%" y="212" width="8.9886%" height="15" fill="rgb(254,179,45)" fg:x="998398" fg:w="179834"/><text x="50.1528%" y="222.50">_call_impl (t..</text></g><g><title>forward (score_model.py:43) (26,474 samples, 1.32%)</title><rect x="57.5682%" y="228" width="1.3232%" height="15" fill="rgb(226,14,10)" fg:x="1151758" fg:w="26474"/><text x="57.8182%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (26,371 samples, 1.32%)</title><rect x="57.5733%" y="244" width="1.3181%" height="15" fill="rgb(244,27,41)" fg:x="1151861" fg:w="26371"/><text x="57.8233%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (26,174 samples, 1.31%)</title><rect x="57.5831%" y="260" width="1.3083%" height="15" fill="rgb(235,35,32)" fg:x="1152058" fg:w="26174"/><text x="57.8331%" y="270.50"></text></g><g><title>build_bond_conv_graph (score_model.py:165) (11,065 samples, 0.55%)</title><rect x="58.8964%" y="196" width="0.5531%" height="15" fill="rgb(218,68,31)" fg:x="1178333" fg:w="11065"/><text x="59.1464%" y="206.50"></text></g><g><title>build_bond_conv_graph (score_model.py:168) (2,960 samples, 0.15%)</title><rect x="59.4825%" y="196" width="0.1479%" height="15" fill="rgb(207,120,37)" fg:x="1190058" fg:w="2960"/><text x="59.7325%" y="206.50"></text></g><g><title>build_bond_conv_graph (score_model.py:173) (3,353 samples, 0.17%)</title><rect x="59.7261%" y="196" width="0.1676%" height="15" fill="rgb(227,98,0)" fg:x="1194931" fg:w="3353"/><text x="59.9761%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (3,325 samples, 0.17%)</title><rect x="59.7275%" y="212" width="0.1662%" height="15" fill="rgb(207,7,3)" fg:x="1194959" fg:w="3325"/><text x="59.9775%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (3,300 samples, 0.16%)</title><rect x="59.7287%" y="228" width="0.1649%" height="15" fill="rgb(206,98,19)" fg:x="1194984" fg:w="3300"/><text x="59.9787%" y="238.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (3,266 samples, 0.16%)</title><rect x="59.7304%" y="244" width="0.1632%" height="15" fill="rgb(217,5,26)" fg:x="1195018" fg:w="3266"/><text x="59.9804%" y="254.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (3,219 samples, 0.16%)</title><rect x="59.7328%" y="260" width="0.1609%" height="15" fill="rgb(235,190,38)" fg:x="1195065" fg:w="3219"/><text x="59.9828%" y="270.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (3,178 samples, 0.16%)</title><rect x="59.7348%" y="276" width="0.1588%" height="15" fill="rgb(247,86,24)" fg:x="1195106" fg:w="3178"/><text x="59.9848%" y="286.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (2,992 samples, 0.15%)</title><rect x="59.7441%" y="292" width="0.1495%" height="15" fill="rgb(205,101,16)" fg:x="1195292" fg:w="2992"/><text x="59.9941%" y="302.50"></text></g><g><title>build_bond_conv_graph (score_model.py:175) (3,234 samples, 0.16%)</title><rect x="59.8937%" y="196" width="0.1616%" height="15" fill="rgb(246,168,33)" fg:x="1198284" fg:w="3234"/><text x="60.1437%" y="206.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (2,306 samples, 0.12%)</title><rect x="59.9400%" y="212" width="0.1153%" height="15" fill="rgb(231,114,1)" fg:x="1199212" fg:w="2306"/><text x="60.1900%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,302 samples, 0.12%)</title><rect x="59.9402%" y="228" width="0.1151%" height="15" fill="rgb(207,184,53)" fg:x="1199216" fg:w="2302"/><text x="60.1902%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,281 samples, 0.11%)</title><rect x="59.9413%" y="244" width="0.1140%" height="15" fill="rgb(224,95,51)" fg:x="1199237" fg:w="2281"/><text x="60.1913%" y="254.50"></text></g><g><title>forward (score_model.py:141) (23,288 samples, 1.16%)</title><rect x="58.8914%" y="180" width="1.1640%" height="15" fill="rgb(212,188,45)" fg:x="1178232" fg:w="23288"/><text x="59.1414%" y="190.50"></text></g><g><title>forward (score_model.py:146) (2,517 samples, 0.13%)</title><rect x="60.1002%" y="180" width="0.1258%" height="15" fill="rgb(223,154,38)" fg:x="1202417" fg:w="2517"/><text x="60.3502%" y="190.50"></text></g><g><title>forward (score_model.py:147) (11,746 samples, 0.59%)</title><rect x="60.2260%" y="180" width="0.5871%" height="15" fill="rgb(251,22,52)" fg:x="1204934" fg:w="11746"/><text x="60.4760%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (11,505 samples, 0.58%)</title><rect x="60.2381%" y="196" width="0.5751%" height="15" fill="rgb(229,209,22)" fg:x="1205175" fg:w="11505"/><text x="60.4881%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,475 samples, 0.57%)</title><rect x="60.2396%" y="212" width="0.5736%" height="15" fill="rgb(234,138,34)" fg:x="1205205" fg:w="11475"/><text x="60.4896%" y="222.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (11,396 samples, 0.57%)</title><rect x="60.2435%" y="228" width="0.5696%" height="15" fill="rgb(212,95,11)" fg:x="1205284" fg:w="11396"/><text x="60.4935%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (11,367 samples, 0.57%)</title><rect x="60.2450%" y="244" width="0.5682%" height="15" fill="rgb(240,179,47)" fg:x="1205313" fg:w="11367"/><text x="60.4950%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,339 samples, 0.57%)</title><rect x="60.2464%" y="260" width="0.5668%" height="15" fill="rgb(240,163,11)" fg:x="1205341" fg:w="11339"/><text x="60.4964%" y="270.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (6,321 samples, 0.32%)</title><rect x="60.9301%" y="276" width="0.3159%" height="15" fill="rgb(236,37,12)" fg:x="1219020" fg:w="6321"/><text x="61.1801%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,289 samples, 0.31%)</title><rect x="60.9317%" y="292" width="0.3143%" height="15" fill="rgb(232,164,16)" fg:x="1219052" fg:w="6289"/><text x="61.1817%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,263 samples, 0.31%)</title><rect x="60.9330%" y="308" width="0.3130%" height="15" fill="rgb(244,205,15)" fg:x="1219078" fg:w="6263"/><text x="61.1830%" y="318.50"></text></g><g><title>forward (score_model.py:34) (12,200 samples, 0.61%)</title><rect x="60.8712%" y="228" width="0.6098%" height="15" fill="rgb(223,117,47)" fg:x="1217842" fg:w="12200"/><text x="61.1212%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (11,142 samples, 0.56%)</title><rect x="60.9241%" y="244" width="0.5569%" height="15" fill="rgb(244,107,35)" fg:x="1218900" fg:w="11142"/><text x="61.1741%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,106 samples, 0.56%)</title><rect x="60.9259%" y="260" width="0.5551%" height="15" fill="rgb(205,140,8)" fg:x="1218936" fg:w="11106"/><text x="61.1759%" y="270.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (4,672 samples, 0.23%)</title><rect x="61.2475%" y="276" width="0.2335%" height="15" fill="rgb(228,84,46)" fg:x="1225370" fg:w="4672"/><text x="61.4975%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (4,614 samples, 0.23%)</title><rect x="61.2504%" y="292" width="0.2306%" height="15" fill="rgb(254,188,9)" fg:x="1225428" fg:w="4614"/><text x="61.5004%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (4,567 samples, 0.23%)</title><rect x="61.2527%" y="308" width="0.2283%" height="15" fill="rgb(206,112,54)" fg:x="1225475" fg:w="4567"/><text x="61.5027%" y="318.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (4,329 samples, 0.22%)</title><rect x="61.2646%" y="324" width="0.2164%" height="15" fill="rgb(216,84,49)" fg:x="1225713" fg:w="4329"/><text x="61.5146%" y="334.50"></text></g><g><title>forward (score_model.py:150) (17,283 samples, 0.86%)</title><rect x="60.8434%" y="180" width="0.8639%" height="15" fill="rgb(214,194,35)" fg:x="1217285" fg:w="17283"/><text x="61.0934%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (16,905 samples, 0.84%)</title><rect x="60.8623%" y="196" width="0.8450%" height="15" fill="rgb(249,28,3)" fg:x="1217663" fg:w="16905"/><text x="61.1123%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (16,848 samples, 0.84%)</title><rect x="60.8651%" y="212" width="0.8421%" height="15" fill="rgb(222,56,52)" fg:x="1217720" fg:w="16848"/><text x="61.1151%" y="222.50"></text></g><g><title>forward (score_model.py:43) (2,510 samples, 0.13%)</title><rect x="61.5818%" y="228" width="0.1255%" height="15" fill="rgb(245,217,50)" fg:x="1232058" fg:w="2510"/><text x="61.8318%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (2,485 samples, 0.12%)</title><rect x="61.5830%" y="244" width="0.1242%" height="15" fill="rgb(213,201,24)" fg:x="1232083" fg:w="2485"/><text x="61.8330%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (2,436 samples, 0.12%)</title><rect x="61.5855%" y="260" width="0.1218%" height="15" fill="rgb(248,116,28)" fg:x="1232132" fg:w="2436"/><text x="61.8355%" y="270.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:244) (267,457 samples, 13.37%)</title><rect x="48.5130%" y="132" width="13.3683%" height="15" fill="rgb(219,72,43)" fg:x="970592" fg:w="267457"/><text x="48.7630%" y="142.50">get_log_p_f_and_log_..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (267,421 samples, 13.37%)</title><rect x="48.5148%" y="148" width="13.3665%" height="15" fill="rgb(209,138,14)" fg:x="970628" fg:w="267421"/><text x="48.7648%" y="158.50">_wrapped_call_impl (..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (267,371 samples, 13.36%)</title><rect x="48.5173%" y="164" width="13.3640%" height="15" fill="rgb(222,18,33)" fg:x="970678" fg:w="267371"/><text x="48.7673%" y="174.50">_call_impl (torch/nn..</text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:251) (6,452 samples, 0.32%)</title><rect x="61.9227%" y="132" width="0.3225%" height="15" fill="rgb(213,199,7)" fg:x="1238879" fg:w="6452"/><text x="62.1727%" y="142.50"></text></g><g><title>p_differentiable (torus.py:15) (6,350 samples, 0.32%)</title><rect x="61.9278%" y="148" width="0.3174%" height="15" fill="rgb(250,110,10)" fg:x="1238981" fg:w="6350"/><text x="62.1778%" y="158.50"></text></g><g><title>get_log_p_f_and_log_pb (gfn_train.py:257) (4,587 samples, 0.23%)</title><rect x="62.2959%" y="132" width="0.2293%" height="15" fill="rgb(248,123,6)" fg:x="1246345" fg:w="4587"/><text x="62.5459%" y="142.50"></text></g><g><title>p_differentiable (torus.py:15) (4,537 samples, 0.23%)</title><rect x="62.2984%" y="148" width="0.2268%" height="15" fill="rgb(206,91,31)" fg:x="1246395" fg:w="4537"/><text x="62.5484%" y="158.50"></text></g><g><title>get_loss (gfn_train.py:305) (322,745 samples, 16.13%)</title><rect x="46.4103%" y="116" width="16.1317%" height="15" fill="rgb(211,154,13)" fg:x="928525" fg:w="322745"/><text x="46.6603%" y="126.50">get_loss (gfn_train.py:30..</text></g><g><title>separate (torch_geometric/data/separate.py:48) (3,173 samples, 0.16%)</title><rect x="62.5628%" y="180" width="0.1586%" height="15" fill="rgb(225,148,7)" fg:x="1251686" fg:w="3173"/><text x="62.8128%" y="190.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (3,500 samples, 0.17%)</title><rect x="62.5474%" y="164" width="0.1749%" height="15" fill="rgb(220,160,43)" fg:x="1251377" fg:w="3500"/><text x="62.7974%" y="174.50"></text></g><g><title>get_loss (gfn_train.py:311) (3,634 samples, 0.18%)</title><rect x="62.5421%" y="116" width="0.1816%" height="15" fill="rgb(213,52,39)" fg:x="1251271" fg:w="3634"/><text x="62.7921%" y="126.50"></text></g><g><title>&lt;genexpr&gt; (gfn_train.py:311) (3,634 samples, 0.18%)</title><rect x="62.5421%" y="132" width="0.1816%" height="15" fill="rgb(243,137,7)" fg:x="1251271" fg:w="3634"/><text x="62.7921%" y="142.50"></text></g><g><title>__getitem__ (torch_geometric/data/batch.py:177) (3,550 samples, 0.18%)</title><rect x="62.5463%" y="148" width="0.1774%" height="15" fill="rgb(230,79,13)" fg:x="1251355" fg:w="3550"/><text x="62.7963%" y="158.50"></text></g><g><title>get_loss (gfn_train.py:334) (212,839 samples, 10.64%)</title><rect x="62.7595%" y="116" width="10.6383%" height="15" fill="rgb(247,105,23)" fg:x="1255621" fg:w="212839"/><text x="63.0095%" y="126.50">get_loss (gfn_tr..</text></g><g><title>grad (torch/autograd/__init__.py:412) (212,723 samples, 10.63%)</title><rect x="62.7653%" y="132" width="10.6325%" height="15" fill="rgb(223,179,41)" fg:x="1255737" fg:w="212723"/><text x="63.0153%" y="142.50">grad (torch/auto..</text></g><g><title>_engine_run_backward (torch/autograd/graph.py:744) (212,717 samples, 10.63%)</title><rect x="62.7656%" y="148" width="10.6322%" height="15" fill="rgb(218,9,34)" fg:x="1255743" fg:w="212717"/><text x="63.0156%" y="158.50">_engine_run_back..</text></g><g><title>_separate (torch_geometric/data/separate.py:87) (17,350 samples, 0.87%)</title><rect x="73.5539%" y="196" width="0.8672%" height="15" fill="rgb(222,106,8)" fg:x="1471582" fg:w="17350"/><text x="73.8039%" y="206.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (20,239 samples, 1.01%)</title><rect x="73.4098%" y="180" width="1.0116%" height="15" fill="rgb(211,220,0)" fg:x="1468699" fg:w="20239"/><text x="73.6598%" y="190.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (20,477 samples, 1.02%)</title><rect x="73.3988%" y="164" width="1.0235%" height="15" fill="rgb(229,52,16)" fg:x="1468479" fg:w="20477"/><text x="73.6488%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/batch.py:193) (20,503 samples, 1.02%)</title><rect x="73.3980%" y="148" width="1.0248%" height="15" fill="rgb(212,155,18)" fg:x="1468464" fg:w="20503"/><text x="73.6480%" y="158.50"></text></g><g><title>gfn_sgd (gfn_train.py:596) (560,486 samples, 28.01%)</title><rect x="46.4085%" y="100" width="28.0147%" height="15" fill="rgb(242,21,14)" fg:x="928488" fg:w="560486"/><text x="46.6585%" y="110.50">gfn_sgd (gfn_train.py:596)</text></g><g><title>get_loss (gfn_train.py:340) (20,514 samples, 1.03%)</title><rect x="73.3978%" y="116" width="1.0253%" height="15" fill="rgb(222,19,48)" fg:x="1468460" fg:w="20514"/><text x="73.6478%" y="126.50"></text></g><g><title>to_data_list (torch_geometric/data/batch.py:193) (20,512 samples, 1.03%)</title><rect x="73.3979%" y="132" width="1.0252%" height="15" fill="rgb(232,45,27)" fg:x="1468462" fg:w="20512"/><text x="73.6479%" y="142.50"></text></g><g><title>_pop_cache (torch_geometric/data/storage.py:83) (2,575 samples, 0.13%)</title><rect x="74.7300%" y="228" width="0.1287%" height="15" fill="rgb(249,103,42)" fg:x="1495113" fg:w="2575"/><text x="74.9800%" y="238.50"></text></g><g><title>__setitem__ (torch_geometric/data/storage.py:121) (2,925 samples, 0.15%)</title><rect x="74.7136%" y="212" width="0.1462%" height="15" fill="rgb(246,81,33)" fg:x="1494784" fg:w="2925"/><text x="74.9636%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:125) (3,778 samples, 0.19%)</title><rect x="74.8880%" y="212" width="0.1888%" height="15" fill="rgb(252,33,42)" fg:x="1498273" fg:w="3778"/><text x="75.1380%" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:119) (3,564 samples, 0.18%)</title><rect x="74.8987%" y="228" width="0.1781%" height="15" fill="rgb(209,212,41)" fg:x="1498487" fg:w="3564"/><text x="75.1487%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:75) (5,474 samples, 0.27%)</title><rect x="75.1854%" y="212" width="0.2736%" height="15" fill="rgb(207,154,6)" fg:x="1504223" fg:w="5474"/><text x="75.4354%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:76) (4,443 samples, 0.22%)</title><rect x="75.4590%" y="212" width="0.2221%" height="15" fill="rgb(223,64,47)" fg:x="1509697" fg:w="4443"/><text x="75.7090%" y="222.50"></text></g><g><title>narrow (torch_geometric/utils/_select.py:61) (3,381 samples, 0.17%)</title><rect x="75.5120%" y="228" width="0.1690%" height="15" fill="rgb(211,161,38)" fg:x="1510759" fg:w="3381"/><text x="75.7620%" y="238.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:86) (3,112 samples, 0.16%)</title><rect x="75.7445%" y="212" width="0.1555%" height="15" fill="rgb(219,138,40)" fg:x="1515409" fg:w="3112"/><text x="75.9945%" y="222.50"></text></g><g><title>_separate (torch_geometric/data/separate.py:87) (3,584 samples, 0.18%)</title><rect x="75.9000%" y="212" width="0.1791%" height="15" fill="rgb(241,228,46)" fg:x="1518521" fg:w="3584"/><text x="76.1500%" y="222.50"></text></g><g><title>separate (torch_geometric/data/separate.py:48) (30,083 samples, 1.50%)</title><rect x="74.5783%" y="196" width="1.5036%" height="15" fill="rgb(223,209,38)" fg:x="1492078" fg:w="30083"/><text x="74.8283%" y="206.50"></text></g><g><title>get_example (torch_geometric/data/batch.py:124) (32,335 samples, 1.62%)</title><rect x="74.4760%" y="180" width="1.6162%" height="15" fill="rgb(236,164,45)" fg:x="1490030" fg:w="32335"/><text x="74.7260%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/batch.py:193) (32,682 samples, 1.63%)</title><rect x="74.4675%" y="164" width="1.6335%" height="15" fill="rgb(231,15,5)" fg:x="1489860" fg:w="32682"/><text x="74.7175%" y="174.50"></text></g><g><title>update (gfn_train.py:495) (32,719 samples, 1.64%)</title><rect x="74.4667%" y="116" width="1.6354%" height="15" fill="rgb(252,35,15)" fg:x="1489844" fg:w="32719"/><text x="74.7167%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:495) (32,719 samples, 1.64%)</title><rect x="74.4667%" y="132" width="1.6354%" height="15" fill="rgb(248,181,18)" fg:x="1489844" fg:w="32719"/><text x="74.7167%" y="142.50"></text></g><g><title>to_data_list (torch_geometric/data/batch.py:193) (32,712 samples, 1.64%)</title><rect x="74.4670%" y="148" width="1.6350%" height="15" fill="rgb(233,39,42)" fg:x="1489851" fg:w="32712"/><text x="74.7170%" y="158.50"></text></g><g><title>gfn_sgd (gfn_train.py:600) (35,748 samples, 1.79%)</title><rect x="74.4232%" y="100" width="1.7868%" height="15" fill="rgb(238,110,33)" fg:x="1488974" fg:w="35748"/><text x="74.6732%" y="110.50">g..</text></g><g><title>gfn_sgd (gfn_train.py:666) (333,243 samples, 16.66%)</title><rect x="76.2347%" y="100" width="16.6564%" height="15" fill="rgb(233,195,10)" fg:x="1525216" fg:w="333243"/><text x="76.4847%" y="110.50">gfn_sgd (gfn_train.py:666)</text></g><g><title>backward (torch/_tensor.py:525) (333,241 samples, 16.66%)</title><rect x="76.2348%" y="116" width="16.6563%" height="15" fill="rgb(254,105,3)" fg:x="1525218" fg:w="333241"/><text x="76.4848%" y="126.50">backward (torch/_tensor.py..</text></g><g><title>backward (torch/autograd/__init__.py:267) (333,228 samples, 16.66%)</title><rect x="76.2354%" y="132" width="16.6557%" height="15" fill="rgb(221,225,9)" fg:x="1525231" fg:w="333228"/><text x="76.4854%" y="142.50">backward (torch/autograd/_..</text></g><g><title>_engine_run_backward (torch/autograd/graph.py:744) (333,223 samples, 16.66%)</title><rect x="76.2357%" y="148" width="16.6554%" height="15" fill="rgb(224,227,45)" fg:x="1525236" fg:w="333223"/><text x="76.4857%" y="158.50">_engine_run_backward (torc..</text></g><g><title>gfn_sgd (gfn_train.py:669) (138,968 samples, 6.95%)</title><rect x="92.9701%" y="100" width="6.9460%" height="15" fill="rgb(229,198,43)" fg:x="1860039" fg:w="138968"/><text x="93.2201%" y="110.50">gfn_sgd (..</text></g><g><title>empty_cache (torch/cuda/memory.py:162) (138,963 samples, 6.95%)</title><rect x="92.9703%" y="116" width="6.9458%" height="15" fill="rgb(206,209,35)" fg:x="1860044" fg:w="138963"/><text x="93.2203%" y="126.50">empty_cac..</text></g><g><title>&lt;module&gt; (train.py:137) (1,997,917 samples, 99.86%)</title><rect x="0.0756%" y="68" width="99.8616%" height="15" fill="rgb(245,195,53)" fg:x="1512" fg:w="1997917"/><text x="0.3256%" y="78.50">&lt;module&gt; (train.py:137)</text></g><g><title>train (train.py:56) (1,532,518 samples, 76.60%)</title><rect x="23.3375%" y="84" width="76.5996%" height="15" fill="rgb(240,92,26)" fg:x="466911" fg:w="1532518"/><text x="23.5875%" y="94.50">train (train.py:56)</text></g><g><title>all (2,000,686 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(207,40,23)" fg:x="0" fg:w="2000686"/><text x="0.2500%" y="62.50"></text></g></svg></svg>