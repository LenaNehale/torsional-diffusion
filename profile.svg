<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="378" onload="init(evt)" viewBox="0 0 1200 378" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="378" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python train.py --train_mode on_policy --energy_fn mmff --seed 368 --num_points 30 --batch_size_train 4 --batch_size_eval 128</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="367.00"> </text><svg id="frames" x="10" width="1180" total_samples="3961629"><g><title>format_meter (tqdm/std.py:593) (12,324 samples, 0.31%)</title><rect x="0.0611%" y="180" width="0.3111%" height="15" fill="rgb(227,0,7)" fg:x="2422" fg:w="12324"/><text x="0.3111%" y="190.50"></text></g><g><title>__str__ (tqdm/std.py:1151) (12,444 samples, 0.31%)</title><rect x="0.0604%" y="164" width="0.3141%" height="15" fill="rgb(217,0,24)" fg:x="2391" fg:w="12444"/><text x="0.3104%" y="174.50"></text></g><g><title>refresh (tqdm/std.py:1347) (12,524 samples, 0.32%)</title><rect x="0.0602%" y="132" width="0.3161%" height="15" fill="rgb(221,193,54)" fg:x="2384" fg:w="12524"/><text x="0.3102%" y="142.50"></text></g><g><title>display (tqdm/std.py:1495) (12,519 samples, 0.32%)</title><rect x="0.0603%" y="148" width="0.3160%" height="15" fill="rgb(248,212,6)" fg:x="2389" fg:w="12519"/><text x="0.3103%" y="158.50"></text></g><g><title>update (tqdm/std.py:1242) (12,531 samples, 0.32%)</title><rect x="0.0601%" y="116" width="0.3163%" height="15" fill="rgb(208,68,35)" fg:x="2379" fg:w="12531"/><text x="0.3101%" y="126.50"></text></g><g><title>train (train.py:67) (12,554 samples, 0.32%)</title><rect x="0.0595%" y="84" width="0.3169%" height="15" fill="rgb(232,128,0)" fg:x="2358" fg:w="12554"/><text x="0.3095%" y="94.50"></text></g><g><title>__iter__ (tqdm/std.py:1191) (12,548 samples, 0.32%)</title><rect x="0.0597%" y="100" width="0.3167%" height="15" fill="rgb(207,160,47)" fg:x="2364" fg:w="12548"/><text x="0.3097%" y="110.50"></text></g><g><title>deepcopy (copy.py:146) (4,201 samples, 0.11%)</title><rect x="1.7586%" y="260" width="0.1060%" height="15" fill="rgb(228,23,34)" fg:x="69668" fg:w="4201"/><text x="2.0086%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (4,131 samples, 0.10%)</title><rect x="1.7603%" y="276" width="0.1043%" height="15" fill="rgb(218,30,26)" fg:x="69738" fg:w="4131"/><text x="2.0103%" y="286.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (22,810 samples, 0.58%)</title><rect x="1.9164%" y="324" width="0.5758%" height="15" fill="rgb(220,122,19)" fg:x="75919" fg:w="22810"/><text x="2.1664%" y="334.50"></text></g><g><title>clone (torch/storage.py:128) (22,808 samples, 0.58%)</title><rect x="1.9164%" y="340" width="0.5757%" height="15" fill="rgb(250,228,42)" fg:x="75921" fg:w="22808"/><text x="2.1664%" y="350.50"></text></g><g><title>deepcopy (copy.py:153) (22,837 samples, 0.58%)</title><rect x="1.9158%" y="308" width="0.5765%" height="15" fill="rgb(240,193,28)" fg:x="75896" fg:w="22837"/><text x="2.1658%" y="318.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (22,957 samples, 0.58%)</title><rect x="1.9134%" y="292" width="0.5795%" height="15" fill="rgb(216,20,37)" fg:x="75802" fg:w="22957"/><text x="2.1634%" y="302.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (23,075 samples, 0.58%)</title><rect x="1.9131%" y="276" width="0.5825%" height="15" fill="rgb(206,188,39)" fg:x="75791" fg:w="23075"/><text x="2.1631%" y="286.50"></text></g><g><title>deepcopy (copy.py:153) (27,895 samples, 0.70%)</title><rect x="1.8648%" y="260" width="0.7041%" height="15" fill="rgb(217,207,13)" fg:x="73876" fg:w="27895"/><text x="2.1148%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (32,227 samples, 0.81%)</title><rect x="1.7570%" y="228" width="0.8135%" height="15" fill="rgb(231,73,38)" fg:x="69606" fg:w="32227"/><text x="2.0070%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (32,204 samples, 0.81%)</title><rect x="1.7576%" y="244" width="0.8129%" height="15" fill="rgb(225,20,46)" fg:x="69629" fg:w="32204"/><text x="2.0076%" y="254.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (32,297 samples, 0.82%)</title><rect x="1.7553%" y="180" width="0.8152%" height="15" fill="rgb(210,31,41)" fg:x="69539" fg:w="32297"/><text x="2.0053%" y="190.50"></text></g><g><title>deepcopy (copy.py:153) (32,270 samples, 0.81%)</title><rect x="1.7560%" y="196" width="0.8146%" height="15" fill="rgb(221,200,47)" fg:x="69566" fg:w="32270"/><text x="2.0060%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (32,258 samples, 0.81%)</title><rect x="1.7563%" y="212" width="0.8143%" height="15" fill="rgb(226,26,5)" fg:x="69578" fg:w="32258"/><text x="2.0063%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (32,327 samples, 0.82%)</title><rect x="1.7548%" y="164" width="0.8160%" height="15" fill="rgb(249,33,26)" fg:x="69517" fg:w="32327"/><text x="2.0048%" y="174.50"></text></g><g><title>get (dataset.py:210) (32,370 samples, 0.82%)</title><rect x="1.7538%" y="148" width="0.8171%" height="15" fill="rgb(235,183,28)" fg:x="69478" fg:w="32370"/><text x="2.0038%" y="158.50"></text></g><g><title>__getitem__ (torch_geometric/data/dataset.py:289) (32,407 samples, 0.82%)</title><rect x="1.7533%" y="132" width="0.8180%" height="15" fill="rgb(221,5,38)" fg:x="69461" fg:w="32407"/><text x="2.0033%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:390) (32,945 samples, 0.83%)</title><rect x="1.7497%" y="100" width="0.8316%" height="15" fill="rgb(247,18,42)" fg:x="69317" fg:w="32945"/><text x="1.9997%" y="110.50"></text></g><g><title>__getitem__ (torch/utils/data/dataset.py:411) (32,844 samples, 0.83%)</title><rect x="1.7523%" y="116" width="0.8291%" height="15" fill="rgb(241,131,45)" fg:x="69418" fg:w="32844"/><text x="2.0023%" y="126.50"></text></g><g><title>deepcopy (copy.py:146) (4,621 samples, 0.12%)</title><rect x="2.5867%" y="228" width="0.1166%" height="15" fill="rgb(249,31,29)" fg:x="102476" fg:w="4621"/><text x="2.8367%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (4,619 samples, 0.12%)</title><rect x="2.5868%" y="244" width="0.1166%" height="15" fill="rgb(225,111,53)" fg:x="102478" fg:w="4619"/><text x="2.8368%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (4,635 samples, 0.12%)</title><rect x="2.5864%" y="196" width="0.1170%" height="15" fill="rgb(238,160,17)" fg:x="102465" fg:w="4635"/><text x="2.8364%" y="206.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (4,632 samples, 0.12%)</title><rect x="2.5865%" y="212" width="0.1169%" height="15" fill="rgb(214,148,48)" fg:x="102468" fg:w="4632"/><text x="2.8365%" y="222.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (4,646 samples, 0.12%)</title><rect x="2.5862%" y="180" width="0.1173%" height="15" fill="rgb(232,36,49)" fg:x="102456" fg:w="4646"/><text x="2.8362%" y="190.50"></text></g><g><title>get (dataset.py:210) (4,684 samples, 0.12%)</title><rect x="2.5854%" y="148" width="0.1182%" height="15" fill="rgb(209,103,24)" fg:x="102424" fg:w="4684"/><text x="2.8354%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (4,663 samples, 0.12%)</title><rect x="2.5859%" y="164" width="0.1177%" height="15" fill="rgb(229,88,8)" fg:x="102445" fg:w="4663"/><text x="2.8359%" y="174.50"></text></g><g><title>__getitem__ (torch_geometric/data/dataset.py:289) (4,702 samples, 0.12%)</title><rect x="2.5851%" y="132" width="0.1187%" height="15" fill="rgb(213,181,19)" fg:x="102414" fg:w="4702"/><text x="2.8351%" y="142.50"></text></g><g><title>__getitem__ (torch/utils/data/dataset.py:411) (4,947 samples, 0.12%)</title><rect x="2.5848%" y="116" width="0.1249%" height="15" fill="rgb(254,191,54)" fg:x="102399" fg:w="4947"/><text x="2.8348%" y="126.50"></text></g><g><title>gfn_sgd (gfn_train.py:391) (6,041 samples, 0.15%)</title><rect x="2.5813%" y="100" width="0.1525%" height="15" fill="rgb(241,83,37)" fg:x="102262" fg:w="6041"/><text x="2.8313%" y="110.50"></text></g><g><title>deepcopy (copy.py:153) (6,409 samples, 0.16%)</title><rect x="2.7933%" y="228" width="0.1618%" height="15" fill="rgb(233,36,39)" fg:x="110662" fg:w="6409"/><text x="3.0433%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (7,403 samples, 0.19%)</title><rect x="2.7700%" y="196" width="0.1869%" height="15" fill="rgb(226,3,54)" fg:x="109736" fg:w="7403"/><text x="3.0200%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (7,376 samples, 0.19%)</title><rect x="2.7707%" y="212" width="0.1862%" height="15" fill="rgb(245,192,40)" fg:x="109763" fg:w="7376"/><text x="3.0207%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (7,473 samples, 0.19%)</title><rect x="2.7684%" y="164" width="0.1886%" height="15" fill="rgb(238,167,29)" fg:x="109674" fg:w="7473"/><text x="3.0184%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (7,451 samples, 0.19%)</title><rect x="2.7690%" y="180" width="0.1881%" height="15" fill="rgb(232,182,51)" fg:x="109696" fg:w="7451"/><text x="3.0190%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (7,535 samples, 0.19%)</title><rect x="2.7671%" y="148" width="0.1902%" height="15" fill="rgb(231,60,39)" fg:x="109624" fg:w="7535"/><text x="3.0171%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (7,566 samples, 0.19%)</title><rect x="2.7667%" y="132" width="0.1910%" height="15" fill="rgb(208,69,12)" fg:x="109607" fg:w="7566"/><text x="3.0167%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:394) (7,843 samples, 0.20%)</title><rect x="2.7602%" y="100" width="0.1980%" height="15" fill="rgb(235,93,37)" fg:x="109350" fg:w="7843"/><text x="3.0102%" y="110.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:394) (7,656 samples, 0.19%)</title><rect x="2.7649%" y="116" width="0.1933%" height="15" fill="rgb(213,116,39)" fg:x="109537" fg:w="7656"/><text x="3.0149%" y="126.50"></text></g><g><title>perturb_seeds (sampling.py:87) (6,760 samples, 0.17%)</title><rect x="2.9844%" y="116" width="0.1706%" height="15" fill="rgb(222,207,29)" fg:x="118229" fg:w="6760"/><text x="3.2344%" y="126.50"></text></g><g><title>gfn_sgd (gfn_train.py:395) (8,354 samples, 0.21%)</title><rect x="2.9582%" y="100" width="0.2109%" height="15" fill="rgb(206,96,30)" fg:x="117193" fg:w="8354"/><text x="3.2082%" y="110.50"></text></g><g><title>gfn_sgd (gfn_train.py:396) (5,319 samples, 0.13%)</title><rect x="3.1691%" y="100" width="0.1343%" height="15" fill="rgb(218,138,4)" fg:x="125547" fg:w="5319"/><text x="3.4191%" y="110.50"></text></g><g><title>from_data_list (torch_geometric/data/batch.py:97) (4,915 samples, 0.12%)</title><rect x="3.1793%" y="116" width="0.1241%" height="15" fill="rgb(250,191,14)" fg:x="125951" fg:w="4915"/><text x="3.4293%" y="126.50"></text></g><g><title>from_data_list (torch_geometric/data/batch.py:97) (4,462 samples, 0.11%)</title><rect x="3.3995%" y="132" width="0.1126%" height="15" fill="rgb(239,60,40)" fg:x="134675" fg:w="4462"/><text x="3.6495%" y="142.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:51) (8,616 samples, 0.22%)</title><rect x="3.3128%" y="116" width="0.2175%" height="15" fill="rgb(206,27,48)" fg:x="131239" fg:w="8616"/><text x="3.5628%" y="126.50"></text></g><g><title>radius (torch_cluster/radius.py:82) (9,151 samples, 0.23%)</title><rect x="3.8768%" y="212" width="0.2310%" height="15" fill="rgb(225,35,8)" fg:x="153585" fg:w="9151"/><text x="4.1268%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:854) (9,014 samples, 0.23%)</title><rect x="3.8803%" y="228" width="0.2275%" height="15" fill="rgb(250,213,24)" fg:x="153722" fg:w="9014"/><text x="4.1303%" y="238.50"></text></g><g><title>radius_graph (torch_cluster/radius.py:135) (14,216 samples, 0.36%)</title><rect x="3.7490%" y="196" width="0.3588%" height="15" fill="rgb(247,123,22)" fg:x="148521" fg:w="14216"/><text x="3.9990%" y="206.50"></text></g><g><title>radius_graph (torch_cluster/radius.py:145) (5,040 samples, 0.13%)</title><rect x="4.1335%" y="196" width="0.1272%" height="15" fill="rgb(231,138,38)" fg:x="163754" fg:w="5040"/><text x="4.3835%" y="206.50"></text></g><g><title>build_conv_graph (score_model.py:181) (21,625 samples, 0.55%)</title><rect x="3.7371%" y="180" width="0.5459%" height="15" fill="rgb(231,145,46)" fg:x="148050" fg:w="21625"/><text x="3.9871%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:189) (5,407 samples, 0.14%)</title><rect x="4.4192%" y="180" width="0.1365%" height="15" fill="rgb(251,118,11)" fg:x="175071" fg:w="5407"/><text x="4.6692%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:197) (4,715 samples, 0.12%)</title><rect x="4.6842%" y="180" width="0.1190%" height="15" fill="rgb(217,147,25)" fg:x="185572" fg:w="4715"/><text x="4.9342%" y="190.50"></text></g><g><title>__setattr__ (torch/nn/modules/module.py:1721) (4,075 samples, 0.10%)</title><rect x="4.9015%" y="228" width="0.1029%" height="15" fill="rgb(247,81,37)" fg:x="194181" fg:w="4075"/><text x="5.1515%" y="238.50"></text></g><g><title>__instancecheck__ (torch/nn/parameter.py:9) (4,058 samples, 0.10%)</title><rect x="4.9020%" y="244" width="0.1024%" height="15" fill="rgb(209,12,38)" fg:x="194198" fg:w="4058"/><text x="5.1520%" y="254.50"></text></g><g><title>__init__ (e3nn/o3/_spherical_harmonics.py:78) (4,182 samples, 0.11%)</title><rect x="4.8997%" y="212" width="0.1056%" height="15" fill="rgb(227,1,9)" fg:x="194109" fg:w="4182"/><text x="5.1497%" y="222.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:183) (7,295 samples, 0.18%)</title><rect x="4.8257%" y="196" width="0.1841%" height="15" fill="rgb(248,47,43)" fg:x="191176" fg:w="7295"/><text x="5.0757%" y="206.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (8,288 samples, 0.21%)</title><rect x="5.0841%" y="244" width="0.2092%" height="15" fill="rgb(221,10,30)" fg:x="201415" fg:w="8288"/><text x="5.3341%" y="254.50"></text></g><g><title>build_conv_graph (score_model.py:201) (18,695 samples, 0.47%)</title><rect x="4.8221%" y="180" width="0.4719%" height="15" fill="rgb(210,229,1)" fg:x="191032" fg:w="18695"/><text x="5.0721%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (11,256 samples, 0.28%)</title><rect x="5.0098%" y="196" width="0.2841%" height="15" fill="rgb(222,148,37)" fg:x="198471" fg:w="11256"/><text x="5.2598%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (11,230 samples, 0.28%)</title><rect x="5.0105%" y="212" width="0.2835%" height="15" fill="rgb(234,67,33)" fg:x="198497" fg:w="11230"/><text x="5.2605%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,126 samples, 0.28%)</title><rect x="5.0131%" y="228" width="0.2808%" height="15" fill="rgb(247,98,35)" fg:x="198601" fg:w="11126"/><text x="5.2631%" y="238.50"></text></g><g><title>forward (score_model.py:131) (62,070 samples, 1.57%)</title><rect x="3.7273%" y="164" width="1.5668%" height="15" fill="rgb(247,138,52)" fg:x="147663" fg:w="62070"/><text x="3.9773%" y="174.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (7,983 samples, 0.20%)</title><rect x="5.3173%" y="212" width="0.2015%" height="15" fill="rgb(213,79,30)" fg:x="210653" fg:w="7983"/><text x="5.5673%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,791 samples, 0.20%)</title><rect x="5.3222%" y="228" width="0.1967%" height="15" fill="rgb(246,177,23)" fg:x="210845" fg:w="7791"/><text x="5.5722%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (7,525 samples, 0.19%)</title><rect x="5.3289%" y="244" width="0.1899%" height="15" fill="rgb(230,62,27)" fg:x="211111" fg:w="7525"/><text x="5.5789%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (6,604 samples, 0.17%)</title><rect x="5.3521%" y="260" width="0.1667%" height="15" fill="rgb(216,154,8)" fg:x="212032" fg:w="6604"/><text x="5.6021%" y="270.50"></text></g><g><title>forward (score_model.py:134) (8,426 samples, 0.21%)</title><rect x="5.3062%" y="164" width="0.2127%" height="15" fill="rgb(244,35,45)" fg:x="210211" fg:w="8426"/><text x="5.5562%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (8,229 samples, 0.21%)</title><rect x="5.3111%" y="180" width="0.2077%" height="15" fill="rgb(251,115,12)" fg:x="210408" fg:w="8229"/><text x="5.5611%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (8,131 samples, 0.21%)</title><rect x="5.3136%" y="196" width="0.2052%" height="15" fill="rgb(240,54,50)" fg:x="210506" fg:w="8131"/><text x="5.5636%" y="206.50"></text></g><g><title>forward (score_model.py:135) (33,543 samples, 0.85%)</title><rect x="5.5189%" y="164" width="0.8467%" height="15" fill="rgb(233,84,52)" fg:x="218637" fg:w="33543"/><text x="5.7689%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (33,437 samples, 0.84%)</title><rect x="5.5215%" y="180" width="0.8440%" height="15" fill="rgb(207,117,47)" fg:x="218743" fg:w="33437"/><text x="5.7715%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (33,358 samples, 0.84%)</title><rect x="5.5235%" y="196" width="0.8420%" height="15" fill="rgb(249,43,39)" fg:x="218822" fg:w="33358"/><text x="5.7735%" y="206.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (33,271 samples, 0.84%)</title><rect x="5.5257%" y="212" width="0.8398%" height="15" fill="rgb(209,38,44)" fg:x="218909" fg:w="33271"/><text x="5.7757%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (33,085 samples, 0.84%)</title><rect x="5.5304%" y="228" width="0.8351%" height="15" fill="rgb(236,212,23)" fg:x="219095" fg:w="33085"/><text x="5.7804%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (32,837 samples, 0.83%)</title><rect x="5.5367%" y="244" width="0.8289%" height="15" fill="rgb(242,79,21)" fg:x="219343" fg:w="32837"/><text x="5.7867%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (32,037 samples, 0.81%)</title><rect x="5.5569%" y="260" width="0.8087%" height="15" fill="rgb(211,96,35)" fg:x="220143" fg:w="32037"/><text x="5.8069%" y="270.50"></text></g><g><title>forward (score_model.py:138) (12,010 samples, 0.30%)</title><rect x="6.3719%" y="164" width="0.3032%" height="15" fill="rgb(253,215,40)" fg:x="252433" fg:w="12010"/><text x="6.6219%" y="174.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (423,609 samples, 10.69%)</title><rect x="6.9265%" y="260" width="10.6928%" height="15" fill="rgb(211,81,21)" fg:x="274403" fg:w="423609"/><text x="7.1765%" y="270.50">forward (e3nn/o3..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (422,966 samples, 10.68%)</title><rect x="6.9428%" y="276" width="10.6766%" height="15" fill="rgb(208,190,38)" fg:x="275046" fg:w="422966"/><text x="7.1928%" y="286.50">_wrapped_call_im..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (422,572 samples, 10.67%)</title><rect x="6.9527%" y="292" width="10.6666%" height="15" fill="rgb(235,213,38)" fg:x="275440" fg:w="422572"/><text x="7.2027%" y="302.50">_call_impl (torc..</text></g><g><title>forward (score_model.py:34) (549,064 samples, 13.86%)</title><rect x="6.7652%" y="212" width="13.8596%" height="15" fill="rgb(237,122,38)" fg:x="268012" fg:w="549064"/><text x="7.0152%" y="222.50">forward (score_model...</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (544,533 samples, 13.75%)</title><rect x="6.8796%" y="228" width="13.7452%" height="15" fill="rgb(244,218,35)" fg:x="272543" fg:w="544533"/><text x="7.1296%" y="238.50">_wrapped_call_impl (t..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (543,598 samples, 13.72%)</title><rect x="6.9032%" y="244" width="13.7216%" height="15" fill="rgb(240,68,47)" fg:x="273478" fg:w="543598"/><text x="7.1532%" y="254.50">_call_impl (torch/nn/..</text></g><g><title>forward (torch/nn/modules/container.py:217) (118,649 samples, 2.99%)</title><rect x="17.6298%" y="260" width="2.9950%" height="15" fill="rgb(210,16,53)" fg:x="698427" fg:w="118649"/><text x="17.8798%" y="270.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (117,829 samples, 2.97%)</title><rect x="17.6505%" y="276" width="2.9743%" height="15" fill="rgb(235,124,12)" fg:x="699247" fg:w="117829"/><text x="17.9005%" y="286.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (116,718 samples, 2.95%)</title><rect x="17.6785%" y="292" width="2.9462%" height="15" fill="rgb(224,169,11)" fg:x="700358" fg:w="116718"/><text x="17.9285%" y="302.50">_c..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (113,266 samples, 2.86%)</title><rect x="17.7657%" y="308" width="2.8591%" height="15" fill="rgb(250,166,2)" fg:x="703810" fg:w="113266"/><text x="18.0157%" y="318.50">fo..</text></g><g><title>scatter_mean (torch_scatter/scatter.py:41) (9,671 samples, 0.24%)</title><rect x="20.6463%" y="244" width="0.2441%" height="15" fill="rgb(242,216,29)" fg:x="817929" fg:w="9671"/><text x="20.8963%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:51) (4,913 samples, 0.12%)</title><rect x="20.9561%" y="244" width="0.1240%" height="15" fill="rgb(230,116,27)" fg:x="830201" fg:w="4913"/><text x="21.2061%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:52) (6,164 samples, 0.16%)</title><rect x="21.0801%" y="244" width="0.1556%" height="15" fill="rgb(228,99,48)" fg:x="835114" fg:w="6164"/><text x="21.3301%" y="254.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (28,255 samples, 0.71%)</title><rect x="20.6365%" y="228" width="0.7132%" height="15" fill="rgb(253,11,6)" fg:x="817540" fg:w="28255"/><text x="20.8865%" y="238.50"></text></g><g><title>forward (score_model.py:37) (28,466 samples, 0.72%)</title><rect x="20.6312%" y="212" width="0.7185%" height="15" fill="rgb(247,143,39)" fg:x="817330" fg:w="28466"/><text x="20.8812%" y="222.50"></text></g><g><title>forward (score_model.py:39) (5,852 samples, 0.15%)</title><rect x="21.3512%" y="212" width="0.1477%" height="15" fill="rgb(236,97,10)" fg:x="845854" fg:w="5852"/><text x="21.6012%" y="222.50"></text></g><g><title>pad (torch/nn/functional.py:4522) (5,186 samples, 0.13%)</title><rect x="21.3680%" y="228" width="0.1309%" height="15" fill="rgb(233,208,19)" fg:x="846520" fg:w="5186"/><text x="21.6180%" y="238.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:105) (7,460 samples, 0.19%)</title><rect x="21.6797%" y="260" width="0.1883%" height="15" fill="rgb(216,164,2)" fg:x="858870" fg:w="7460"/><text x="21.9297%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:109) (4,085 samples, 0.10%)</title><rect x="21.8694%" y="260" width="0.1031%" height="15" fill="rgb(220,129,5)" fg:x="866384" fg:w="4085"/><text x="22.1194%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:116) (4,435 samples, 0.11%)</title><rect x="21.9825%" y="260" width="0.1119%" height="15" fill="rgb(242,17,10)" fg:x="870866" fg:w="4435"/><text x="22.2325%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:117) (9,596 samples, 0.24%)</title><rect x="22.0945%" y="260" width="0.2422%" height="15" fill="rgb(242,107,0)" fg:x="875301" fg:w="9596"/><text x="22.3445%" y="270.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (8,232 samples, 0.21%)</title><rect x="22.1289%" y="276" width="0.2078%" height="15" fill="rgb(251,28,31)" fg:x="876665" fg:w="8232"/><text x="22.3789%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:129) (19,816 samples, 0.50%)</title><rect x="22.4317%" y="260" width="0.5002%" height="15" fill="rgb(233,223,10)" fg:x="888660" fg:w="19816"/><text x="22.6817%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:134) (7,331 samples, 0.19%)</title><rect x="22.9346%" y="260" width="0.1851%" height="15" fill="rgb(215,21,27)" fg:x="908585" fg:w="7331"/><text x="23.1846%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:141) (7,199 samples, 0.18%)</title><rect x="23.1215%" y="260" width="0.1817%" height="15" fill="rgb(232,23,21)" fg:x="915988" fg:w="7199"/><text x="23.3715%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (26,137 samples, 0.66%)</title><rect x="23.3032%" y="260" width="0.6598%" height="15" fill="rgb(244,5,23)" fg:x="923187" fg:w="26137"/><text x="23.5532%" y="270.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (21,812 samples, 0.55%)</title><rect x="23.4124%" y="276" width="0.5506%" height="15" fill="rgb(226,81,46)" fg:x="927512" fg:w="21812"/><text x="23.6624%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:147) (14,816 samples, 0.37%)</title><rect x="23.9650%" y="260" width="0.3740%" height="15" fill="rgb(247,70,30)" fg:x="949404" fg:w="14816"/><text x="24.2150%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:150) (4,274 samples, 0.11%)</title><rect x="24.3421%" y="260" width="0.1079%" height="15" fill="rgb(212,68,19)" fg:x="964344" fg:w="4274"/><text x="24.5921%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:153) (6,642 samples, 0.17%)</title><rect x="24.4509%" y="260" width="0.1677%" height="15" fill="rgb(240,187,13)" fg:x="968652" fg:w="6642"/><text x="24.7009%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:155) (10,123 samples, 0.26%)</title><rect x="24.6185%" y="260" width="0.2555%" height="15" fill="rgb(223,113,26)" fg:x="975294" fg:w="10123"/><text x="24.8685%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:160) (4,471 samples, 0.11%)</title><rect x="24.9187%" y="260" width="0.1129%" height="15" fill="rgb(206,192,2)" fg:x="987186" fg:w="4471"/><text x="25.1687%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:178) (5,177 samples, 0.13%)</title><rect x="25.1223%" y="260" width="0.1307%" height="15" fill="rgb(241,108,4)" fg:x="995252" fg:w="5177"/><text x="25.3723%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:183) (5,007 samples, 0.13%)</title><rect x="25.3816%" y="260" width="0.1264%" height="15" fill="rgb(247,173,49)" fg:x="1005525" fg:w="5007"/><text x="25.6316%" y="270.50"></text></g><g><title>forward (score_model.py:43) (157,074 samples, 3.96%)</title><rect x="21.5792%" y="212" width="3.9649%" height="15" fill="rgb(224,114,35)" fg:x="854889" fg:w="157074"/><text x="21.8292%" y="222.50">forw..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (156,709 samples, 3.96%)</title><rect x="21.5884%" y="228" width="3.9557%" height="15" fill="rgb(245,159,27)" fg:x="855254" fg:w="156709"/><text x="21.8384%" y="238.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (156,048 samples, 3.94%)</title><rect x="21.6051%" y="244" width="3.9390%" height="15" fill="rgb(245,172,44)" fg:x="855915" fg:w="156048"/><text x="21.8551%" y="254.50">_cal..</text></g><g><title>forward (score_model.py:139) (747,521 samples, 18.87%)</title><rect x="6.6751%" y="164" width="18.8690%" height="15" fill="rgb(236,23,11)" fg:x="264443" fg:w="747521"/><text x="6.9251%" y="174.50">forward (score_model.py:139)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (746,871 samples, 18.85%)</title><rect x="6.6915%" y="180" width="18.8526%" height="15" fill="rgb(205,117,38)" fg:x="265093" fg:w="746871"/><text x="6.9415%" y="190.50">_wrapped_call_impl (torch/nn/..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (746,130 samples, 18.83%)</title><rect x="6.7102%" y="196" width="18.8339%" height="15" fill="rgb(237,72,25)" fg:x="265834" fg:w="746130"/><text x="6.9602%" y="206.50">_call_impl (torch/nn/modules/..</text></g><g><title>build_bond_conv_graph (score_model.py:165) (4,190 samples, 0.11%)</title><rect x="25.5532%" y="180" width="0.1058%" height="15" fill="rgb(244,70,9)" fg:x="1012323" fg:w="4190"/><text x="25.8032%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:168) (13,458 samples, 0.34%)</title><rect x="25.7544%" y="180" width="0.3397%" height="15" fill="rgb(217,125,39)" fg:x="1020295" fg:w="13458"/><text x="26.0044%" y="190.50"></text></g><g><title>radius (torch_cluster/radius.py:82) (8,300 samples, 0.21%)</title><rect x="25.8846%" y="196" width="0.2095%" height="15" fill="rgb(235,36,10)" fg:x="1025453" fg:w="8300"/><text x="26.1346%" y="206.50"></text></g><g><title>__call__ (torch/_ops.py:854) (8,131 samples, 0.21%)</title><rect x="25.8889%" y="212" width="0.2052%" height="15" fill="rgb(251,123,47)" fg:x="1025622" fg:w="8131"/><text x="26.1389%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:171) (4,727 samples, 0.12%)</title><rect x="26.1543%" y="180" width="0.1193%" height="15" fill="rgb(221,13,13)" fg:x="1036138" fg:w="4727"/><text x="26.4043%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:173) (18,928 samples, 0.48%)</title><rect x="26.2737%" y="180" width="0.4778%" height="15" fill="rgb(238,131,9)" fg:x="1040865" fg:w="18928"/><text x="26.5237%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (18,793 samples, 0.47%)</title><rect x="26.2771%" y="196" width="0.4744%" height="15" fill="rgb(211,50,8)" fg:x="1041000" fg:w="18793"/><text x="26.5271%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (18,700 samples, 0.47%)</title><rect x="26.2794%" y="212" width="0.4720%" height="15" fill="rgb(245,182,24)" fg:x="1041093" fg:w="18700"/><text x="26.5294%" y="222.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (18,581 samples, 0.47%)</title><rect x="26.2824%" y="228" width="0.4690%" height="15" fill="rgb(242,14,37)" fg:x="1041212" fg:w="18581"/><text x="26.5324%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (18,436 samples, 0.47%)</title><rect x="26.2861%" y="244" width="0.4654%" height="15" fill="rgb(246,228,12)" fg:x="1041357" fg:w="18436"/><text x="26.5361%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (18,181 samples, 0.46%)</title><rect x="26.2925%" y="260" width="0.4589%" height="15" fill="rgb(213,55,15)" fg:x="1041612" fg:w="18181"/><text x="26.5425%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (17,346 samples, 0.44%)</title><rect x="26.3136%" y="276" width="0.4379%" height="15" fill="rgb(209,9,3)" fg:x="1042447" fg:w="17346"/><text x="26.5636%" y="286.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (8,946 samples, 0.23%)</title><rect x="26.9207%" y="244" width="0.2258%" height="15" fill="rgb(230,59,30)" fg:x="1066498" fg:w="8946"/><text x="27.1707%" y="254.50"></text></g><g><title>build_bond_conv_graph (score_model.py:175) (15,679 samples, 0.40%)</title><rect x="26.7514%" y="180" width="0.3958%" height="15" fill="rgb(209,121,21)" fg:x="1059793" fg:w="15679"/><text x="27.0014%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (12,118 samples, 0.31%)</title><rect x="26.8413%" y="196" width="0.3059%" height="15" fill="rgb(220,109,13)" fg:x="1063354" fg:w="12118"/><text x="27.0913%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (12,095 samples, 0.31%)</title><rect x="26.8419%" y="212" width="0.3053%" height="15" fill="rgb(232,18,1)" fg:x="1063377" fg:w="12095"/><text x="27.0919%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,989 samples, 0.30%)</title><rect x="26.8446%" y="228" width="0.3026%" height="15" fill="rgb(215,41,42)" fg:x="1063483" fg:w="11989"/><text x="27.0946%" y="238.50"></text></g><g><title>forward (score_model.py:141) (63,511 samples, 1.60%)</title><rect x="25.5441%" y="164" width="1.6032%" height="15" fill="rgb(224,123,36)" fg:x="1011964" fg:w="63511"/><text x="25.7941%" y="174.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (6,335 samples, 0.16%)</title><rect x="27.4046%" y="228" width="0.1599%" height="15" fill="rgb(240,125,3)" fg:x="1085670" fg:w="6335"/><text x="27.6546%" y="238.50"></text></g><g><title>forward (score_model.py:146) (13,195 samples, 0.33%)</title><rect x="27.2702%" y="164" width="0.3331%" height="15" fill="rgb(205,98,50)" fg:x="1080345" fg:w="13195"/><text x="27.5202%" y="174.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (10,561 samples, 0.27%)</title><rect x="27.3367%" y="180" width="0.2666%" height="15" fill="rgb(205,185,37)" fg:x="1082979" fg:w="10561"/><text x="27.5867%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (10,531 samples, 0.27%)</title><rect x="27.3375%" y="196" width="0.2658%" height="15" fill="rgb(238,207,15)" fg:x="1083009" fg:w="10531"/><text x="27.5875%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (10,414 samples, 0.26%)</title><rect x="27.3404%" y="212" width="0.2629%" height="15" fill="rgb(213,199,42)" fg:x="1083126" fg:w="10414"/><text x="27.5904%" y="222.50"></text></g><g><title>forward (score_model.py:147) (78,104 samples, 1.97%)</title><rect x="27.6033%" y="164" width="1.9715%" height="15" fill="rgb(235,201,11)" fg:x="1093540" fg:w="78104"/><text x="27.8533%" y="174.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (76,749 samples, 1.94%)</title><rect x="27.6375%" y="180" width="1.9373%" height="15" fill="rgb(207,46,11)" fg:x="1094895" fg:w="76749"/><text x="27.8875%" y="190.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (76,579 samples, 1.93%)</title><rect x="27.6418%" y="196" width="1.9330%" height="15" fill="rgb(241,35,35)" fg:x="1095065" fg:w="76579"/><text x="27.8918%" y="206.50">_..</text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (76,329 samples, 1.93%)</title><rect x="27.6481%" y="212" width="1.9267%" height="15" fill="rgb(243,32,47)" fg:x="1095315" fg:w="76329"/><text x="27.8981%" y="222.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (76,240 samples, 1.92%)</title><rect x="27.6503%" y="228" width="1.9245%" height="15" fill="rgb(247,202,23)" fg:x="1095404" fg:w="76240"/><text x="27.9003%" y="238.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (76,147 samples, 1.92%)</title><rect x="27.6527%" y="244" width="1.9221%" height="15" fill="rgb(219,102,11)" fg:x="1095497" fg:w="76147"/><text x="27.9027%" y="254.50">_..</text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (39,996 samples, 1.01%)</title><rect x="29.7743%" y="260" width="1.0096%" height="15" fill="rgb(243,110,44)" fg:x="1179547" fg:w="39996"/><text x="30.0243%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (39,850 samples, 1.01%)</title><rect x="29.7780%" y="276" width="1.0059%" height="15" fill="rgb(222,74,54)" fg:x="1179693" fg:w="39850"/><text x="30.0280%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (39,772 samples, 1.00%)</title><rect x="29.7799%" y="292" width="1.0039%" height="15" fill="rgb(216,99,12)" fg:x="1179771" fg:w="39772"/><text x="30.0299%" y="302.50"></text></g><g><title>forward (score_model.py:34) (58,505 samples, 1.48%)</title><rect x="29.7323%" y="212" width="1.4768%" height="15" fill="rgb(226,22,26)" fg:x="1177885" fg:w="58505"/><text x="29.9823%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (57,269 samples, 1.45%)</title><rect x="29.7635%" y="228" width="1.4456%" height="15" fill="rgb(217,163,10)" fg:x="1179121" fg:w="57269"/><text x="30.0135%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (57,053 samples, 1.44%)</title><rect x="29.7690%" y="244" width="1.4401%" height="15" fill="rgb(213,25,53)" fg:x="1179337" fg:w="57053"/><text x="30.0190%" y="254.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (16,741 samples, 0.42%)</title><rect x="30.7866%" y="260" width="0.4226%" height="15" fill="rgb(252,105,26)" fg:x="1219649" fg:w="16741"/><text x="31.0366%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (16,515 samples, 0.42%)</title><rect x="30.7923%" y="276" width="0.4169%" height="15" fill="rgb(220,39,43)" fg:x="1219875" fg:w="16515"/><text x="31.0423%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (16,239 samples, 0.41%)</title><rect x="30.7992%" y="292" width="0.4099%" height="15" fill="rgb(229,68,48)" fg:x="1220151" fg:w="16239"/><text x="31.0492%" y="302.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (15,395 samples, 0.39%)</title><rect x="30.8205%" y="308" width="0.3886%" height="15" fill="rgb(252,8,32)" fg:x="1220995" fg:w="15395"/><text x="31.0705%" y="318.50"></text></g><g><title>forward (score_model.py:37) (7,662 samples, 0.19%)</title><rect x="31.2357%" y="212" width="0.1934%" height="15" fill="rgb(223,20,43)" fg:x="1237441" fg:w="7662"/><text x="31.4857%" y="222.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (7,606 samples, 0.19%)</title><rect x="31.2371%" y="228" width="0.1920%" height="15" fill="rgb(229,81,49)" fg:x="1237497" fg:w="7606"/><text x="31.4871%" y="238.50"></text></g><g><title>forward (score_model.py:150) (82,115 samples, 2.07%)</title><rect x="29.6658%" y="164" width="2.0728%" height="15" fill="rgb(236,28,36)" fg:x="1175250" fg:w="82115"/><text x="29.9158%" y="174.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (80,194 samples, 2.02%)</title><rect x="29.7143%" y="180" width="2.0243%" height="15" fill="rgb(249,185,26)" fg:x="1177171" fg:w="80194"/><text x="29.9643%" y="190.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (80,011 samples, 2.02%)</title><rect x="29.7189%" y="196" width="2.0196%" height="15" fill="rgb(249,174,33)" fg:x="1177354" fg:w="80011"/><text x="29.9689%" y="206.50">_..</text></g><g><title>forward (score_model.py:43) (12,121 samples, 0.31%)</title><rect x="31.4326%" y="212" width="0.3060%" height="15" fill="rgb(233,201,37)" fg:x="1245244" fg:w="12121"/><text x="31.6826%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (12,043 samples, 0.30%)</title><rect x="31.4346%" y="228" width="0.3040%" height="15" fill="rgb(221,78,26)" fg:x="1245322" fg:w="12043"/><text x="31.6846%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,867 samples, 0.30%)</title><rect x="31.4390%" y="244" width="0.2995%" height="15" fill="rgb(250,127,30)" fg:x="1245498" fg:w="11867"/><text x="31.6890%" y="254.50"></text></g><g><title>forward (score_model.py:152) (4,736 samples, 0.12%)</title><rect x="31.7386%" y="164" width="0.1195%" height="15" fill="rgb(230,49,44)" fg:x="1257365" fg:w="4736"/><text x="31.9886%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (4,585 samples, 0.12%)</title><rect x="31.7424%" y="180" width="0.1157%" height="15" fill="rgb(229,67,23)" fg:x="1257516" fg:w="4585"/><text x="31.9924%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (4,433 samples, 0.11%)</title><rect x="31.7462%" y="196" width="0.1119%" height="15" fill="rgb(249,83,47)" fg:x="1257668" fg:w="4433"/><text x="31.9962%" y="206.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (4,292 samples, 0.11%)</title><rect x="31.7498%" y="212" width="0.1083%" height="15" fill="rgb(215,43,3)" fg:x="1257809" fg:w="4292"/><text x="31.9998%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (4,140 samples, 0.10%)</title><rect x="31.7536%" y="228" width="0.1045%" height="15" fill="rgb(238,154,13)" fg:x="1257961" fg:w="4140"/><text x="32.0036%" y="238.50"></text></g><g><title>forward (score_model.py:155) (4,504 samples, 0.11%)</title><rect x="31.8823%" y="164" width="0.1137%" height="15" fill="rgb(219,56,2)" fg:x="1263060" fg:w="4504"/><text x="32.1323%" y="174.50"></text></g><g><title>forward (score_model.py:158) (4,883 samples, 0.12%)</title><rect x="31.9962%" y="164" width="0.1233%" height="15" fill="rgb(233,0,4)" fg:x="1267571" fg:w="4883"/><text x="32.2462%" y="174.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:66) (1,129,216 samples, 28.50%)</title><rect x="3.7087%" y="116" width="28.5038%" height="15" fill="rgb(235,30,7)" fg:x="146923" fg:w="1129216"/><text x="3.9587%" y="126.50">sample_forward_trajs (gfn_train.py:66)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (1,129,083 samples, 28.50%)</title><rect x="3.7120%" y="132" width="28.5005%" height="15" fill="rgb(250,79,13)" fg:x="147056" fg:w="1129083"/><text x="3.9620%" y="142.50">_wrapped_call_impl (torch/nn/modules/module.py..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (1,128,928 samples, 28.50%)</title><rect x="3.7159%" y="148" width="28.4966%" height="15" fill="rgb(211,146,34)" fg:x="147211" fg:w="1128928"/><text x="3.9659%" y="158.50">_call_impl (torch/nn/modules/module.py:1541)</text></g><g><title>sample_forward_trajs (gfn_train.py:74) (4,347 samples, 0.11%)</title><rect x="32.2802%" y="116" width="0.1097%" height="15" fill="rgb(228,22,38)" fg:x="1278820" fg:w="4347"/><text x="32.5302%" y="126.50"></text></g><g><title>p_differentiable (torus.py:15) (80,372 samples, 2.03%)</title><rect x="32.4554%" y="132" width="2.0288%" height="15" fill="rgb(235,168,5)" fg:x="1285763" fg:w="80372"/><text x="32.7054%" y="142.50">p..</text></g><g><title>wrapped (torch/_tensor.py:40) (13,985 samples, 0.35%)</title><rect x="34.1312%" y="148" width="0.3530%" height="15" fill="rgb(221,155,16)" fg:x="1352150" fg:w="13985"/><text x="34.3812%" y="158.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:78) (81,366 samples, 2.05%)</title><rect x="32.4304%" y="116" width="2.0539%" height="15" fill="rgb(215,215,53)" fg:x="1284771" fg:w="81366"/><text x="32.6804%" y="126.50">s..</text></g><g><title>sample_forward_trajs (gfn_train.py:79) (4,224 samples, 0.11%)</title><rect x="34.4842%" y="116" width="0.1066%" height="15" fill="rgb(223,4,10)" fg:x="1366137" fg:w="4224"/><text x="34.7342%" y="126.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:84) (62,195 samples, 1.57%)</title><rect x="34.6357%" y="116" width="1.5699%" height="15" fill="rgb(234,103,6)" fg:x="1372138" fg:w="62195"/><text x="34.8857%" y="126.50"></text></g><g><title>p_differentiable (torus.py:15) (61,869 samples, 1.56%)</title><rect x="34.6439%" y="132" width="1.5617%" height="15" fill="rgb(227,97,0)" fg:x="1372464" fg:w="61869"/><text x="34.8939%" y="142.50"></text></g><g><title>wrapped (torch/_tensor.py:40) (11,060 samples, 0.28%)</title><rect x="35.9265%" y="148" width="0.2792%" height="15" fill="rgb(234,150,53)" fg:x="1423273" fg:w="11060"/><text x="36.1765%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (8,419 samples, 0.21%)</title><rect x="36.5237%" y="164" width="0.2125%" height="15" fill="rgb(228,201,54)" fg:x="1446934" fg:w="8419"/><text x="36.7737%" y="174.50"></text></g><g><title>modify_conformer (torsion.py:71) (9,916 samples, 0.25%)</title><rect x="36.4881%" y="148" width="0.2503%" height="15" fill="rgb(222,22,37)" fg:x="1445522" fg:w="9916"/><text x="36.7381%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:84) (9,107 samples, 0.23%)</title><rect x="36.8509%" y="148" width="0.2299%" height="15" fill="rgb(237,53,32)" fg:x="1459897" fg:w="9107"/><text x="37.1009%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:85) (9,272 samples, 0.23%)</title><rect x="37.0808%" y="148" width="0.2340%" height="15" fill="rgb(233,25,53)" fg:x="1469004" fg:w="9272"/><text x="37.3308%" y="158.50"></text></g><g><title>modify_conformer (torsion.py:87) (16,376 samples, 0.41%)</title><rect x="37.3149%" y="148" width="0.4134%" height="15" fill="rgb(210,40,34)" fg:x="1478276" fg:w="16376"/><text x="37.5649%" y="158.50"></text></g><g><title>perturb_batch (torsion.py:108) (51,973 samples, 1.31%)</title><rect x="36.4483%" y="132" width="1.3119%" height="15" fill="rgb(241,220,44)" fg:x="1443947" fg:w="51973"/><text x="36.6983%" y="142.50"></text></g><g><title>perturb_batch (torsion.py:98) (4,076 samples, 0.10%)</title><rect x="37.8113%" y="132" width="0.1029%" height="15" fill="rgb(235,28,35)" fg:x="1497944" fg:w="4076"/><text x="38.0613%" y="142.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:895) (12,138 samples, 0.31%)</title><rect x="38.0541%" y="180" width="0.3064%" height="15" fill="rgb(210,56,17)" fg:x="1507564" fg:w="12138"/><text x="38.3041%" y="190.50"></text></g><g><title>&lt;lambda&gt; (torch_geometric/data/data.py:361) (12,055 samples, 0.30%)</title><rect x="38.0562%" y="196" width="0.3043%" height="15" fill="rgb(224,130,29)" fg:x="1507647" fg:w="12055"/><text x="38.3062%" y="206.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (4,123 samples, 0.10%)</title><rect x="38.3905%" y="212" width="0.1041%" height="15" fill="rgb(235,212,8)" fg:x="1520889" fg:w="4123"/><text x="38.6405%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (4,096 samples, 0.10%)</title><rect x="38.3912%" y="228" width="0.1034%" height="15" fill="rgb(223,33,50)" fg:x="1520916" fg:w="4096"/><text x="38.6412%" y="238.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (19,841 samples, 0.50%)</title><rect x="38.0053%" y="164" width="0.5008%" height="15" fill="rgb(219,149,13)" fg:x="1505630" fg:w="19841"/><text x="38.2553%" y="174.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (5,451 samples, 0.14%)</title><rect x="38.3686%" y="180" width="0.1376%" height="15" fill="rgb(250,156,29)" fg:x="1520020" fg:w="5451"/><text x="38.6186%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (5,390 samples, 0.14%)</title><rect x="38.3701%" y="196" width="0.1361%" height="15" fill="rgb(216,193,19)" fg:x="1520081" fg:w="5390"/><text x="38.6201%" y="206.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (21,542 samples, 0.54%)</title><rect x="37.9624%" y="132" width="0.5438%" height="15" fill="rgb(216,135,14)" fg:x="1503930" fg:w="21542"/><text x="38.2124%" y="142.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (21,414 samples, 0.54%)</title><rect x="37.9656%" y="148" width="0.5405%" height="15" fill="rgb(241,47,5)" fg:x="1504058" fg:w="21414"/><text x="38.2156%" y="158.50"></text></g><g><title>sample_forward_trajs (gfn_train.py:89) (88,478 samples, 2.23%)</title><rect x="36.2732%" y="116" width="2.2334%" height="15" fill="rgb(233,42,35)" fg:x="1437010" fg:w="88478"/><text x="36.5232%" y="126.50">s..</text></g><g><title>sample_forward_trajs (gfn_train.py:92) (12,188 samples, 0.31%)</title><rect x="38.5557%" y="116" width="0.3077%" height="15" fill="rgb(231,13,6)" fg:x="1527435" fg:w="12188"/><text x="38.8057%" y="126.50"></text></g><g><title>_deepcopy_list (copy.py:205) (4,952 samples, 0.12%)</title><rect x="38.9788%" y="276" width="0.1250%" height="15" fill="rgb(207,181,40)" fg:x="1544194" fg:w="4952"/><text x="39.2288%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (5,123 samples, 0.13%)</title><rect x="38.9745%" y="260" width="0.1293%" height="15" fill="rgb(254,173,49)" fg:x="1544024" fg:w="5123"/><text x="39.2245%" y="270.50"></text></g><g><title>deepcopy (copy.py:153) (8,723 samples, 0.22%)</title><rect x="39.1061%" y="260" width="0.2202%" height="15" fill="rgb(221,1,38)" fg:x="1549240" fg:w="8723"/><text x="39.3561%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (14,644 samples, 0.37%)</title><rect x="38.9622%" y="228" width="0.3696%" height="15" fill="rgb(206,124,46)" fg:x="1543539" fg:w="14644"/><text x="39.2122%" y="238.50"></text></g><g><title>_deepcopy_list (copy.py:205) (14,425 samples, 0.36%)</title><rect x="38.9678%" y="244" width="0.3641%" height="15" fill="rgb(249,21,11)" fg:x="1543758" fg:w="14425"/><text x="39.2178%" y="254.50"></text></g><g><title>__deepcopy__ (torch/storage.py:114) (11,597 samples, 0.29%)</title><rect x="39.5035%" y="292" width="0.2927%" height="15" fill="rgb(222,201,40)" fg:x="1564984" fg:w="11597"/><text x="39.7535%" y="302.50"></text></g><g><title>clone (torch/storage.py:128) (11,489 samples, 0.29%)</title><rect x="39.5063%" y="308" width="0.2900%" height="15" fill="rgb(235,61,29)" fg:x="1565092" fg:w="11489"/><text x="39.7563%" y="318.50"></text></g><g><title>deepcopy (copy.py:153) (12,118 samples, 0.31%)</title><rect x="39.4948%" y="276" width="0.3059%" height="15" fill="rgb(219,207,3)" fg:x="1564639" fg:w="12118"/><text x="39.7448%" y="286.50"></text></g><g><title>_deepcopy (torch/storage.py:853) (16,583 samples, 0.42%)</title><rect x="39.3945%" y="260" width="0.4186%" height="15" fill="rgb(222,56,46)" fg:x="1560663" fg:w="16583"/><text x="39.6445%" y="270.50"></text></g><g><title>__deepcopy__ (torch/_tensor.py:122) (18,412 samples, 0.46%)</title><rect x="39.3883%" y="244" width="0.4648%" height="15" fill="rgb(239,76,54)" fg:x="1560420" fg:w="18412"/><text x="39.6383%" y="254.50"></text></g><g><title>deepcopy (copy.py:153) (31,494 samples, 0.79%)</title><rect x="39.3348%" y="228" width="0.7950%" height="15" fill="rgb(231,124,27)" fg:x="1558298" fg:w="31494"/><text x="39.5848%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (47,379 samples, 1.20%)</title><rect x="38.9430%" y="196" width="1.1959%" height="15" fill="rgb(249,195,6)" fg:x="1542776" fg:w="47379"/><text x="39.1930%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (47,282 samples, 1.19%)</title><rect x="38.9454%" y="212" width="1.1935%" height="15" fill="rgb(237,174,47)" fg:x="1542873" fg:w="47282"/><text x="39.1954%" y="222.50"></text></g><g><title>deepcopy (copy.py:153) (47,652 samples, 1.20%)</title><rect x="38.9364%" y="164" width="1.2028%" height="15" fill="rgb(206,201,31)" fg:x="1542517" fg:w="47652"/><text x="39.1864%" y="174.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/storage.py:147) (47,547 samples, 1.20%)</title><rect x="38.9391%" y="180" width="1.2002%" height="15" fill="rgb(231,57,52)" fg:x="1542622" fg:w="47547"/><text x="39.1891%" y="190.50"></text></g><g><title>__deepcopy__ (torch_geometric/data/data.py:595) (47,837 samples, 1.21%)</title><rect x="38.9328%" y="148" width="1.2075%" height="15" fill="rgb(248,177,22)" fg:x="1542372" fg:w="47837"/><text x="39.1828%" y="158.50"></text></g><g><title>deepcopy (copy.py:153) (48,021 samples, 1.21%)</title><rect x="38.9307%" y="132" width="1.2122%" height="15" fill="rgb(215,211,37)" fg:x="1542289" fg:w="48021"/><text x="39.1807%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:397) (1,459,458 samples, 36.84%)</title><rect x="3.3033%" y="100" width="36.8398%" height="15" fill="rgb(241,128,51)" fg:x="130866" fg:w="1459458"/><text x="3.5533%" y="110.50">gfn_sgd (gfn_train.py:397)</text></g><g><title>sample_forward_trajs (gfn_train.py:97) (48,310 samples, 1.22%)</title><rect x="38.9237%" y="116" width="1.2194%" height="15" fill="rgb(227,165,31)" fg:x="1542014" fg:w="48310"/><text x="39.1737%" y="126.50"></text></g><g><title>mmff_energy (likelihood.py:21) (6,368 samples, 0.16%)</title><rect x="42.1660%" y="164" width="0.1607%" height="15" fill="rgb(228,167,24)" fg:x="1670460" fg:w="6368"/><text x="42.4160%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (gfn_train.py:205) (12,685 samples, 0.32%)</title><rect x="42.1011%" y="148" width="0.3202%" height="15" fill="rgb(228,143,12)" fg:x="1667888" fg:w="12685"/><text x="42.3511%" y="158.50"></text></g><g><title>get_logrew (gfn_train.py:205) (12,692 samples, 0.32%)</title><rect x="42.1010%" y="132" width="0.3204%" height="15" fill="rgb(249,149,8)" fg:x="1667884" fg:w="12692"/><text x="42.3510%" y="142.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:294) (12,871 samples, 0.32%)</title><rect x="42.0996%" y="116" width="0.3249%" height="15" fill="rgb(243,35,44)" fg:x="1667830" fg:w="12871"/><text x="42.3496%" y="126.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (9,704 samples, 0.24%)</title><rect x="42.7124%" y="212" width="0.2449%" height="15" fill="rgb(246,89,9)" fg:x="1692105" fg:w="9704"/><text x="42.9624%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (9,598 samples, 0.24%)</title><rect x="42.7150%" y="228" width="0.2423%" height="15" fill="rgb(233,213,13)" fg:x="1692211" fg:w="9598"/><text x="42.9650%" y="238.50"></text></g><g><title>apply (torch_geometric/data/storage.py:201) (19,315 samples, 0.49%)</title><rect x="42.4972%" y="164" width="0.4876%" height="15" fill="rgb(233,141,41)" fg:x="1683583" fg:w="19315"/><text x="42.7472%" y="174.50"></text></g><g><title>recursive_apply (torch_geometric/data/storage.py:901) (12,861 samples, 0.32%)</title><rect x="42.6602%" y="180" width="0.3246%" height="15" fill="rgb(239,167,4)" fg:x="1690037" fg:w="12861"/><text x="42.9102%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch_geometric/data/storage.py:901) (12,728 samples, 0.32%)</title><rect x="42.6635%" y="196" width="0.3213%" height="15" fill="rgb(209,217,16)" fg:x="1690170" fg:w="12728"/><text x="42.9135%" y="206.50"></text></g><g><title>apply (torch_geometric/data/data.py:340) (20,650 samples, 0.52%)</title><rect x="42.4636%" y="148" width="0.5213%" height="15" fill="rgb(219,88,35)" fg:x="1682250" fg:w="20650"/><text x="42.7136%" y="158.50"></text></g><g><title>to (torch_geometric/data/data.py:360) (20,914 samples, 0.53%)</title><rect x="42.4570%" y="132" width="0.5279%" height="15" fill="rgb(220,193,23)" fg:x="1681987" fg:w="20914"/><text x="42.7070%" y="142.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:305) (21,180 samples, 0.53%)</title><rect x="42.4515%" y="116" width="0.5346%" height="15" fill="rgb(230,90,52)" fg:x="1681770" fg:w="21180"/><text x="42.7015%" y="126.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:306) (7,654 samples, 0.19%)</title><rect x="42.9861%" y="116" width="0.1932%" height="15" fill="rgb(252,106,19)" fg:x="1702950" fg:w="7654"/><text x="43.2361%" y="126.50"></text></g><g><title>radius (torch_cluster/radius.py:82) (17,655 samples, 0.45%)</title><rect x="43.5075%" y="212" width="0.4457%" height="15" fill="rgb(206,74,20)" fg:x="1723607" fg:w="17655"/><text x="43.7575%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:854) (17,345 samples, 0.44%)</title><rect x="43.5154%" y="228" width="0.4378%" height="15" fill="rgb(230,138,44)" fg:x="1723917" fg:w="17345"/><text x="43.7654%" y="238.50"></text></g><g><title>radius_graph (torch_cluster/radius.py:135) (27,281 samples, 0.69%)</title><rect x="43.2646%" y="196" width="0.6886%" height="15" fill="rgb(235,182,43)" fg:x="1713982" fg:w="27281"/><text x="43.5146%" y="206.50"></text></g><g><title>radius_graph (torch_cluster/radius.py:145) (8,913 samples, 0.22%)</title><rect x="44.0040%" y="196" width="0.2250%" height="15" fill="rgb(242,16,51)" fg:x="1743276" fg:w="8913"/><text x="44.2540%" y="206.50"></text></g><g><title>build_conv_graph (score_model.py:181) (40,971 samples, 1.03%)</title><rect x="43.2370%" y="180" width="1.0342%" height="15" fill="rgb(248,9,4)" fg:x="1712889" fg:w="40971"/><text x="43.4870%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:188) (5,719 samples, 0.14%)</title><rect x="44.3928%" y="180" width="0.1444%" height="15" fill="rgb(210,31,22)" fg:x="1758677" fg:w="5719"/><text x="44.6428%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:189) (9,751 samples, 0.25%)</title><rect x="44.5371%" y="180" width="0.2461%" height="15" fill="rgb(239,54,39)" fg:x="1764396" fg:w="9751"/><text x="44.7871%" y="190.50"></text></g><g><title>build_conv_graph (score_model.py:196) (4,263 samples, 0.11%)</title><rect x="44.9331%" y="180" width="0.1076%" height="15" fill="rgb(230,99,41)" fg:x="1780081" fg:w="4263"/><text x="45.1831%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,509 samples, 0.16%)</title><rect x="45.0551%" y="196" width="0.1643%" height="15" fill="rgb(253,106,12)" fg:x="1784915" fg:w="6509"/><text x="45.3051%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,156 samples, 0.16%)</title><rect x="45.0640%" y="212" width="0.1554%" height="15" fill="rgb(213,46,41)" fg:x="1785268" fg:w="6156"/><text x="45.3140%" y="222.50"></text></g><g><title>build_conv_graph (score_model.py:197) (9,758 samples, 0.25%)</title><rect x="45.0407%" y="180" width="0.2463%" height="15" fill="rgb(215,133,35)" fg:x="1784344" fg:w="9758"/><text x="45.2907%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:183) (6,802 samples, 0.17%)</title><rect x="45.3368%" y="196" width="0.1717%" height="15" fill="rgb(213,28,5)" fg:x="1796075" fg:w="6802"/><text x="45.5868%" y="206.50"></text></g><g><title>normalize (torch/nn/functional.py:4780) (4,058 samples, 0.10%)</title><rect x="45.5293%" y="260" width="0.1024%" height="15" fill="rgb(215,77,49)" fg:x="1803700" fg:w="4058"/><text x="45.7793%" y="270.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:90) (5,432 samples, 0.14%)</title><rect x="45.5200%" y="244" width="0.1371%" height="15" fill="rgb(248,100,22)" fg:x="1803333" fg:w="5432"/><text x="45.7700%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (15,723 samples, 0.40%)</title><rect x="45.6571%" y="244" width="0.3969%" height="15" fill="rgb(208,67,9)" fg:x="1808765" fg:w="15723"/><text x="45.9071%" y="254.50"></text></g><g><title>build_conv_graph (score_model.py:201) (28,806 samples, 0.73%)</title><rect x="45.3280%" y="180" width="0.7271%" height="15" fill="rgb(219,133,21)" fg:x="1795727" fg:w="28806"/><text x="45.5780%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (21,656 samples, 0.55%)</title><rect x="45.5085%" y="196" width="0.5466%" height="15" fill="rgb(246,46,29)" fg:x="1802877" fg:w="21656"/><text x="45.7585%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (21,615 samples, 0.55%)</title><rect x="45.5095%" y="212" width="0.5456%" height="15" fill="rgb(246,185,52)" fg:x="1802918" fg:w="21615"/><text x="45.7595%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (21,398 samples, 0.54%)</title><rect x="45.5150%" y="228" width="0.5401%" height="15" fill="rgb(252,136,11)" fg:x="1803135" fg:w="21398"/><text x="45.7650%" y="238.50"></text></g><g><title>forward (score_model.py:131) (112,459 samples, 2.84%)</title><rect x="43.2166%" y="164" width="2.8387%" height="15" fill="rgb(219,138,53)" fg:x="1712083" fg:w="112459"/><text x="43.4666%" y="174.50">fo..</text></g><g><title>forward (torch/nn/modules/container.py:217) (11,082 samples, 0.28%)</title><rect x="46.0959%" y="212" width="0.2797%" height="15" fill="rgb(211,51,23)" fg:x="1826150" fg:w="11082"/><text x="46.3459%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (10,754 samples, 0.27%)</title><rect x="46.1042%" y="228" width="0.2715%" height="15" fill="rgb(247,221,28)" fg:x="1826478" fg:w="10754"/><text x="46.3542%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (10,212 samples, 0.26%)</title><rect x="46.1179%" y="244" width="0.2578%" height="15" fill="rgb(251,222,45)" fg:x="1827020" fg:w="10212"/><text x="46.3679%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (8,423 samples, 0.21%)</title><rect x="46.1631%" y="260" width="0.2126%" height="15" fill="rgb(217,162,53)" fg:x="1828809" fg:w="8423"/><text x="46.4131%" y="270.50"></text></g><g><title>forward (score_model.py:134) (11,806 samples, 0.30%)</title><rect x="46.0777%" y="164" width="0.2980%" height="15" fill="rgb(229,93,14)" fg:x="1825428" fg:w="11806"/><text x="46.3277%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (11,473 samples, 0.29%)</title><rect x="46.0861%" y="180" width="0.2896%" height="15" fill="rgb(209,67,49)" fg:x="1825761" fg:w="11473"/><text x="46.3361%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (11,302 samples, 0.29%)</title><rect x="46.0904%" y="196" width="0.2853%" height="15" fill="rgb(213,87,29)" fg:x="1825932" fg:w="11302"/><text x="46.3404%" y="206.50"></text></g><g><title>forward (score_model.py:135) (7,090 samples, 0.18%)</title><rect x="46.3757%" y="164" width="0.1790%" height="15" fill="rgb(205,151,52)" fg:x="1837234" fg:w="7090"/><text x="46.6257%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,907 samples, 0.17%)</title><rect x="46.3803%" y="180" width="0.1743%" height="15" fill="rgb(253,215,39)" fg:x="1837417" fg:w="6907"/><text x="46.6303%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,756 samples, 0.17%)</title><rect x="46.3842%" y="196" width="0.1705%" height="15" fill="rgb(221,220,41)" fg:x="1837568" fg:w="6756"/><text x="46.6342%" y="206.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (6,624 samples, 0.17%)</title><rect x="46.3875%" y="212" width="0.1672%" height="15" fill="rgb(218,133,21)" fg:x="1837700" fg:w="6624"/><text x="46.6375%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,304 samples, 0.16%)</title><rect x="46.3956%" y="228" width="0.1591%" height="15" fill="rgb(221,193,43)" fg:x="1838020" fg:w="6304"/><text x="46.6456%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (5,919 samples, 0.15%)</title><rect x="46.4053%" y="244" width="0.1494%" height="15" fill="rgb(240,128,52)" fg:x="1838405" fg:w="5919"/><text x="46.6553%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (4,545 samples, 0.11%)</title><rect x="46.4400%" y="260" width="0.1147%" height="15" fill="rgb(253,114,12)" fg:x="1839779" fg:w="4545"/><text x="46.6900%" y="270.50"></text></g><g><title>forward (score_model.py:138) (22,934 samples, 0.58%)</title><rect x="46.5653%" y="164" width="0.5789%" height="15" fill="rgb(215,223,47)" fg:x="1844746" fg:w="22934"/><text x="46.8153%" y="174.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (436,165 samples, 11.01%)</title><rect x="47.6265%" y="260" width="11.0097%" height="15" fill="rgb(248,225,23)" fg:x="1886786" fg:w="436165"/><text x="47.8765%" y="270.50">forward (e3nn/o3..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (435,161 samples, 10.98%)</title><rect x="47.6519%" y="276" width="10.9844%" height="15" fill="rgb(250,108,0)" fg:x="1887790" fg:w="435161"/><text x="47.9019%" y="286.50">_wrapped_call_im..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (434,540 samples, 10.97%)</title><rect x="47.6675%" y="292" width="10.9687%" height="15" fill="rgb(228,208,7)" fg:x="1888411" fg:w="434540"/><text x="47.9175%" y="302.50">_call_impl (torc..</text></g><g><title>relu (torch/nn/functional.py:1500) (5,654 samples, 0.14%)</title><rect x="58.7483%" y="324" width="0.1427%" height="15" fill="rgb(244,45,10)" fg:x="2327389" fg:w="5654"/><text x="58.9983%" y="334.50"></text></g><g><title>forward (torch/nn/modules/activation.py:103) (6,040 samples, 0.15%)</title><rect x="58.7389%" y="308" width="0.1525%" height="15" fill="rgb(207,125,25)" fg:x="2327018" fg:w="6040"/><text x="58.9889%" y="318.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (228,104 samples, 5.76%)</title><rect x="58.6521%" y="260" width="5.7578%" height="15" fill="rgb(210,195,18)" fg:x="2323578" fg:w="228104"/><text x="58.9021%" y="270.50">forward..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (226,716 samples, 5.72%)</title><rect x="58.6871%" y="276" width="5.7228%" height="15" fill="rgb(249,80,12)" fg:x="2324966" fg:w="226716"/><text x="58.9371%" y="286.50">_wrappe..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (224,983 samples, 5.68%)</title><rect x="58.7309%" y="292" width="5.6791%" height="15" fill="rgb(221,65,9)" fg:x="2326699" fg:w="224983"/><text x="58.9809%" y="302.50">_call_i..</text></g><g><title>forward (torch/nn/modules/linear.py:116) (218,622 samples, 5.52%)</title><rect x="58.8914%" y="308" width="5.5185%" height="15" fill="rgb(235,49,36)" fg:x="2333060" fg:w="218622"/><text x="59.1414%" y="318.50">forward..</text></g><g><title>forward (score_model.py:34) (676,986 samples, 17.09%)</title><rect x="47.3214%" y="212" width="17.0886%" height="15" fill="rgb(225,32,20)" fg:x="1874698" fg:w="676986"/><text x="47.5714%" y="222.50">forward (score_model.py:34)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (668,532 samples, 16.88%)</title><rect x="47.5348%" y="228" width="16.8752%" height="15" fill="rgb(215,141,46)" fg:x="1883152" fg:w="668532"/><text x="47.7848%" y="238.50">_wrapped_call_impl (torch/..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (666,795 samples, 16.83%)</title><rect x="47.5786%" y="244" width="16.8313%" height="15" fill="rgb(250,160,47)" fg:x="1884889" fg:w="666795"/><text x="47.8286%" y="254.50">_call_impl (torch/nn/modul..</text></g><g><title>scatter_sum (torch_scatter/scatter.py:11) (4,936 samples, 0.12%)</title><rect x="64.4631%" y="260" width="0.1246%" height="15" fill="rgb(216,222,40)" fg:x="2553790" fg:w="4936"/><text x="64.7131%" y="270.50"></text></g><g><title>scatter_sum (torch_scatter/scatter.py:20) (6,788 samples, 0.17%)</title><rect x="64.5996%" y="260" width="0.1713%" height="15" fill="rgb(234,217,39)" fg:x="2559198" fg:w="6788"/><text x="64.8496%" y="270.50"></text></g><g><title>scatter_sum (torch_scatter/scatter.py:21) (7,489 samples, 0.19%)</title><rect x="64.7710%" y="260" width="0.1890%" height="15" fill="rgb(207,178,40)" fg:x="2565986" fg:w="7489"/><text x="65.0210%" y="270.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:41) (19,991 samples, 0.50%)</title><rect x="64.4554%" y="244" width="0.5046%" height="15" fill="rgb(221,136,13)" fg:x="2553485" fg:w="19991"/><text x="64.7054%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:50) (4,710 samples, 0.12%)</title><rect x="64.9719%" y="244" width="0.1189%" height="15" fill="rgb(249,199,10)" fg:x="2573945" fg:w="4710"/><text x="65.2219%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:51) (9,571 samples, 0.24%)</title><rect x="65.0908%" y="244" width="0.2416%" height="15" fill="rgb(249,222,13)" fg:x="2578655" fg:w="9571"/><text x="65.3408%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:52) (12,021 samples, 0.30%)</title><rect x="65.3324%" y="244" width="0.3034%" height="15" fill="rgb(244,185,38)" fg:x="2588226" fg:w="12021"/><text x="65.5824%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:55) (5,597 samples, 0.14%)</title><rect x="65.7277%" y="244" width="0.1413%" height="15" fill="rgb(236,202,9)" fg:x="2603886" fg:w="5597"/><text x="65.9777%" y="254.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (56,825 samples, 1.43%)</title><rect x="64.4347%" y="228" width="1.4344%" height="15" fill="rgb(250,229,37)" fg:x="2552664" fg:w="56825"/><text x="64.6847%" y="238.50"></text></g><g><title>forward (score_model.py:37) (57,287 samples, 1.45%)</title><rect x="64.4231%" y="212" width="1.4460%" height="15" fill="rgb(206,174,23)" fg:x="2552205" fg:w="57287"/><text x="64.6731%" y="222.50"></text></g><g><title>forward (score_model.py:39) (11,256 samples, 0.28%)</title><rect x="65.8719%" y="212" width="0.2841%" height="15" fill="rgb(211,33,43)" fg:x="2609602" fg:w="11256"/><text x="66.1219%" y="222.50"></text></g><g><title>pad (torch/nn/functional.py:4522) (9,894 samples, 0.25%)</title><rect x="65.9063%" y="228" width="0.2497%" height="15" fill="rgb(245,58,50)" fg:x="2610964" fg:w="9894"/><text x="66.1563%" y="238.50"></text></g><g><title>forward (score_model.py:40) (5,067 samples, 0.13%)</title><rect x="66.1561%" y="212" width="0.1279%" height="15" fill="rgb(244,68,36)" fg:x="2620858" fg:w="5067"/><text x="66.4061%" y="222.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:105) (15,001 samples, 0.38%)</title><rect x="66.5043%" y="260" width="0.3787%" height="15" fill="rgb(232,229,15)" fg:x="2634653" fg:w="15001"/><text x="66.7543%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:109) (8,139 samples, 0.21%)</title><rect x="66.8868%" y="260" width="0.2054%" height="15" fill="rgb(254,30,23)" fg:x="2649806" fg:w="8139"/><text x="67.1368%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:116) (8,637 samples, 0.22%)</title><rect x="67.1135%" y="260" width="0.2180%" height="15" fill="rgb(235,160,14)" fg:x="2658789" fg:w="8637"/><text x="67.3635%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:117) (16,460 samples, 0.42%)</title><rect x="67.3315%" y="260" width="0.4155%" height="15" fill="rgb(212,155,44)" fg:x="2667426" fg:w="16460"/><text x="67.5815%" y="270.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (13,915 samples, 0.35%)</title><rect x="67.3958%" y="276" width="0.3512%" height="15" fill="rgb(226,2,50)" fg:x="2669971" fg:w="13915"/><text x="67.6458%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:123) (6,676 samples, 0.17%)</title><rect x="67.7481%" y="260" width="0.1685%" height="15" fill="rgb(234,177,6)" fg:x="2683930" fg:w="6676"/><text x="67.9981%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:129) (37,227 samples, 0.94%)</title><rect x="67.9288%" y="260" width="0.9397%" height="15" fill="rgb(217,24,9)" fg:x="2691087" fg:w="37227"/><text x="68.1788%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:134) (14,069 samples, 0.36%)</title><rect x="68.8750%" y="260" width="0.3551%" height="15" fill="rgb(220,13,46)" fg:x="2728570" fg:w="14069"/><text x="69.1250%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:141) (13,493 samples, 0.34%)</title><rect x="69.2346%" y="260" width="0.3406%" height="15" fill="rgb(239,221,27)" fg:x="2742817" fg:w="13493"/><text x="69.4846%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (64,855 samples, 1.64%)</title><rect x="69.5752%" y="260" width="1.6371%" height="15" fill="rgb(222,198,25)" fg:x="2756310" fg:w="64855"/><text x="69.8252%" y="270.50"></text></g><g><title>_roll_avg (e3nn/nn/_batchnorm.py:74) (56,073 samples, 1.42%)</title><rect x="69.7968%" y="276" width="1.4154%" height="15" fill="rgb(211,99,13)" fg:x="2765092" fg:w="56073"/><text x="70.0468%" y="286.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:147) (28,654 samples, 0.72%)</title><rect x="71.2154%" y="260" width="0.7233%" height="15" fill="rgb(232,111,31)" fg:x="2821291" fg:w="28654"/><text x="71.4654%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:150) (8,363 samples, 0.21%)</title><rect x="71.9453%" y="260" width="0.2111%" height="15" fill="rgb(245,82,37)" fg:x="2850205" fg:w="8363"/><text x="72.1953%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:153) (12,380 samples, 0.31%)</title><rect x="72.1591%" y="260" width="0.3125%" height="15" fill="rgb(227,149,46)" fg:x="2858675" fg:w="12380"/><text x="72.4091%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:155) (19,429 samples, 0.49%)</title><rect x="72.4716%" y="260" width="0.4904%" height="15" fill="rgb(218,36,50)" fg:x="2871055" fg:w="19429"/><text x="72.7216%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:160) (6,454 samples, 0.16%)</title><rect x="73.0433%" y="260" width="0.1629%" height="15" fill="rgb(226,80,48)" fg:x="2893703" fg:w="6454"/><text x="73.2933%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:162) (4,462 samples, 0.11%)</title><rect x="73.2062%" y="260" width="0.1126%" height="15" fill="rgb(238,224,15)" fg:x="2900157" fg:w="4462"/><text x="73.4562%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:178) (9,665 samples, 0.24%)</title><rect x="73.3733%" y="260" width="0.2440%" height="15" fill="rgb(241,136,10)" fg:x="2906778" fg:w="9665"/><text x="73.6233%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:180) (4,011 samples, 0.10%)</title><rect x="73.6188%" y="260" width="0.1012%" height="15" fill="rgb(208,32,45)" fg:x="2916504" fg:w="4011"/><text x="73.8688%" y="270.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:182) (5,749 samples, 0.15%)</title><rect x="73.7201%" y="260" width="0.1451%" height="15" fill="rgb(207,135,9)" fg:x="2920515" fg:w="5749"/><text x="73.9701%" y="270.50"></text></g><g><title>forward (score_model.py:43) (304,000 samples, 7.67%)</title><rect x="66.3128%" y="212" width="7.6736%" height="15" fill="rgb(206,86,44)" fg:x="2627066" fg:w="304000"/><text x="66.5628%" y="222.50">forward (sc..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (303,318 samples, 7.66%)</title><rect x="66.3300%" y="228" width="7.6564%" height="15" fill="rgb(245,177,15)" fg:x="2627748" fg:w="303318"/><text x="66.5800%" y="238.50">_wrapped_c..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (302,042 samples, 7.62%)</title><rect x="66.3622%" y="244" width="7.6242%" height="15" fill="rgb(206,64,50)" fg:x="2629024" fg:w="302042"/><text x="66.6122%" y="254.50">_call_impl..</text></g><g><title>forward (score_model.py:139) (1,063,392 samples, 26.84%)</title><rect x="47.1442%" y="164" width="26.8423%" height="15" fill="rgb(234,36,40)" fg:x="1867680" fg:w="1063392"/><text x="47.3942%" y="174.50">forward (score_model.py:139)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (1,062,157 samples, 26.81%)</title><rect x="47.1754%" y="180" width="26.8111%" height="15" fill="rgb(213,64,8)" fg:x="1868915" fg:w="1062157"/><text x="47.4254%" y="190.50">_wrapped_call_impl (torch/nn/modules/module..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (1,060,780 samples, 26.78%)</title><rect x="47.2102%" y="196" width="26.7764%" height="15" fill="rgb(210,75,36)" fg:x="1870292" fg:w="1060780"/><text x="47.4602%" y="206.50">_call_impl (torch/nn/modules/module.py:1541)</text></g><g><title>build_bond_conv_graph (score_model.py:165) (7,261 samples, 0.18%)</title><rect x="74.0024%" y="180" width="0.1833%" height="15" fill="rgb(229,88,21)" fg:x="2931700" fg:w="7261"/><text x="74.2524%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:166) (5,742 samples, 0.14%)</title><rect x="74.1857%" y="180" width="0.1449%" height="15" fill="rgb(252,204,47)" fg:x="2938961" fg:w="5742"/><text x="74.4357%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:168) (23,092 samples, 0.58%)</title><rect x="74.3743%" y="180" width="0.5829%" height="15" fill="rgb(208,77,27)" fg:x="2946435" fg:w="23092"/><text x="74.6243%" y="190.50"></text></g><g><title>radius (torch_cluster/radius.py:82) (14,254 samples, 0.36%)</title><rect x="74.5974%" y="196" width="0.3598%" height="15" fill="rgb(221,76,26)" fg:x="2955273" fg:w="14254"/><text x="74.8474%" y="206.50"></text></g><g><title>__call__ (torch/_ops.py:854) (13,969 samples, 0.35%)</title><rect x="74.6046%" y="212" width="0.3526%" height="15" fill="rgb(225,139,18)" fg:x="2955558" fg:w="13969"/><text x="74.8546%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:170) (4,741 samples, 0.12%)</title><rect x="74.9572%" y="180" width="0.1197%" height="15" fill="rgb(230,137,11)" fg:x="2969527" fg:w="4741"/><text x="75.2072%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (5,637 samples, 0.14%)</title><rect x="75.0912%" y="196" width="0.1423%" height="15" fill="rgb(212,28,1)" fg:x="2974834" fg:w="5637"/><text x="75.3412%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (5,275 samples, 0.13%)</title><rect x="75.1003%" y="212" width="0.1332%" height="15" fill="rgb(248,164,17)" fg:x="2975196" fg:w="5275"/><text x="75.3503%" y="222.50"></text></g><g><title>build_bond_conv_graph (score_model.py:171) (8,710 samples, 0.22%)</title><rect x="75.0769%" y="180" width="0.2199%" height="15" fill="rgb(222,171,42)" fg:x="2974268" fg:w="8710"/><text x="75.3269%" y="190.50"></text></g><g><title>build_bond_conv_graph (score_model.py:173) (8,548 samples, 0.22%)</title><rect x="75.2968%" y="180" width="0.2158%" height="15" fill="rgb(243,84,45)" fg:x="2982978" fg:w="8548"/><text x="75.5468%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (8,324 samples, 0.21%)</title><rect x="75.3024%" y="196" width="0.2101%" height="15" fill="rgb(252,49,23)" fg:x="2983202" fg:w="8324"/><text x="75.5524%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (8,136 samples, 0.21%)</title><rect x="75.3072%" y="212" width="0.2054%" height="15" fill="rgb(215,19,7)" fg:x="2983390" fg:w="8136"/><text x="75.5572%" y="222.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (7,940 samples, 0.20%)</title><rect x="75.3121%" y="228" width="0.2004%" height="15" fill="rgb(238,81,41)" fg:x="2983586" fg:w="7940"/><text x="75.5621%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,610 samples, 0.19%)</title><rect x="75.3204%" y="244" width="0.1921%" height="15" fill="rgb(210,199,37)" fg:x="2983916" fg:w="7610"/><text x="75.5704%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (7,122 samples, 0.18%)</title><rect x="75.3327%" y="260" width="0.1798%" height="15" fill="rgb(244,192,49)" fg:x="2984404" fg:w="7122"/><text x="75.5827%" y="270.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (5,560 samples, 0.14%)</title><rect x="75.3722%" y="276" width="0.1403%" height="15" fill="rgb(226,211,11)" fg:x="2985966" fg:w="5560"/><text x="75.6222%" y="286.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:183) (6,222 samples, 0.16%)</title><rect x="75.5192%" y="196" width="0.1571%" height="15" fill="rgb(236,162,54)" fg:x="2991792" fg:w="6222"/><text x="75.7692%" y="206.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:90) (5,370 samples, 0.14%)</title><rect x="75.6862%" y="244" width="0.1356%" height="15" fill="rgb(220,229,9)" fg:x="2998407" fg:w="5370"/><text x="75.9362%" y="254.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (13,113 samples, 0.33%)</title><rect x="75.8218%" y="244" width="0.3310%" height="15" fill="rgb(250,87,22)" fg:x="3003777" fg:w="13113"/><text x="76.0718%" y="254.50"></text></g><g><title>build_bond_conv_graph (score_model.py:175) (25,424 samples, 0.64%)</title><rect x="75.5125%" y="180" width="0.6418%" height="15" fill="rgb(239,43,17)" fg:x="2991526" fg:w="25424"/><text x="75.7625%" y="190.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (18,936 samples, 0.48%)</title><rect x="75.6763%" y="196" width="0.4780%" height="15" fill="rgb(231,177,25)" fg:x="2998014" fg:w="18936"/><text x="75.9263%" y="206.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (18,873 samples, 0.48%)</title><rect x="75.6779%" y="212" width="0.4764%" height="15" fill="rgb(219,179,1)" fg:x="2998077" fg:w="18873"/><text x="75.9279%" y="222.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (18,681 samples, 0.47%)</title><rect x="75.6827%" y="228" width="0.4715%" height="15" fill="rgb(238,219,53)" fg:x="2998269" fg:w="18681"/><text x="75.9327%" y="238.50"></text></g><g><title>forward (score_model.py:141) (85,890 samples, 2.17%)</title><rect x="73.9865%" y="164" width="2.1680%" height="15" fill="rgb(232,167,36)" fg:x="2931072" fg:w="85890"/><text x="74.2365%" y="174.50">f..</text></g><g><title>forward (score_model.py:143) (5,105 samples, 0.13%)</title><rect x="76.1546%" y="164" width="0.1289%" height="15" fill="rgb(244,19,51)" fg:x="3016962" fg:w="5105"/><text x="76.4046%" y="174.50"></text></g><g><title>forward (score_model.py:144) (4,383 samples, 0.11%)</title><rect x="76.2834%" y="164" width="0.1106%" height="15" fill="rgb(224,6,22)" fg:x="3022067" fg:w="4383"/><text x="76.5334%" y="174.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:183) (5,049 samples, 0.13%)</title><rect x="76.3996%" y="180" width="0.1274%" height="15" fill="rgb(224,145,5)" fg:x="3026669" fg:w="5049"/><text x="76.6496%" y="190.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:90) (4,778 samples, 0.12%)</title><rect x="76.5366%" y="228" width="0.1206%" height="15" fill="rgb(234,130,49)" fg:x="3032097" fg:w="4778"/><text x="76.7866%" y="238.50"></text></g><g><title>forward (e3nn/o3/_spherical_harmonics.py:92) (12,174 samples, 0.31%)</title><rect x="76.6572%" y="228" width="0.3073%" height="15" fill="rgb(254,6,2)" fg:x="3036875" fg:w="12174"/><text x="76.9072%" y="238.50"></text></g><g><title>forward (score_model.py:146) (25,605 samples, 0.65%)</title><rect x="76.3941%" y="164" width="0.6463%" height="15" fill="rgb(208,96,46)" fg:x="3026450" fg:w="25605"/><text x="76.6441%" y="174.50"></text></g><g><title>spherical_harmonics (e3nn/o3/_spherical_harmonics.py:184) (20,337 samples, 0.51%)</title><rect x="76.5271%" y="180" width="0.5133%" height="15" fill="rgb(239,3,39)" fg:x="3031718" fg:w="20337"/><text x="76.7771%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (20,292 samples, 0.51%)</title><rect x="76.5282%" y="196" width="0.5122%" height="15" fill="rgb(233,210,1)" fg:x="3031763" fg:w="20292"/><text x="76.7782%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (20,077 samples, 0.51%)</title><rect x="76.5336%" y="212" width="0.5068%" height="15" fill="rgb(244,137,37)" fg:x="3031978" fg:w="20077"/><text x="76.7836%" y="222.50"></text></g><g><title>forward (score_model.py:147) (43,376 samples, 1.09%)</title><rect x="77.0404%" y="164" width="1.0949%" height="15" fill="rgb(240,136,2)" fg:x="3052055" fg:w="43376"/><text x="77.2904%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (40,586 samples, 1.02%)</title><rect x="77.1108%" y="180" width="1.0245%" height="15" fill="rgb(239,18,37)" fg:x="3054845" fg:w="40586"/><text x="77.3608%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (40,319 samples, 1.02%)</title><rect x="77.1176%" y="196" width="1.0177%" height="15" fill="rgb(218,185,22)" fg:x="3055112" fg:w="40319"/><text x="77.3676%" y="206.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (39,822 samples, 1.01%)</title><rect x="77.1301%" y="212" width="1.0052%" height="15" fill="rgb(225,218,4)" fg:x="3055609" fg:w="39822"/><text x="77.3801%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (39,655 samples, 1.00%)</title><rect x="77.1343%" y="228" width="1.0010%" height="15" fill="rgb(230,182,32)" fg:x="3055776" fg:w="39655"/><text x="77.3843%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (39,497 samples, 1.00%)</title><rect x="77.1383%" y="244" width="0.9970%" height="15" fill="rgb(242,56,43)" fg:x="3055934" fg:w="39497"/><text x="77.3883%" y="254.50"></text></g><g><title>forward (score_model.py:149) (6,907 samples, 0.17%)</title><rect x="78.1353%" y="164" width="0.1743%" height="15" fill="rgb(233,99,24)" fg:x="3095431" fg:w="6907"/><text x="78.3853%" y="174.50"></text></g><g><title>forward (e3nn/o3/_tensor_product/_tensor_product.py:542) (40,767 samples, 1.03%)</title><rect x="78.5172%" y="260" width="1.0290%" height="15" fill="rgb(234,209,42)" fg:x="3110559" fg:w="40767"/><text x="78.7672%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (40,532 samples, 1.02%)</title><rect x="78.5231%" y="276" width="1.0231%" height="15" fill="rgb(227,7,12)" fg:x="3110794" fg:w="40532"/><text x="78.7731%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (40,382 samples, 1.02%)</title><rect x="78.5269%" y="292" width="1.0193%" height="15" fill="rgb(245,203,43)" fg:x="3110944" fg:w="40382"/><text x="78.7769%" y="302.50"></text></g><g><title>forward (torch/nn/modules/container.py:217) (7,633 samples, 0.19%)</title><rect x="79.5499%" y="260" width="0.1927%" height="15" fill="rgb(238,205,33)" fg:x="3151472" fg:w="7633"/><text x="79.7999%" y="270.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,269 samples, 0.18%)</title><rect x="79.5591%" y="276" width="0.1835%" height="15" fill="rgb(231,56,7)" fg:x="3151836" fg:w="7269"/><text x="79.8091%" y="286.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,818 samples, 0.17%)</title><rect x="79.5705%" y="292" width="0.1721%" height="15" fill="rgb(244,186,29)" fg:x="3152287" fg:w="6818"/><text x="79.8205%" y="302.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (5,297 samples, 0.13%)</title><rect x="79.6089%" y="308" width="0.1337%" height="15" fill="rgb(234,111,31)" fg:x="3153808" fg:w="5297"/><text x="79.8589%" y="318.50"></text></g><g><title>forward (score_model.py:34) (51,851 samples, 1.31%)</title><rect x="78.4338%" y="212" width="1.3088%" height="15" fill="rgb(241,149,10)" fg:x="3107256" fg:w="51851"/><text x="78.6838%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (49,336 samples, 1.25%)</title><rect x="78.4973%" y="228" width="1.2453%" height="15" fill="rgb(249,206,44)" fg:x="3109771" fg:w="49336"/><text x="78.7473%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (48,967 samples, 1.24%)</title><rect x="78.5066%" y="244" width="1.2360%" height="15" fill="rgb(251,153,30)" fg:x="3110140" fg:w="48967"/><text x="78.7566%" y="254.50"></text></g><g><title>scatter_mean (torch_scatter/scatter.py:41) (5,613 samples, 0.14%)</title><rect x="79.7926%" y="244" width="0.1417%" height="15" fill="rgb(239,152,38)" fg:x="3161085" fg:w="5613"/><text x="80.0426%" y="254.50"></text></g><g><title>forward (score_model.py:37) (14,675 samples, 0.37%)</title><rect x="79.7860%" y="212" width="0.3704%" height="15" fill="rgb(249,139,47)" fg:x="3160824" fg:w="14675"/><text x="80.0360%" y="222.50"></text></g><g><title>scatter (torch_scatter/scatter.py:156) (14,561 samples, 0.37%)</title><rect x="79.7888%" y="228" width="0.3676%" height="15" fill="rgb(244,64,35)" fg:x="3160938" fg:w="14561"/><text x="80.0388%" y="238.50"></text></g><g><title>forward (e3nn/nn/_batchnorm.py:142) (4,107 samples, 0.10%)</title><rect x="80.3592%" y="260" width="0.1037%" height="15" fill="rgb(216,46,15)" fg:x="3183534" fg:w="4107"/><text x="80.6092%" y="270.50"></text></g><g><title>forward (score_model.py:43) (23,532 samples, 0.59%)</title><rect x="80.1636%" y="212" width="0.5940%" height="15" fill="rgb(250,74,19)" fg:x="3175786" fg:w="23532"/><text x="80.4136%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (23,362 samples, 0.59%)</title><rect x="80.1679%" y="228" width="0.5897%" height="15" fill="rgb(249,42,33)" fg:x="3175956" fg:w="23362"/><text x="80.4179%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (23,073 samples, 0.58%)</title><rect x="80.1752%" y="244" width="0.5824%" height="15" fill="rgb(242,149,17)" fg:x="3176245" fg:w="23073"/><text x="80.4252%" y="254.50"></text></g><g><title>forward (score_model.py:150) (96,982 samples, 2.45%)</title><rect x="78.3097%" y="164" width="2.4480%" height="15" fill="rgb(244,29,21)" fg:x="3102338" fg:w="96982"/><text x="78.5597%" y="174.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (93,416 samples, 2.36%)</title><rect x="78.3997%" y="180" width="2.3580%" height="15" fill="rgb(220,130,37)" fg:x="3105904" fg:w="93416"/><text x="78.6497%" y="190.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (93,067 samples, 2.35%)</title><rect x="78.4085%" y="196" width="2.3492%" height="15" fill="rgb(211,67,2)" fg:x="3106253" fg:w="93067"/><text x="78.6585%" y="206.50">_..</text></g><g><title>forward (torch/nn/modules/container.py:217) (7,183 samples, 0.18%)</title><rect x="80.7773%" y="212" width="0.1813%" height="15" fill="rgb(235,68,52)" fg:x="3200095" fg:w="7183"/><text x="81.0273%" y="222.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (6,858 samples, 0.17%)</title><rect x="80.7855%" y="228" width="0.1731%" height="15" fill="rgb(246,142,3)" fg:x="3200420" fg:w="6858"/><text x="81.0355%" y="238.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (6,434 samples, 0.16%)</title><rect x="80.7962%" y="244" width="0.1624%" height="15" fill="rgb(241,25,7)" fg:x="3200844" fg:w="6434"/><text x="81.0462%" y="254.50"></text></g><g><title>forward (torch/nn/modules/linear.py:116) (4,953 samples, 0.13%)</title><rect x="80.8335%" y="260" width="0.1250%" height="15" fill="rgb(242,119,39)" fg:x="3202325" fg:w="4953"/><text x="81.0835%" y="270.50"></text></g><g><title>forward (score_model.py:152) (7,959 samples, 0.20%)</title><rect x="80.7577%" y="164" width="0.2009%" height="15" fill="rgb(241,98,45)" fg:x="3199320" fg:w="7959"/><text x="81.0077%" y="174.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (7,703 samples, 0.19%)</title><rect x="80.7642%" y="180" width="0.1944%" height="15" fill="rgb(254,28,30)" fg:x="3199576" fg:w="7703"/><text x="81.0142%" y="190.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (7,415 samples, 0.19%)</title><rect x="80.7714%" y="196" width="0.1872%" height="15" fill="rgb(241,142,54)" fg:x="3199864" fg:w="7415"/><text x="81.0214%" y="206.50"></text></g><g><title>forward (score_model.py:155) (8,659 samples, 0.22%)</title><rect x="80.9978%" y="164" width="0.2186%" height="15" fill="rgb(222,85,15)" fg:x="3208833" fg:w="8659"/><text x="81.2478%" y="174.50"></text></g><g><title>forward (score_model.py:158) (7,743 samples, 0.20%)</title><rect x="81.2169%" y="164" width="0.1954%" height="15" fill="rgb(210,85,47)" fg:x="3217514" fg:w="7743"/><text x="81.4669%" y="174.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:307) (1,521,262 samples, 38.40%)</title><rect x="43.1793%" y="116" width="38.3999%" height="15" fill="rgb(224,206,25)" fg:x="1710604" fg:w="1521262"/><text x="43.4293%" y="126.50">vargrad_loss_gradacc (gfn_train.py:307)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1532) (1,521,136 samples, 38.40%)</title><rect x="43.1825%" y="132" width="38.3967%" height="15" fill="rgb(243,201,19)" fg:x="1710730" fg:w="1521136"/><text x="43.4325%" y="142.50">_wrapped_call_impl (torch/nn/modules/module.py:1532)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1541) (1,520,713 samples, 38.39%)</title><rect x="43.1932%" y="148" width="38.3861%" height="15" fill="rgb(236,59,4)" fg:x="1711153" fg:w="1520713"/><text x="43.4432%" y="158.50">_call_impl (torch/nn/modules/module.py:1541)</text></g><g><title>p_differentiable (torus.py:15) (157,965 samples, 3.99%)</title><rect x="82.1433%" y="132" width="3.9874%" height="15" fill="rgb(254,179,45)" fg:x="3254212" fg:w="157965"/><text x="82.3933%" y="142.50">p_di..</text></g><g><title>wrapped (torch/_tensor.py:40) (35,084 samples, 0.89%)</title><rect x="85.2451%" y="148" width="0.8856%" height="15" fill="rgb(226,14,10)" fg:x="3377093" fg:w="35084"/><text x="85.4951%" y="158.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:314) (172,172 samples, 4.35%)</title><rect x="81.7847%" y="116" width="4.3460%" height="15" fill="rgb(244,27,41)" fg:x="3240006" fg:w="172172"/><text x="82.0347%" y="126.50">vargr..</text></g><g><title>vargrad_loss_gradacc (gfn_train.py:315) (4,103 samples, 0.10%)</title><rect x="86.1307%" y="116" width="0.1036%" height="15" fill="rgb(235,35,32)" fg:x="3412178" fg:w="4103"/><text x="86.3807%" y="126.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:320) (130,062 samples, 3.28%)</title><rect x="86.3270%" y="116" width="3.2830%" height="15" fill="rgb(218,68,31)" fg:x="3419957" fg:w="130062"/><text x="86.5770%" y="126.50">var..</text></g><g><title>p_differentiable (torus.py:15) (127,289 samples, 3.21%)</title><rect x="86.3970%" y="132" width="3.2130%" height="15" fill="rgb(207,120,37)" fg:x="3422730" fg:w="127289"/><text x="86.6470%" y="142.50">p_d..</text></g><g><title>wrapped (torch/_tensor.py:40) (28,956 samples, 0.73%)</title><rect x="88.8792%" y="148" width="0.7309%" height="15" fill="rgb(227,98,0)" fg:x="3521063" fg:w="28956"/><text x="89.1292%" y="158.50"></text></g><g><title>_named_members (torch/nn/modules/module.py:2197) (8,708 samples, 0.22%)</title><rect x="89.8006%" y="180" width="0.2198%" height="15" fill="rgb(207,7,3)" fg:x="3557565" fg:w="8708"/><text x="90.0506%" y="190.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (7,970 samples, 0.20%)</title><rect x="89.8192%" y="196" width="0.2012%" height="15" fill="rgb(206,98,19)" fg:x="3558303" fg:w="7970"/><text x="90.0692%" y="206.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (6,574 samples, 0.17%)</title><rect x="89.8544%" y="212" width="0.1659%" height="15" fill="rgb(217,5,26)" fg:x="3559699" fg:w="6574"/><text x="90.1044%" y="222.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (4,708 samples, 0.12%)</title><rect x="89.9015%" y="228" width="0.1188%" height="15" fill="rgb(235,190,38)" fg:x="3561565" fg:w="4708"/><text x="90.1515%" y="238.50"></text></g><g><title>parameters (torch/nn/modules/module.py:2229) (14,981 samples, 0.38%)</title><rect x="89.7852%" y="148" width="0.3782%" height="15" fill="rgb(247,86,24)" fg:x="3556955" fg:w="14981"/><text x="90.0352%" y="158.50"></text></g><g><title>named_parameters (torch/nn/modules/module.py:2262) (14,655 samples, 0.37%)</title><rect x="89.7934%" y="164" width="0.3699%" height="15" fill="rgb(205,101,16)" fg:x="3557281" fg:w="14655"/><text x="90.0434%" y="174.50"></text></g><g><title>grad (torch/autograd/__init__.py:359) (15,297 samples, 0.39%)</title><rect x="89.7791%" y="132" width="0.3861%" height="15" fill="rgb(246,168,33)" fg:x="3556714" fg:w="15297"/><text x="90.0291%" y="142.50"></text></g><g><title>_engine_run_backward (torch/autograd/graph.py:744) (68,465 samples, 1.73%)</title><rect x="90.2541%" y="148" width="1.7282%" height="15" fill="rgb(231,114,1)" fg:x="3575533" fg:w="68465"/><text x="90.5041%" y="158.50"></text></g><g><title>grad (torch/autograd/__init__.py:412) (68,796 samples, 1.74%)</title><rect x="90.2458%" y="132" width="1.7366%" height="15" fill="rgb(207,184,53)" fg:x="3575205" fg:w="68796"/><text x="90.4958%" y="142.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:324) (91,208 samples, 2.30%)</title><rect x="89.6804%" y="116" width="2.3023%" height="15" fill="rgb(224,95,51)" fg:x="3552803" fg:w="91208"/><text x="89.9304%" y="126.50">v..</text></g><g><title>vargrad_loss_gradacc (gfn_train.py:325) (9,788 samples, 0.25%)</title><rect x="91.9826%" y="116" width="0.2471%" height="15" fill="rgb(212,188,45)" fg:x="3644011" fg:w="9788"/><text x="92.2326%" y="126.50"></text></g><g><title>vargrad_loss_gradacc (gfn_train.py:328) (283,774 samples, 7.16%)</title><rect x="92.2474%" y="116" width="7.1631%" height="15" fill="rgb(223,154,38)" fg:x="3654501" fg:w="283774"/><text x="92.4974%" y="126.50">vargrad_lo..</text></g><g><title>empty_cache (torch/cuda/memory.py:162) (283,453 samples, 7.15%)</title><rect x="92.2555%" y="132" width="7.1550%" height="15" fill="rgb(251,22,52)" fg:x="3654822" fg:w="283453"/><text x="92.5055%" y="142.50">empty_cach..</text></g><g><title>gfn_sgd (gfn_train.py:408) (2,347,952 samples, 59.27%)</title><rect x="40.1432%" y="100" width="59.2673%" height="15" fill="rgb(229,209,22)" fg:x="1590324" fg:w="2347952"/><text x="40.3932%" y="110.50">gfn_sgd (gfn_train.py:408)</text></g><g><title>named_modules (torch/nn/modules/module.py:2403) (4,593 samples, 0.12%)</title><rect x="99.4172%" y="228" width="0.1159%" height="15" fill="rgb(234,138,34)" fg:x="3938539" fg:w="4593"/><text x="99.6672%" y="238.50"></text></g><g><title>_named_members (torch/nn/modules/module.py:2197) (4,694 samples, 0.12%)</title><rect x="99.4148%" y="148" width="0.1185%" height="15" fill="rgb(212,95,11)" fg:x="3938444" fg:w="4694"/><text x="99.6648%" y="158.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (4,680 samples, 0.12%)</title><rect x="99.4151%" y="164" width="0.1181%" height="15" fill="rgb(240,179,47)" fg:x="3938458" fg:w="4680"/><text x="99.6651%" y="174.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (4,656 samples, 0.12%)</title><rect x="99.4157%" y="180" width="0.1175%" height="15" fill="rgb(240,163,11)" fg:x="3938482" fg:w="4656"/><text x="99.6657%" y="190.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (4,633 samples, 0.12%)</title><rect x="99.4163%" y="196" width="0.1169%" height="15" fill="rgb(236,37,12)" fg:x="3938505" fg:w="4633"/><text x="99.6663%" y="206.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2409) (4,611 samples, 0.12%)</title><rect x="99.4169%" y="212" width="0.1164%" height="15" fill="rgb(232,164,16)" fg:x="3938527" fg:w="4611"/><text x="99.6669%" y="222.50"></text></g><g><title>parameters (torch/nn/modules/module.py:2229) (5,405 samples, 0.14%)</title><rect x="99.4144%" y="116" width="0.1364%" height="15" fill="rgb(244,205,15)" fg:x="3938430" fg:w="5405"/><text x="99.6644%" y="126.50"></text></g><g><title>named_parameters (torch/nn/modules/module.py:2262) (5,394 samples, 0.14%)</title><rect x="99.4147%" y="132" width="0.1362%" height="15" fill="rgb(223,117,47)" fg:x="3938441" fg:w="5394"/><text x="99.6647%" y="142.50"></text></g><g><title>gfn_sgd (gfn_train.py:473) (5,424 samples, 0.14%)</title><rect x="99.4140%" y="100" width="0.1369%" height="15" fill="rgb(244,107,35)" fg:x="3938412" fg:w="5424"/><text x="99.6640%" y="110.50"></text></g><g><title>&lt;module&gt; (train.py:151) (3,958,027 samples, 99.91%)</title><rect x="0.0595%" y="68" width="99.9091%" height="15" fill="rgb(205,140,8)" fg:x="2358" fg:w="3958027"/><text x="0.3095%" y="78.50">&lt;module&gt; (train.py:151)</text></g><g><title>train (train.py:70) (3,945,050 samples, 99.58%)</title><rect x="0.3871%" y="84" width="99.5815%" height="15" fill="rgb(228,84,46)" fg:x="15335" fg:w="3945050"/><text x="0.6371%" y="94.50">train (train.py:70)</text></g><g><title>gfn_sgd (gfn_train.py:479) (14,771 samples, 0.37%)</title><rect x="99.5957%" y="100" width="0.3729%" height="15" fill="rgb(254,188,9)" fg:x="3945614" fg:w="14771"/><text x="99.8457%" y="110.50"></text></g><g><title>empty_cache (torch/cuda/memory.py:162) (14,769 samples, 0.37%)</title><rect x="99.5958%" y="116" width="0.3728%" height="15" fill="rgb(206,112,54)" fg:x="3945616" fg:w="14769"/><text x="99.8458%" y="126.50"></text></g><g><title>all (3,961,629 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="3961629"/><text x="0.2500%" y="62.50"></text></g></svg></svg>